// Last file update: 06 Nov 2014, 2.30pm (Chinese, Indonesian, German, Dutch languages are separated to raw HTML files)
// This data is from http://en.wikipedia.org/wiki/World_language
// 1. English -> approximately 2 Billion speakers (VisuAlgo default language)
// 2. Chinese/Mandarin -> approximately 1 Billion speakers (3 translators)
//   Spanish -> approximately 520 Million speakers (not available yet, waiting for volunteers)
//   Hindustani -> approximately 480 Million speakers (not available yet, waiting for volunteers)
//   Arabic -> approximately 350 Million speakers (not available yet, waiting for volunteers)
// 3. Russian -> approximately 270 Million speakers (1 translator)
// 4. Indonesian/Malay -> approximately 250 Million speakers (3 translators)
//   French -> approximately 230 Million speakers (not available yet, waiting for volunteers)
//   Portuguese -> approximately 220 Million speakers (not available yet, waiting for volunteers)
// 5. Bengali -> approximately 210 Million speakers (3 translators)
// 6. Japanese -> approximately 100 Million speakers (1 translator)
// 7. German -> approximately 86 Million speakers (2 translators)
// 8. Korean -> approximately 77 Million speakers (2 translators)
// 9. Vietnamese -> approximately 75 Million speakers (1 translator)
// 10. Thai -> approximately 40 Million speakers (1 translator)
// 11. Dutch -> approximately 28 Million speakers (1 translator)

var language = 'en'; // the default language is en-US (English)
var searchtext = 'Search...';
var sorting, bitmask, linked, bst, heap, graphs, union, segment, bit, recursion, traversal, mst, sssp, maxflow, matching, suffixtree, suffixarray, geometry, hashtable;

function changeLanguage() {
  // console.log('I am called, language = ' + language + ' window = ' +  window.navigator.language.substring(0, 2));
  if (language == 'zh') { // Chinese: zh-Hans, zh-cn, zh-hans-cn, zh-hans-sg, zh-Hant, zh-hk, zh-tw, zh-hant-hk, zh-hant-mo, zh-hant-tw, Contributors: Wang Zi, Pan Long, Huang Da
    sorting = new Array("sorting", "å†’æ³¡", "é€‰æ‹©", "æ’å…¥", "å½’å¹¶", "å¿«é€Ÿ", "éšæœºå¿«é€Ÿ", "é€‰æ‹©", "æ’å…¥", "è®¡æ•°", "åŸºæ•°", "æŽ’åº", "cs2020", "cs1020", "cs1010", "cs3230", "æ•°ç»„", "é“¾è¡¨", "æ•°æ®ç»“æž„", "ç®—æ³•", "æŽ’åº");
    bitmask = new Array("bitmask", "ä½æ“ä½œ", "å¸ƒå°”å€¼", "æ•°ç»„", "å°åž‹é›†åˆ", "cs3233", "cs2020", "cs2010", "é“¾è¡¨", "æ•°æ®ç»“æž„", "ä½è¿ç®—");
    linked = new Array("linked", "æ ˆ", "é˜Ÿåˆ—", "å•å‘", "åŒå‘", "åŒç«¯é˜Ÿåˆ—", "cs2020", "cs1020", "æ•°ç»„", "æ•°æ®ç»“æž„", "é“¾æŽ¥", "çº¿æ€§è¡¨");
    bst = new Array("bst", "è¡¨","é›†åˆ(set)","å¯¹åº”è¡¨(map)","äºŒå‰æœç´¢æ ‘","Adelson-Velskii Landis (AVL)","cs2020","cs2010","cs3230", "é€’å½’","é€’å½’","æ•°æ®ç»“æž„","AVL","å¹³è¡¡äºŒå‰æŸ¥æ‰¾æ ‘");
    heap = new Array("heap", "å †","ä¼˜å…ˆé˜Ÿåˆ—","å †æŽ’åº","é€’å½’","cs2020", "cs2010","é€’å½’","æ•°æ®ç»“æž„", "æ ‘", "äºŒå‰å †");
    graphs = new Array("graphs", "æ ‘", "å®Œå…¨å›¾","äºŒåˆ†å›¾","æœ‰å‘æ— çŽ¯å›¾ (DAG)","é‚»æŽ¥çŸ©é˜µ","é‚»æŽ¥è¡¨","è¾¹è¡¨","cs2010","cs2020","å›¾");
    union = new Array("union", "å¹¶æŸ¥é›†","æ ‘","åŽ‹ç¼©","ç§©","è·¯å¾„åŽ‹ç¼©","æŒ‰ç§©åˆå¹¶","cs3233","cs2020","cs2010","æ•°ç»„","é›†åˆ","é€’å½’","é€’å½’","æ•°æ®ç»“æž„","å¹¶æŸ¥é›†");
    segment = new Array("segmenttree", "åŒºé—´","æœ€å°/æœ€å¤§/æ±‚å’Œ","æƒ°æ€§æ›´æ–°","é€’å½’","cs3233","é€’å½’","æ•°æ®ç»“æž„","çº¿æ®µæ ‘");
    bit = new Array("bit", "æ ‘çŠ¶æ•°ç»„", "åŒºé—´", "æ ‘çŠ¶æ•°ç»„", "åŒºé—´/ç‚¹çš„æŸ¥è¯¢/æ›´æ–°", "cs3233", "é€’å½’","é€’å½’","æ•°æ®ç»“æž„","æ ‘çŠ¶æ•°ç»„");
    
    recursion = new Array("recursion", "åŠ¨æ€è§„åˆ’","æ ‘","æœ‰å‘æ— çŽ¯å›¾","cs1010", "cs1020", "cs2010","cs2020","cs3230","cs3233","é€’å½’","é€’å½’");
    
    traversal = new Array("traversal", "éåŽ†","æ·±åº¦ä¼˜å…ˆæœç´¢","å¹¿åº¦ä¼˜å…ˆæœç´¢","æ‹“æ‰‘æŽ’åº","å¼ºè¿žé€šåˆ†é‡","2-SAT","æ‹“æ‰‘æŽ’åº","å¼ºè¿žé€šåˆ†é‡","äºŒåˆ†å›¾æ ¡éªŒ", "cs2010", "cs2020","cs3230","ç®—æ³•","Tarjan","Kosaraju","Kahn","å›¾å½¢","éåŽ†");
    mst = new Array("mst", "Prim", "Kruskal", "ç®—æ³•", "cs2020", "cs2010", "å›¾", "æœ€å°", "ç”Ÿæˆ", "æ ‘");
    sssp = new Array("sssp", "å¹¿åº¦ä¼˜å…ˆæœç´¢", "Bellman Ford", "Dijkstra", "cs2010", "cs2020", "å›¾", "ç®—æ³•", "å•æºæœ€çŸ­è·¯å¾„");
    maxflow = new Array("maxflow", "æœ€å¤§æµ", "æœ€å°å‰²", "Edmonds Karp", "Dinic", "Ford Fulkerson", "å›¾", "cs2020", "cs3233", "ç®—æ³•", "ç½‘ç»œæµ");
    matching = new Array("matching", "å¢žå¹¿è·¯å¾„", "Hopcroft Karp", "Edmonds", "cs3233", "å›¾","ç®—æ³•", "åŒ¹é…");
    
    suffixtree = new Array("suffixtree", "åŒ¹é…", "é‡å¤", "å…±æœ‰", "å­—ç¬¦ä¸²", "cs3233", "æ ‘","åŽç¼€","æ•°æ®ç»“æž„","åŽç¼€æ ‘");
    suffixarray = new Array("suffixarray", "æŽ’åº", "æœ€é•¿å…¬å…±å‰ç¼€", "å­—ç¬¦ä¸²","æŽ’åº","åŒ¹é…","é‡å¤","å…±æœ‰","åŽç¼€æ•°ç»„", "cs3233", "åŽç¼€", "æ•°ç»„", "æ•°æ®ç»“æž„");
    
    geometry = new Array("geometry", "å¤šè¾¹å½¢","å‘¨é•¿","å‡¸å¤šè¾¹å½¢","å·æ•°","å¤šè¾¹å½¢åŒ…å«","å¤šè¾¹å½¢åˆ‡å‰²","å‡¹å¤šè¾¹å½¢","å‡¸åŒ…","Graham æ‰«æ", "cs3233","ç®—æ³•","è®¡ç®—å‡ ä½•");
  }
  else if (language == 'ru') { // Russian: ru, ru-ru. Contributors: Mikhail Goncharov
    $("#training-link").html("ÐŸÑ€Ð¾Ð¹Ñ‚Ð¸ Ñ‚ÐµÑÑ‚!");
    $("#test-link").html("ÐŸÑ€Ð¸ÑÐ¾ÐµÐ´Ð¸Ð½Ð¸Ñ‚ÑŒÑÑ Ðº Ñ‚ÐµÐºÑƒÑ‰ÐµÐ¼Ñƒ Ñ‚ÐµÑÑ‚Ñƒ");
    $("#ans-link").html("ÐžÑ‚Ð²ÐµÑ‚Ñ‹ Ð½Ð° Ð¿Ð¾ÑÐ»ÐµÐ´Ð½Ð¸Ð¹ Ñ‚ÐµÑÑ‚");

    searchtext = "ÐÐ°Ð¹Ñ‚Ð¸...";

    sorting = new Array("sorting", "Ð¿ÑƒÐ·Ñ‹Ñ€ÑŒÐºÐ¾Ð¼", "Ð²Ñ‹Ð±Ð¾Ñ€Ð¾Ð¼", "Ð²ÑÑ‚Ð°Ð²ÐºÐ°Ð¼Ð¸", "ÑÐ»Ð¸ÑÐ½Ð¸ÐµÐ¼", "Ð±Ñ‹ÑÑ‚Ñ€Ð°Ñ", "Ð±Ñ‹ÑÑ‚Ñ€Ð°Ñ ÑÐ¾ ÑÐ»ÑƒÑ‡Ð°Ð¹Ð½Ð¾ÑÑ‚ÑŒÑŽ", "Ð²Ñ‹Ð±Ð¾Ñ€", "Ð²ÑÑ‚Ð°Ð²ÐºÐ°", "Ð¿Ð¾Ð´ÑÑ‡ÐµÑ‚", "Ð¿Ð¾Ñ€Ð°Ð·Ñ€Ð°Ð·Ð´Ð½Ð°Ñ", "ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ°", "cs2020", "cs1020", "cs1010", "cs3230", "Ð¼Ð°ÑÑÐ¸Ð²", "Ð»Ð¸ÑÑ‚", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ°");
    bitmask = new Array("bitmask", "Ð±Ð¸Ñ‚Ð¾Ð²Ñ‹Ðµ Ð¾Ð¿ÐµÑ€Ð°Ñ†Ð¸Ð¸", "Ð»Ð¾Ð³Ð¸Ñ‡ÐµÑÐºÐ¾Ðµ", "Ð¼Ð°ÑÑÐ¸Ð²", "Ð½ÐµÐ±Ð¾Ð»ÑŒÑˆÐ¾Ðµ Ð¼Ð½Ð¾Ð¶ÐµÑÑ‚Ð²Ð¾", "cs3233", "cs2020", "cs2010", "ÑÐ¿Ð¸ÑÐ¾Ðº", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð±Ð¸Ñ‚Ð¾Ð²Ð°Ñ Ð¼Ð°ÑÐºÐ°");
    linked = new Array("linked", "ÑÑ‚ÐµÐº", "Ð¾Ñ‡ÐµÑ€ÐµÐ´ÑŒ", "Ð¾Ð´Ð½Ð¾ÑÐ²ÑÐ·Ð½Ñ‹Ð¹", "Ð´Ð²ÑƒÑÐ²ÑÐ·Ð½Ñ‹Ð¹", "Ð´ÐµÐº", "cs2020", "cs1020", "Ð¼Ð°ÑÑÐ¸Ð²", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "ÑÐ²ÑÐ·Ð½Ñ‹Ð¹", "Ð»Ð¸ÑÑ‚");

    bst = new Array("bst", "Ñ‚Ð°Ð±Ð»Ð¸Ñ†Ð°", "Ð¼Ð½Ð¾Ð¶ÐµÑÑ‚Ð²Ð¾", "ÑÐ»Ð¾Ð²Ð°Ñ€ÑŒ", "BST", "ÐÐ´ÐµÐ»ÑŒÑÐ¾Ð½-Ð’ÐµÐ»ÑŒÑÐºÐ¸Ð¹ Ð›Ð°Ð½Ð´Ð¸Ñ", "cs2020", "cs2010", "cs3230", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "ÐÐ’Ð›", "Ð´Ð²Ð¾Ð¸Ñ‡Ð½Ð¾Ðµ Ð´ÐµÑ€ÐµÐ²Ð¾ Ð¿Ð¾Ð¸ÑÐºÐ°");
    heap = new Array("heap", "Ð¾Ñ‡ÐµÑ€ÐµÐ´ÑŒ Ñ Ð¿Ñ€Ð¸Ð¾Ñ€Ð¸Ñ‚ÐµÑ‚Ð°Ð¼Ð¸", "ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ° ÐºÑƒÑ‡ÐµÐ¹", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ", "cs2020", "cs2010", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð±Ð¸Ð½Ð°Ñ€Ð½Ð°Ñ ÐºÑƒÑ‡Ð°");
    graphs = new Array("graphs", "Ð´ÐµÑ€ÐµÐ²Ð¾", "Ð¿Ð¾Ð»Ð½Ñ‹Ð¹", "Ð´Ð²ÑƒÐ´Ð¾Ð»ÑŒÐ½Ñ‹Ð¹ (Ð±Ð¸Ð³Ñ€Ð°Ñ„)", "Ð½Ð°Ð¿Ñ€Ð°Ð²Ð»ÐµÐ½Ð½Ñ‹Ð¹ Ð°Ñ†Ð¸ÐºÐ»Ð¸Ñ‡ÐµÑÐºÐ¸Ð¹ Ð³Ñ€Ð°Ñ„", "Ð¼Ð°Ñ‚Ñ€Ð¸Ñ†Ð° ÑÐ¼ÐµÐ¶Ð½Ð¾ÑÑ‚Ð¸", "ÑÐ¿Ð¸ÑÐ¾Ðº ÑÐ¼ÐµÐ¶Ð½Ð¾ÑÑ‚Ð¸", "ÑÐ¿Ð¸ÑÐ¾Ðº Ñ€ÐµÐ±ÐµÑ€", "cs2010", "cs2020", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð³Ñ€Ð°Ñ„Ñ‹");
    union = new Array("union", "UFDS", "Ð´ÐµÑ€ÐµÐ²Ð¾", "ÑÐ¶Ð°Ñ‚Ð¸Ðµ", "Ñ€Ð°Ð½Ð³", "ÑÐ¶Ð°Ñ‚Ð¸Ðµ Ð¿ÑƒÑ‚Ð¸", "Ð¾Ð±ÑŠÐµÐ´Ð¸Ð½ÐµÐ½Ð¸Ðµ Ð¿Ð¾ Ñ€Ð°Ð½Ð³Ñƒ", "cs3233", "cs2020", "cs2010", "Ð¼Ð°ÑÑÐ¸Ð²", "Ð¼Ð½Ð¾Ð¶ÐµÑÑ‚Ð²Ð¾", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "ÑÐ¸ÑÑ‚ÐµÐ¼Ð° Ð½ÐµÐ¿ÐµÑ€ÐµÑÐµÐºÐ°ÑŽÑ‰Ð¸Ñ…ÑÑ Ð¼Ð½Ð¾Ð¶ÐµÑÑ‚Ð²");
    segment = new Array("segmenttree", "Ð¾Ñ‚Ñ€ÐµÐ·Ð¾Ðº", "Ð¼Ð¸Ð½Ð¸Ð¼ÑƒÐ¼/Ð¼Ð°ÐºÑÐ¸Ð¼ÑƒÐ¼/ÑÑƒÐ¼Ð¼Ð°", "Ð»ÐµÐ½Ð¸Ð²Ð¾Ðµ Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ", "cs3233", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð´ÐµÑ€ÐµÐ²Ð¾ Ð¾Ñ‚Ñ€ÐµÐ·ÐºÐ¾Ð²");
    bit = new Array("bit", "Ð¤ÐµÐ½Ð²Ð¸Ðº", "Ð¾Ñ‚Ñ€ÐµÐ·Ð¾Ðº", "BIT", "Ð¾Ñ‚Ñ€ÐµÐ·Ð¾Ðº/Ð·Ð°Ð¿Ñ€Ð¾Ñ Ð² Ñ‚Ð¾Ñ‡ÐºÐµ/Ð¾Ð±Ð½Ð¾Ð²Ð»ÐµÐ½Ð¸Ðµ", "cs3233", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ñ‹Ð¹", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð´Ð²Ð¾Ð¸Ñ‡Ð½Ð¾Ðµ Ð¸Ð½Ð´ÐµÐºÑÐ¸Ñ€Ð¾Ð²Ð°Ð½Ð½Ð¾Ðµ Ð´ÐµÑ€ÐµÐ²Ð¾");

    recursion = new Array("recursion", "Ð´Ð¸Ð½Ð°Ð¼Ð¸Ñ‡ÐµÑÐºÐ¾Ðµ Ð¿Ñ€Ð¾Ð³Ñ€Ð°Ð¼Ð¼Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ðµ", "Ð´ÐµÑ€ÐµÐ²Ð¾", "Ð½Ð°Ð¿Ñ€Ð°Ð²Ð»ÐµÐ½Ð½Ñ‹Ð¹ Ð°Ñ†Ð¸ÐºÐ»Ð¸Ñ‡ÐµÑÐºÐ¸Ð¹ Ð³Ñ€Ð°Ñ„ (DAG)", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ", "Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ");

    traversal = new Array("traversal", "Ð¿Ð¾Ð¸ÑÐº Ð² Ð³Ð»ÑƒÐ±Ð¸Ð½Ñƒ", "Ð¿Ð¾Ð¸ÑÐº Ð² ÑˆÐ¸Ñ€Ð¸Ð½Ñƒ", "toposort", "SCC", "Ð·Ð°Ð´Ð°Ñ‡Ð° Ð²Ñ‹Ð¿Ð¾Ð»Ð½Ð¸Ð¼Ð¾ÑÑ‚Ð¸ 2-ÐšÐÐ¤", "Ñ‚Ð¾Ð¿Ð¾Ð»Ð¾Ð³Ð¸Ñ‡ÐµÑÐºÐ°Ñ ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ°", "ÑÐ¸Ð»ÑŒÐ½Ð¾ ÑÐ²ÑÐ·Ð½Ñ‹Ðµ ÐºÐ¾Ð¼Ð¿Ð¾Ð½ÐµÐ½Ñ‚Ñ‹", "Ð¿Ñ€Ð¾Ð²ÐµÑ€ÐºÐ° Ð½Ð° Ð´Ð²ÑƒÐ´Ð¾Ð»ÑŒÐ½Ð¾ÑÑ‚ÑŒ", "cs2010", "cs2020", "cs3230", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "Ð¢Ð°Ñ€ÑŒÑÐ½", "ÐšÐ¾ÑÐ°Ñ€Ð°Ð´Ð¶Ð¸", "ÐšÐ°Ð½", "Ð³Ñ€Ð°Ñ„Ñ‹", "Ð¾Ð±Ñ…Ð¾Ð´");
    mst = new Array("mst", "MST", "ÐŸÑ€Ð¸Ð¼", "ÐšÑ€ÑƒÑÐºÐ°Ð»", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "cs2020", "cs2010", "Ð³Ñ€Ð°Ñ„Ñ‹", "Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑŒÐ½Ð¾Ðµ", "Ð¾ÑÑ‚Ð¾Ð²Ð½Ð¾Ðµ", "Ð´ÐµÑ€ÐµÐ²Ð¾");
    sssp = new Array("sssp", "SSSP", "Ð‘ÐµÐ»Ð»Ð¼Ð°Ð½ â€” Ð¤Ð¾Ñ€Ð´", "Ð”ÐµÐ¹ÐºÑÑ‚Ñ€Ð°", "Ð¿Ð¾Ð¸ÑÐº Ð² ÑˆÐ¸Ñ€Ð¸Ð½Ñƒ", "cs2010", "cs2020", "Ð³Ñ€Ð°Ñ„Ñ‹", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "ÐºÑ€Ð°Ñ‚Ñ‡Ð°Ð¹ÑˆÐ¸Ðµ Ð¿ÑƒÑ‚Ð¸ Ð¸Ð· Ð¾Ð´Ð½Ð¾Ð¹ Ð²ÐµÑ€ÑˆÐ¸Ð½Ñ‹");
    maxflow = new Array("maxflow", "Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑŒÐ½Ñ‹Ð¹ Ð¿Ð¾Ñ‚Ð¾Ðº", "Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑŒÐ½Ñ‹Ð¹ Ñ€Ð°Ð·Ñ€ÐµÐ·", "Ð­Ð´Ð¼Ð¾Ð½Ð´Ñ ÐšÐ°Ñ€Ð¿", "Ð”Ð¸Ð½Ð¸Ñ†", "Ð¤Ð¾Ñ€Ð´ Ð¤Ð°Ð»ÐºÐµÑ€ÑÐ¾Ð½", "Ð³Ñ€Ð°Ñ„Ñ‹", "cs2020", "cs3233", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "Ð¿Ð¾Ñ‚Ð¾Ðº Ð² ÑÐµÑ‚Ð¸");
    matching = new Array("matching", "ÑƒÐ²ÐµÐ»Ð¸Ñ‡Ð¸Ð²Ð°ÑŽÑ‰Ð¸Ð¹ Ð¿ÑƒÑ‚ÑŒ", "Ð¥Ð¾Ð¿ÐºÑ€Ð¾Ñ„Ñ‚ ÐšÐ°Ñ€Ð¿", "Ð­Ð´Ð¼Ð¾Ð½Ð´Ñ", "cs3233", "Ð³Ñ€Ð°Ñ„Ñ‹", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "ÑÐ¾Ð¿Ð¾ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ")

    suffixtree = new Array("suffixtree", "ÑÐ¾Ð¿Ð¾ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ", "Ð¿Ð¾Ð²Ñ‚Ð¾Ñ€ÑÑŽÑ‰Ð¸Ð¹ÑÑ", "Ð¾Ð±Ñ‰Ð¸Ð¹", "ÑÑ‚Ñ€Ð¾ÐºÐ°", "cs3233", "Ð´ÐµÑ€ÐµÐ²Ð¾", "ÑÑƒÑ„Ñ„Ð¸ÐºÑ", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "Ð´ÐµÑ€ÐµÐ²Ð¾ ÑÑƒÑ„Ñ„Ð¸ÐºÑÐ¾Ð²");
    suffixarray = new Array("suffixarray", "ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ°", "Ð¾Ð±Ñ‰Ð¸Ð¹ Ð¿Ñ€ÐµÑ„Ð¸ÐºÑ", "ÑÑ‚Ñ€Ð¾ÐºÐ°", "Ð½Ð°Ð¸Ð±Ð¾Ð»ÑŒÑˆÐ°Ð¹ Ð¾Ð±Ñ‰Ð¸Ð¹ Ð¿Ñ€ÐµÑ„Ð¸ÐºÑ", "ÑÐ¾Ð¿Ð¾ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ", "ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ°", "Ð¿Ð¾Ð²Ñ‚Ð¾Ñ€ÑÑŽÑ‰Ð¸Ð¹ÑÑ", "Ð¾Ð±Ñ‰Ð¸Ð¹", "cs3233", "ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð° Ð´Ð°Ð½Ð½Ñ‹Ñ…", "ÑÑƒÑ„Ñ„Ð¸ÐºÑ", "Ð¼Ð°ÑÑÐ¸Ð²", "Ð¼Ð°ÑÑÐ¸Ð² ÑÑƒÑ„Ñ„Ð¸ÐºÑÐ¾Ð²");

    geometry = new Array("geometry", "Ð¼Ð½Ð¾Ð³Ð¾ÑƒÐ³Ð¾Ð»ÑŒÐ½Ð¸Ðº", "Ð¸Ð½Ð´ÐµÐºÑ ÐºÐ¾Ð½Ñ‚ÑƒÑ€Ð°", "Ð²Ð½ÑƒÑ‚Ñ€Ð¸ Ð¿Ð¾Ð»Ð¸Ð³Ð¾Ð½Ð°", "Ñ€Ð°Ð·Ñ€ÐµÐ· Ð¼Ð½Ð¾Ð³Ð¾ÑƒÐ³Ð¾Ð»ÑŒÐ½Ð¸ÐºÐ°", "Ð¿ÐµÑ€Ð¸Ð¼ÐµÑ‚Ñ€", "Ð²Ñ‹Ð¿ÑƒÐºÐ»Ñ‹Ð¹", "Ð½ÐµÐ²Ñ‹Ð¿ÑƒÐºÐ»Ñ‹Ð¹", "Ð²Ñ‹Ð¿ÑƒÐºÐ»Ð°Ñ Ð¾Ð±Ð¾Ð»Ð¾Ñ‡ÐºÐ°", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼ Ð“Ñ€ÑÑ…ÐµÐ¼Ð°", "cs3233", "Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼", "Ð²Ñ‹Ñ‡Ð¸ÑÐ»Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð°Ñ Ð³ÐµÐ¾Ð¼ÐµÑ‚Ñ€Ð¸Ñ");

    $("#subtitle").html("Ð°Ð½Ð¸Ð¼Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð½Ñ‹Ðµ Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¸ ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€ Ð´Ð°Ð½Ð½Ñ‹Ñ… (Russian)");
    $("#sortingtext").html("Ð¡Ð¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ°");
    $("#bitmasktext").html("Ð‘Ð¸Ñ‚Ð¾Ð²Ð°Ñ Ð¼Ð°ÑÐºÐ°");
    $("#linkedtext").html("Ð¡Ð²ÑÐ·Ð½Ñ‹Ð¹ ÑÐ¿Ð¸ÑÐ¾Ðº, ÑÑ‚ÐµÐº, Ð¾Ñ‡ÐµÑ€ÐµÐ´ÑŒ, Ð´ÐµÐº");
    $("#bsttext").html("Ð”Ð²Ð¾Ð¸Ñ‡Ð½Ð¾Ðµ Ð´ÐµÑ€ÐµÐ²Ð¾ Ð¿Ð¾Ð¸ÑÐºÐ°, ÐÐ’Ð›-Ð´ÐµÑ€ÐµÐ²Ð¾");
    $("#heaptext").html("Ð”Ð²Ð¾Ð¸Ñ‡Ð½Ð°Ñ ÐºÑƒÑ‡Ð°");
    $("#graphstext").html("Ð¡Ñ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ñ‹ Ð´Ð°Ð½Ð½Ñ‹Ñ… Ð´Ð»Ñ Ð¿Ñ€ÐµÐ´ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ñ Ð³Ñ€Ð°Ñ„Ð¾Ð²");
    $("#uniontext").html("Ð¡Ð¸ÑÑ‚ÐµÐ¼Ð° Ð½ÐµÐ¿ÐµÑ€ÐµÑÐµÐºÐ°ÑŽÑ‰Ð¸Ñ…ÑÑ Ð¼Ð½Ð¾Ð¶ÐµÑÑ‚Ð²");
    $("#segmenttreetext").html("Ð”ÐµÑ€ÐµÐ²Ð¾ Ð¾Ñ‚Ñ€ÐµÐ·ÐºÐ¾Ð²");
    $("#bittext").html("Ð”Ð²Ð¾Ð¸Ñ‡Ð½Ð¾Ðµ Ð¸Ð½Ð´ÐµÐºÑÐ¸Ñ€Ð¾Ð²Ð°Ð½Ð½Ð¾Ðµ Ð´ÐµÑ€ÐµÐ²Ð¾");
    $("#recursiontext").html("Ð”ÐµÑ€ÐµÐ²Ð¾ Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð¸/Ð½Ð°Ð¿Ñ€Ð°Ð²Ð»ÐµÐ½Ð½Ñ‹Ð¹ Ð°Ñ†Ð¸ÐºÐ»Ð¸Ñ‡ÐµÑÐºÐ¸Ð¹ Ð³Ñ€Ð°Ñ„");
    $("#traversaltext").html("ÐžÐ±Ñ…Ð¾Ð´ Ð³Ñ€Ð°Ñ„Ð°");
    $("#msttext").html("ÐœÐ¸Ð½Ð¸Ð¼Ð°Ð»ÑŒÐ½Ð¾Ðµ Ð¾ÑÑ‚Ð¾Ð²Ð½Ð¾Ðµ Ð´ÐµÑ€ÐµÐ²Ð¾");
    $("#sssptext").html("ÐšÑ€Ð°Ñ‚Ñ‡Ð°Ð¹ÑˆÐ¸Ðµ Ð¿ÑƒÑ‚Ð¸ Ð¸Ð· Ð¾Ð´Ð½Ð¾Ð¹ Ð²ÐµÑ€ÑˆÐ¸Ð½Ñ‹");
    $("#maxflowtext").html("ÐŸÐ¾Ñ‚Ð¾Ðº Ð² ÑÐµÑ‚Ð¸");
    $("#matchingtext").html("Ð¡Ð¾Ð¿Ð¾ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ Ð³Ñ€Ð°Ñ„Ð¾Ð²");
    $("#suffixtreetext").html("Ð”ÐµÑ€ÐµÐ²Ð¾ ÑÑƒÑ„Ñ„Ð¸ÐºÑÐ¾Ð²");
    $("#suffixarraytext").html("ÐœÐ°ÑÑÐ¸Ð² ÑÑƒÑ„Ñ„Ð¸ÐºÑÐ¾Ð²");
    $("#geometrytext").html("(Ð’Ñ‹Ñ‡Ð¸ÑÐ»Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð°Ñ) Ð³ÐµÐ¾Ð¼ÐµÑ‚Ñ€Ð¸Ñ");
    $("#abouttext").html("Ðž VisuAlgo");

    $("#motivation").html("<h2>ÐŸÑ€Ð¸Ñ‡Ð¸Ð½Ð° ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ñ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">ÐšÐ¾Ð½Ñ†ÐµÐ¿Ñ†Ð¸Ñ VisuAlgo Ð±Ñ‹Ð»Ð° Ð¿Ñ€Ð¸Ð´ÑƒÐ¼Ð°Ð½Ð° Ð² 2011 Ð´Ð¾ÐºÑ‚Ð¾Ñ€Ð¾Ð¼ Steven Halim (Ð¡Ñ‚Ð¸Ð²ÐµÐ½ Ð¥Ð°Ð»Ð¸Ð¼) ÐºÐ°Ðº Ð¸Ð½ÑÑ‚Ñ€ÑƒÐ¼ÐµÐ½Ñ‚ Ð´Ð»Ñ ÐµÐ³Ð¾ ÑÑ‚ÑƒÐ´ÐµÐ½Ñ‚Ð¾Ð² Ð´Ð»Ñ Ð¿Ð¾Ð¼Ð¾Ð³Ð°ÑŽÑ‰Ð¸Ð¹ Ð»ÑƒÑ‡ÑˆÐµ Ñ€Ð°Ð·Ð¾Ð±Ñ€Ð°Ñ‚ÑŒÑÑ Ð² ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð°Ñ… Ð´Ð°Ð½Ð½Ñ‹Ñ… Ð¸ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð°Ñ…. " +
    "Ð¡Ñ‚ÑƒÐ´ÐµÐ½Ñ‚Ñ‹ Ð¼Ð¾Ð³ÑƒÑ‚ Ð¸Ð·ÑƒÑ‡Ð°Ñ‚ÑŒ Ð¾ÑÐ½Ð¾Ð²Ñ‹ ÑÐ°Ð¼Ð¾ÑÑ‚Ð¾ÑÑ‚ÐµÐ»ÑŒÐ½Ð¾ Ð¸ Ð² ÐºÐ¾Ð¼Ñ„Ð¾Ñ‚Ð½Ð¾Ð¼ Ñ‚ÐµÐ¼Ð¿Ðµ. VisuAlgo â€” ÑÑ‚Ð¾ Ð¿Ð¾ÑÑ‚Ð¾ÑÐ½Ð½Ð¾ Ð´Ð¾ÑÑ‚ÑƒÐ¿Ð½Ñ‹Ð¹ Ð´Ð²Ð¾Ð¹Ð½Ð¸Ðº Ð´Ð¾ÐºÑ‚Ð¾Ñ€Ð°. " +
    "Ð’Ð¼ÐµÑÑ‚Ðµ Ñ Ð½ÐµÑÐºÐ¾Ð»ÑŒÐºÐ¸Ð¼Ð¸ Ð¸Ð· ÑÐ²Ð¾Ð¸Ñ… ÑÑ‚ÑƒÐ´ÐµÐ½Ñ‚Ð¾Ð² Ð¸Ð· ÐÐ°Ñ†Ð¸Ð¾Ð½Ð°Ð»ÑŒÐ½Ð¾Ð³Ð¾ Ð£Ð½Ð¸Ð²ÐµÑ€ÑÐ¸Ñ‚ÐµÑ‚Ð° Ð¡Ð¸Ð½Ð³Ð°Ð¿ÑƒÑ€Ð° (NUS, ÑÐ¼. 'Team'), Ð¸Ð¼ Ð±Ñ‹Ð»Ð¸ Ñ€Ð°Ð·Ñ€Ð°Ð±Ð¾Ñ‚Ð°Ð½Ñ‹ Ð¸ Ð¾Ð±ÑŠÐµÐ´Ð¸Ð½ÐµÐ½Ñ‹ Ð² ÐºÐ¾Ð»Ð»ÐµÐºÑ†Ð¸ÑŽ Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¸ â€” " +
    "Ð¾Ñ‚ Ð¿Ñ€Ð¾ÑÑ‚Ñ‹Ñ… Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð¾Ð² ÑÐ¾Ñ€Ñ‚Ð¸Ñ€Ð¾Ð²ÐºÐ¸ Ð´Ð¾ ÐºÐ¾Ð¼Ð¿Ð»ÐµÐºÑÐ½Ñ‹Ñ… ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€ Ð¿Ñ€ÐµÐ´ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ñ Ð³Ñ€Ð°Ñ„Ð¾Ð² Ð¸ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð¾Ð² Ð½Ð° Ð½Ð¸Ñ…, Ð° Ñ‚Ð°ÐºÐ¶Ðµ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ñ‹ Ð½Ð°Ð´ ÑÑ‚Ñ€Ð¾ÐºÐ°Ð¼Ð¸ Ð¸ Ð¸Ð· Ð²Ñ‹Ñ‡Ð¸ÑÐ»Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾Ð¹ Ð³ÐµÐ¾Ð¼ÐµÑ‚Ñ€Ð¸Ð¸.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">VisuAlgo ÑÐ¾Ð´ÐµÑ€Ð¶Ð¸Ñ‚ <b>Ð¼Ð½Ð¾Ð¶ÐµÑÑ‚Ð²Ð¾ Ð½ÐµÑ‚Ñ€Ð¸Ð²Ð¸Ð°Ð»ÑŒÐ½Ñ‹Ñ… Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð¾Ð²</b>, ÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ðµ Ð¾Ð±ÑÑƒÐ¶Ð´Ð°ÑŽÑ‚ÑÑ Ð² ÐºÐ½Ð¸Ð³Ðµ Ð´-Ñ€ Steven Halim-Ð° Ð¸ Ð½Ðµ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ " +
    "(Ð¿Ñ€Ð¸Ð¼.: ÐºÐ½Ð¸Ð³Ð° <a href=\"http://sites.google.com/site/stevenhalim/\">'Competitive Programming 3'</a>, Ð½Ð°Ð¿Ð¸ÑÐ°Ð½Ð½Ð°Ñ Ð² ÑÐ¾Ð°Ð²Ñ‚Ð¾Ñ€ÑÑ‚Ð²Ðµ ÑÐ¾ ÑÐ²Ð¾Ð¸Ð¼ Ð±Ñ€Ð°Ñ‚Ð¾Ð¼ Ð´-Ñ€ Felix Halim). " +
    "Ð’ Ð½Ð°ÑÑ‚Ð¾ÑÑ‰Ð¸Ð¹ Ð¼Ð¾Ð¼ÐµÐ½Ñ‚ Ð½ÐµÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ðµ Ð¸Ð· Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¹ Ð¸ Ð°Ð½Ð¸Ð¼Ð°Ñ†Ð¸Ð¹ Ð½ÐµÑ‚Ñ€Ð¸Ð²Ð¸Ð°Ð»ÑŒÐ½Ñ‹Ñ… Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð¾Ð² Ð¼Ð¾Ð³ÑƒÑ‚ Ð±Ñ‹Ñ‚ÑŒ Ð½Ð°Ð¹Ð´ÐµÐ½Ñ‹ <b>Ñ‚Ð¾Ð»ÑŒÐºÐ¾</b> Ð½Ð° VisuAlgo. " +
    "ÐÐ°Ð¿Ñ€Ð¸Ð¼ÐµÑ€, Ð½Ð° <a href=\"dfsbfs.html\">Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¸ Ð¾Ð±Ñ…Ð¾Ð´Ð¾Ð² Ð³Ñ€Ð°Ñ„Ð°</a>, Ð¼Ñ‹ Ð½Ðµ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð¿Ð¾ÐºÐ°Ð·Ñ‹Ð²Ð°ÐµÐ¼ ÑÑ‚Ð°Ð½Ð´Ð°Ñ€Ñ‚Ð½Ñ‹Ðµ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ñ‹ Ð¿Ð¾Ð¸ÑÐºÐ° Ð² Ð³Ð»ÑƒÐ±Ð¸Ð½Ñƒ Ð¸ Ð² ÑˆÐ¸Ñ€Ð¸Ð½Ñƒ, Ð½Ð¾ Ð¸ Ð¸Ñ… Ð²Ð°Ñ€Ð¸Ð°Ñ†Ð¸Ð¸, Ñ‚Ð°ÐºÐ¸Ðµ ÐºÐ°Ðº " +
    "Ð¼Ð¾Ð´Ð¸Ñ„Ð¸ÐºÐ°Ñ†Ð¸Ñ Ð¿Ð¾Ð¸ÑÐºÐ° Ð² Ð³Ð»ÑƒÐ±Ð¸Ð½Ñƒ Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑˆÐ°Ñ€Ð½Ð¸Ñ€Ð¾Ð² (Ñ€Ð°Ð·Ð´ÐµÐ»ÑÑŽÑ‰Ð¸Ñ… Ð²ÐµÑ€ÑˆÐ¸Ð½) Ð¸ Ð¼Ð¾ÑÑ‚Ð¾Ð², Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ñ‹ Ð¢Ð°Ñ€ÑŒÑÐ½Ð° Ð¸ ÐšÐ¾ÑÐ°Ñ€Ð°Ð´Ð¶Ð¸ (Ð¿Ð¾Ð´Ð¾Ð±Ð½Ñ‹Ðµ Ð¾Ð±Ñ…Ð¾Ð´Ñƒ Ð² Ð³Ð»ÑƒÐ±Ð¸Ð½Ñƒ) Ð´Ð»Ñ Ð¿Ð¾Ð¸ÑÐºÐ° ÑÐ¸Ð»ÑŒÐ½Ð¾ ÑÐ²ÑÐ·Ð½Ñ‹Ñ… ÐºÐ¾Ð¼Ð¿Ð¾Ð½ÐµÐ½Ñ‚ Ð½Ð°Ð¿Ñ€Ð°Ð²Ð»ÐµÐ½Ð½Ð¾Ð³Ð¾ Ð³Ñ€Ð°Ñ„Ð°, " +
    "Ð° Ñ‚Ð°ÐºÐ¶Ðµ Ð´Ð°ÐµÐ¼ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑ‚ÑŒ ÑƒÐ²Ð¸Ð´ÐµÑ‚ÑŒ Ð½ÐµÑÐ²Ð½Ñ‹Ð¹ Ð³Ñ€Ð°Ñ„ Ð´Ð»Ñ Ð·Ð°Ð´Ð°Ñ‡Ð¸ Ð²Ñ‹Ð¿Ð¾Ð»Ð½Ð¸Ð¼Ð¾ÑÑ‚Ð¸ Ñ„Ð¾Ñ€Ð¼ÑƒÐ»Ñ‹ 2-ÐºÐ¾Ð½ÑŒÑŽÐºÑ‚Ð¸Ð²Ð½Ð¾Ð¹ Ð½Ð¾Ñ€Ð¼Ð°Ð»ÑŒÐ½Ð¾Ð¹ Ñ„Ð¾Ñ€Ð¼Ñ‹ (2-ÐšÐÐ¤) Ð½ÐµÐ±Ð¾Ð»ÑŒÑˆÐ¾Ð³Ð¾ Ñ€Ð°Ð·Ð¼ÐµÑ€Ð° Ð¸ Ð¿Ñ€Ð¾Ð²ÐµÑ€Ð¸Ñ‚ÑŒ ÐµÑ‘ Ð²Ñ‹Ð¿Ð¾Ð»Ð½Ð¸Ð¼Ð¾ÑÑ‚ÑŒ.</p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">ÐÐµÑÐ¼Ð¾Ñ‚Ñ€Ñ Ð½Ð° Ñ‚Ð¾, Ñ‡Ñ‚Ð¾ ÑÐ°Ð¹Ñ‚ ÑÐ¾Ð·Ð´Ð°Ð½ ÑÐ¿ÐµÑ†Ð¸Ð°Ð»ÑŒÐ½Ð¾ Ð´Ð»Ñ ÑÑ‚ÑƒÐ´ÐµÐ½Ñ‚Ð¾Ð² NUS Ð¿Ð¾ÑÐµÑ‰Ð°ÑŽÑ‰Ð¸Ñ… Ñ€Ð°Ð·Ð»Ð¸Ñ‡Ð½Ñ‹Ðµ ÐºÑƒÑ€ÑÑ‹ Ð¾ ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð°Ñ… Ð´Ð°Ð½Ð½Ñ‹Ñ… Ð¸ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð°Ñ… (ÑÐ¼. " +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, Ð¸ " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a>), ÐºÐ°Ðº Ð¿Ñ€Ð¾Ð¿Ð¾Ð³Ð°Ð½Ð´Ð¸ÑÑ‚Ñ‹ Ð¾Ð½Ð»Ð°Ð¹Ð½-Ð¾Ð±ÑƒÑ‡ÐµÐ½Ð¸Ñ Ð¼Ñ‹ Ð½Ð°Ð´ÐµÐµÐ¼ÑÑ, Ñ‡Ñ‚Ð¾ Ð¿Ñ‹Ñ‚Ð»Ð¸Ð²Ñ‹Ðµ ÑƒÐ¼Ñ‹ ÑÐ¾ Ð²ÑÐµÐ³Ð¾ Ð¼Ð¸Ñ€Ð° Ñ‚Ð°ÐºÐ¶Ðµ Ð½Ð°Ð¹Ð´ÑƒÑ‚ Ð½Ð°ÑˆÐ¸ Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¸ Ð¿Ð¾Ð»ÐµÐ·Ð½Ñ‹Ð¼Ð¸.<br><br></p>");

    $("#developments").html("<h2>Ð’ Ñ€Ð°Ð·Ñ€Ð°Ð±Ð¾Ñ‚ÐºÐµ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo Ð½Ð°Ñ…Ð¾Ð´Ð¸Ñ‚ÑÑ Ñ€Ð°Ð·Ñ€Ð°Ð±Ð¾Ñ‚ÐºÐµ Ð¸ Ð¼Ñ‹ ÑÐ¾Ð·Ð´Ð°ÐµÐ¼ Ð²ÑÐµ Ð±Ð¾Ð»ÐµÐµ ÑÐ»Ð¾Ð¶Ð½Ñ‹Ðµ Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¸. " +
    "Ð’Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¸ ÑÐ¾Ð·Ð´Ð°Ð²Ð°ÐµÐ¼Ñ‹Ðµ Ð½Ð°ÑˆÐµÐ¹ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð¾Ð¹ Ð² Ð½Ð°ÑÑ‚Ð¾ÑÑ‰Ð¸Ð¹ Ð¼Ð¾Ð¼ÐµÐ½Ñ‚: Ñ…ÐµÑˆ-Ñ‚Ð°Ð±Ð»Ð¸Ñ†Ð° (Ñ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ð½Ð¸ÐµÐ¼ Ð½ÐµÑÐºÐ¾Ð»ÑŒÐºÐ¸Ñ… ÑÐ¿Ð¾ÑÐ¾Ð±Ð¾Ð² Ñ…ÐµÑˆÐ¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ñ), Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼ Ð”Ð¶ÐµÐºÐ° Ð­Ð´Ð¼Ð¾Ð½Ð´ÑÐ° (Jack Edmonds') Ð´Ð»Ñ ÑÐ¾Ð¿Ð¾ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð¸Ñ Ð³Ñ€Ð°Ñ„Ð¾Ð², Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼ Ð§Ñƒ-Ð›ÑŽ â€” Ð­Ð´Ð¼Ð¾Ð½ÑÐ° (Chu-Liu Edmonds') Ð´Ð»Ñ Ð½Ð°Ñ…Ð¾Ð¶Ð´ÐµÐ½Ð¸Ñ Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑŒÐ½Ð¾Ð³Ð¾ Ð¾ÑÑ‚Ð¾Ð²Ð½Ð¾Ð³Ð¾ Ð´ÐµÑ€ÐµÐ²Ð° Ð½Ð°Ð¿Ñ€Ð°Ð²Ð»ÐµÐ½Ð½Ð¾Ð³Ð¾ Ð³Ñ€Ð°Ñ„Ð°, Ð¸ Ñ‚.Ð´.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">ÐžÐ´Ð½Ð°ÐºÐ¾, Ð½Ð°Ð¸Ð±Ð¾Ð»ÐµÐµ Ð·Ð°Ñ…Ð²Ð°Ñ‚Ñ‹Ð²Ð°ÑŽÑ‰Ð¸Ð¹ Ð¿Ñ€Ð¾Ð³Ñ€ÐµÑÑ â€” Ð² ÑÐ¾Ð·Ð´Ð°Ð½Ð¸Ð¸ Ð°Ð²Ñ‚Ð¾Ð¼Ð°Ñ‚Ð¸Ñ‡ÐµÑÐºÐ¾Ð³Ð¾ Ð³ÐµÐ½ÐµÑ€Ð°Ñ‚Ð¾Ñ€Ð° Ð²Ð¾Ð¿Ñ€Ð¾ÑÐ¾Ð² (Ð´Ð»Ñ ÑÐ¸ÑÑ‚ÐµÐ¼Ñ‹ Ð¾Ð½Ð»Ð°Ð¹Ð½-Ñ‚ÐµÑÑ‚Ð¸Ñ€Ð¾Ð²Ð°Ð½Ð¸Ñ), " +
    "ÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ð¹ Ð¿Ð¾Ð·Ð²Ð¾Ð»ÑÐµÑ‚ ÑÑ‚ÑƒÐ´ÐµÐ½Ñ‚Ñƒ Ð¿Ñ€Ð¾Ð²ÐµÑ€Ð¸Ñ‚ÑŒ ÑÐ²Ð¾Ð¸ Ð·Ð½Ð°Ð½Ð¸Ñ Ð±Ð°Ð·Ð¾Ð²Ñ‹Ñ… ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€ Ð´Ð°Ð½Ð½Ñ‹Ñ… Ð¸ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð¾Ð². " +
    "Ð’Ð¾Ð¿Ñ€Ð¾ÑÑ‹ <b>ÑÐ¾Ð·Ð´Ð°ÑŽÑ‚ÑÑ ÑÐ»ÑƒÑ‡Ð°Ð¹Ð½Ñ‹Ð¼ Ð¾Ð±Ñ€Ð°Ð·Ð¾Ð¼</b> Ñ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ð½Ð¸ÐµÐ¼ Ð½ÐµÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ñ… Ð¿Ñ€Ð°Ð²Ð¸Ð» Ð¸ ÑÑ‚ÑƒÐ´ÐµÐ½Ñ‚Ñ‹ <b>Ð¼Ð³Ð½Ð¾Ð²ÐµÐ½Ð½Ð¾ Ð¸ Ð°Ð²Ñ‚Ð¾Ð¼Ð°Ñ‚Ð¸Ñ‡ÐµÑÐºÐ¸ ÑƒÐ·Ð½Ð°ÑŽÑ‚ Ð¾Ñ†ÐµÐ½ÐºÑƒ</b> Ð¿Ð¾ÑÐ»Ðµ Ð¾Ñ‚Ð¿Ñ€Ð°Ð²ÐºÐ¸ Ð¾Ñ‚Ð²ÐµÑ‚Ð° Ð½Ð° Ð½Ð°Ñˆ ÑÐµÑ€Ð²ÐµÑ€ Ð¾Ñ†ÐµÐ½Ð¾Ðº. " +
    "Ð¢Ð°ÐºÐ¾Ð¹ Ð¾Ð½Ð»Ð°Ð¹Ð½-Ð¾Ð¿Ñ€Ð¾ÑÐ½Ð¸Ðº, ÐºÐ¾Ð³Ð´Ð° ÑÐ¾Ð·Ñ€ÐµÐµÑ‚, Ñ‚ÐµÐ¾Ñ€ÐµÑ‚Ð¸Ñ‡ÐµÑÐºÐ¸ Ð¼Ð¾Ð¶ÐµÑ‚ Ð¸Ð·Ð±Ð°Ð²Ð¸Ñ‚ÑŒ Ð¾Ñ‚ <b>Ñ€ÑƒÑ‡Ð½Ñ‹Ñ…</b> Ð¿Ñ€Ð¾Ð²ÐµÑ€Ð¾Ðº Ð·Ð½Ð°Ð½Ð¸Ð¹ Ð¾ Ð±Ð°Ð·Ð¾Ð²Ñ‹Ñ… ÑÑ‚Ñ€ÑƒÐºÑ‚ÑƒÑ€Ð°Ñ… Ð´Ð°Ð½Ð½Ñ‹Ñ… Ð¸ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð°Ñ… Ð½Ð° Ñ‚Ð¸Ð¿Ð¸Ñ‡Ð½Ñ‹Ñ… ÑÐºÐ·Ð°Ð¼ÐµÐ½Ð°Ñ… Ð¿Ð¾ Ð¸Ð½Ñ„Ð¾Ñ€Ð¼Ð°Ñ‚Ð¸ÐºÐµ Ð²Ð¾ Ð¼Ð½Ð¾Ð³Ð¸Ñ… ÑƒÐ½Ð¸Ð²ÐµÑ€ÑÐ¸Ñ‚ÐµÑ‚ÐµÑ…. " +
    "ÐŸÑ€Ð¸Ð´Ð°Ð² Ð½ÐµÐ±Ð¾Ð»ÑŒÑˆÐ¾Ð¹ (Ð¾Ð´Ð½Ð°ÐºÐ¾ Ð½ÐµÐ½ÑƒÐ»ÐµÐ²Ð¾Ð¹) Ð²ÐµÑ Ð¿Ñ€Ð¾Ñ…Ð¾Ð¶Ð´ÐµÐ½Ð¸ÑŽ Ð¾Ð½Ð»Ð°Ð¹Ð½-Ñ‚ÐµÑÑ‚Ð°, Ð¿Ñ€ÐµÐ¿Ð¾Ð´Ð°Ð²Ð°Ñ‚ÐµÐ»ÑŒ Ð¸Ð½Ñ„Ð¾Ñ€Ð¼Ð°Ñ‚Ð¸ÐºÐ¸ ÑÐ¼Ð¾Ð¶ÐµÑ‚ (ÑÑƒÑ‰ÐµÑÑ‚Ð²ÐµÐ½Ð½Ð¾? â€” ÑÑ‚Ð¾ Ð²Ñ‹ÑÑÐ½Ð¸Ñ‚ÑÑ Ð¿Ð¾ÑÐ»Ðµ Ñ‚Ð¾Ð³Ð¾ ÐºÐ°Ðº Ð´-Ñ€ Steven Halim Ð·Ð°ÐºÐ¾Ð½Ñ‡Ð¸Ñ‚ ÑÐ²Ð¾Ð¹ ÑÐºÑÐ¿ÐµÑ€Ð¸Ð¼ÐµÐ½Ñ‚ Ð½Ð°Ð´ ÐºÑƒÑ€ÑÐ¾Ð¼ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð¾Ð² Ð² Ñ‚ÐµÐºÑƒÑ‰ÐµÐ¼ ÑÐµÐ¼ÐµÑÑ‚Ñ€Ðµ) " +
    "ÑƒÐ²ÐµÐ»Ð¸Ñ‡Ð¸Ñ‚ÑŒ Ð¼Ð°ÑÑ‚ÐµÑ€ÑÑ‚Ð²Ð¾ ÑÐ²Ð¾Ð¸Ñ… ÑÑ‚ÑƒÐ´ÐµÐ½Ñ‚Ð¾Ð² Ð² Ð¿Ð¾Ð´Ð¾Ð±Ð½Ñ‹Ñ… Ð²Ð¾Ð¿Ñ€Ð¾ÑÐ°Ñ…, Ð¿Ð¾ÑÐºÐ¾Ð»ÑŒÐºÑƒ Ð¸Ð¼ Ð±ÑƒÐ´ÐµÑ‚ Ð´Ð°Ð½Ð° Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑ‚ÑŒ Ð¾Ñ‚Ð²ÐµÑ‚Ð¸Ñ‚ÑŒ Ð½Ð° Ð¿Ñ€Ð°ÐºÑ‚Ð¸Ñ‡ÐµÑÐºÐ¸ Ð½ÐµÐ¾Ð³Ñ€Ð°Ð½Ð¸Ñ‡ÐµÐ½Ð½Ð¾Ðµ ÐºÐ¾Ð»Ð¸Ñ‡ÐµÑÑ‚Ð²Ð¾ Ð²Ð¾Ð¿Ñ€Ð¾ÑÐ¾Ð², Ð¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½Ð¾ÑÑ‚ÑŒ Ð¾Ñ‚Ð²ÐµÑ‚Ð¾Ð² Ð½Ð° ÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¿Ñ€Ð¾Ð²ÐµÑ€Ð¸Ñ‚ÑŒ Ð¼Ð¾Ð¼ÐµÐ½Ñ‚Ð°Ð»ÑŒÐ½Ð¾, Ð¿Ñ€ÐµÐ¶Ð´Ðµ Ñ‡ÐµÐ¼ Ð¾Ð½Ð¸ Ð²Ð¾Ð·Ð¼ÑƒÑ‚ÑŒÑÑ Ð¿Ñ€Ð¾Ñ…Ð¾Ð´Ð¸Ñ‚ÑŒ Ð¾Ð½Ð»Ð°Ð¹Ð½-ÑÐºÐ·Ð°Ð¼ÐµÐ½. " +
    "Ð§Ñ‚Ð¾Ð±Ñ‹ Ð²Ð¾ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒÑÑ Ð·Ð°Ð¼ÐµÑ‡Ð°Ñ‚ÐµÐ»ÑŒÐ½Ð¾Ð¹ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑ‚ÑŒÑŽ Ð¿Ñ€Ð¾Ð¹Ñ‚Ð¸ Ñ‚ÐµÑÑ‚, Ð½Ð°Ð¶Ð¼Ð¸Ñ‚Ðµ Ð½Ð° ÐºÐ½Ð¾Ð¿ÐºÑƒ 'ÐÐ°Ñ‡Ð°Ñ‚ÑŒ Ñ‚ÐµÑÑ‚!' Ð² Ð¿Ñ€Ð°Ð²Ð¾Ð¼ Ð²ÐµÑ€Ñ…Ð½ÐµÐ¼ ÑƒÐ³Ð»Ñƒ ÑÑ‚Ñ€Ð°Ð½Ð¸Ñ†Ñ‹ (Ð½Ð° Ð°Ð½Ð³Ð»Ð¸Ð¹ÑÐºÐ¾Ð¼ ÑÐ·Ñ‹ÐºÐµ).<br><br></p>");

    $("#bug").html("<h2>ÐÐ°Ð¹Ð´ÐµÐ½Ð½Ñ‹Ðµ Ð¾ÑˆÐ¸Ð±ÐºÐ¸ Ð¸Ð»Ð¸ Ð¿Ñ€ÐµÐ´Ð»Ð¾Ð¶ÐµÐ½Ð¸Ñ ÑƒÐ»ÑƒÑ‡ÑˆÐµÐ½Ð¸Ð¹</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo â€” Ð½ÐµÐ·Ð°ÐºÐ¾Ð½Ñ‡ÐµÐ½Ð½Ñ‹Ð¹ Ð¿Ñ€Ð¾ÐµÐºÑ‚. Ð”-Ñ€ Steven Halim Ð¸ ÐµÐ³Ð¾ ÐºÐ¾Ð¼Ð°Ð½Ð´Ð° Ð°ÐºÑ‚Ð¸Ð²Ð½Ð¾ Ñ€Ð°Ð±Ð¾Ñ‚Ð°ÑŽÑ‚ Ð½Ð°Ð´ ÑƒÐ»ÑƒÑ‡ÑˆÐµÐ½Ð¸ÐµÐ¼ VisuAlgo. " +
    "Ð•ÑÐ»Ð¸ Ð²Ñ‹ Ð·Ð°Ð¼ÐµÑ‚Ð¸Ð»Ð¸ Ð¾ÑˆÐ¸Ð±ÐºÑƒ Ð² Ð»ÑŽÐ±Ð¾Ð¹ Ð¸Ð· Ð½Ð°ÑˆÐ¸Ñ… Ð²Ð¸Ð·ÑƒÐ°Ð»Ð¸Ð·Ð°Ñ†Ð¸Ð¹/Ñ‚ÐµÑÑ‚Ðµ Ð¸Ð»Ð¸ ÐµÑÐ»Ð¸ Ð²Ñ‹ Ñ…Ð¾Ñ‚ÐµÐ»Ð¸ Ð±Ñ‹ ÑƒÐ²Ð¸Ð´ÐµÑ‚ÑŒ Ñ‡Ñ‚Ð¾-Ñ‚Ð¾ Ð½Ð¾Ð²Ð¾Ðµ, Ð¿Ð¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, ÑÐ²ÑÐ¶Ð¸Ñ‚ÐµÑÑŒ Ñ Ð´-Ñ€ Steven Halim. " +
    "ÐÐ´Ñ€ÐµÑ Ð¿Ð¾Ñ‡Ñ‚Ñ‹ â€” ÐµÐ³Ð¾ Ð¿Ð¾Ð»Ð½Ð¾Ðµ Ð¸Ð¼Ñ (Ð±ÐµÐ· Ð¿Ñ€Ð¾Ð±ÐµÐ»Ð¾Ð²) ÑÐ¾Ð±Ð°ÐºÐ° gmail Ñ‚Ð¾Ñ‡ÐºÐ° com.<br></p><br>");

    $("#publications").html("<h2>ÐŸÑƒÐ±Ð»Ð¸ÐºÐ°Ñ†Ð¸Ð¸</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">Ð”Ð°Ð½Ð½Ð°Ñ Ñ€Ð°Ð±Ð¾Ñ‚Ð° Ð±Ñ‹Ð»Ð° ÐºÐ¾Ñ€Ð¾Ñ‚ÐºÐ¾ Ð¿Ñ€ÐµÐ´ÑÑ‚Ð°Ð²Ð»ÐµÐ½Ð° Ð½Ð° CLI Workshop Ð²Ð¾ Ð²Ñ€ÐµÐ¼Ñ Ð¼Ð¸Ñ€Ð¾Ð²Ð¾Ð³Ð¾ Ñ„Ð¸Ð½Ð°Ð»Ð° ACM ICPC 2012 (ÐŸÐ¾Ð»ÑŒÑˆÐ°, Ð’Ð°Ñ€ÑˆÐ¸Ð²Ð°) " +
    "Ð¸ Ð½Ð° IOI Conference Ð²Ð¾ Ð²Ñ€ÐµÐ¼Ñ IOI 2012 (Ð¡Ð¸Ñ€Ð¼Ð¸Ð¾Ð½Ðµ-ÐœÐ¾Ð½Ñ‚Ð¸Ñ‡Ð¸Ð°Ñ€Ð¸, Ð˜Ñ‚Ð°Ð»Ð¸Ñ). " +
    "ÐÐ°Ð¶Ð¼Ð¸Ñ‚Ðµ Ð½Ð° <a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">ÑÑ‚Ñƒ ÑÑÑ‹Ð»ÐºÑƒ</a> Ñ‡Ñ‚Ð¾Ð±Ñ‹ Ð¿Ñ€Ð¾Ñ‡ÐµÑÑ‚ÑŒ Ð½Ð°ÑˆÑƒ Ð¿ÑƒÐ±Ð»Ð¸ÐºÐ°Ñ†Ð¸ÑŽ 2012 Ð³Ð¾Ð´Ð° Ð¾ Ð´Ð°Ð½Ð½Ð¾Ð¹ ÑÐ¸ÑÑ‚ÐµÐ¼Ðµ (Ð² 2012 Ð¾Ð½Ð° ÐµÑ‰Ðµ Ð½Ðµ Ð¸Ð¼ÐµÐ»Ð° Ð¸Ð¼ÐµÐ½Ð¸ VisuAlgo).<br><br></p>");
  }
  else if (language == 'id') { // Indonesian: id, id-id, Contributors: Steven Halim, Frederikus Hudi, Ashar Fuadi
    sorting = new Array("sorting", "pengurutan", "gelembung", "pilih", "sisipkan", "gabungkan", "cepat", "cepat teracak", "pemilihan", "penyisipan", "perhitungan", "basis", "urutkan", "cs2020", "cs1020", "cs1010", "cs3230", "larik", "senarai", "struktur data", "algoritma", "pengurutan");
    bitmask = new Array("bitmask", "manipulasi bit", "Boolean", "larik", "set kecil", "masker bit", "cs3233", "cs2020", "cs2010", "senarai", "struktur data", "bitmask");
    linked = new Array("linked", "tumpukan", "antrean", "tunggal", "ganda", "cs2020", "cs1020", "larik", "struktur data", "senarai", "berantai");
    bst = new Array("bst", "tabel", "himpunan", "BST", "himpunan bersekutu", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "rekursi", "rekursif", "struktur data", "pohon AVL", "pohon biner terurut"); // catatan: ga yakin himpunan bersekutu = map
    heap = new Array("heap", "antrean berprioritas", "rekursif", "pengurutan timbunan", "cs2020", "cs2010", "rekursi", "struktur data", "pohon", "timbunan biner");
    graphs = new Array("graphs", "graf", "pohon", "lengkap", "bipartite", "DAG", "Adjacency Matriks", "Adjacency List", "Senarai Sisi", "cs2010", "cs2020", "struktur data", "graf"); // catatan: (simpul, sisi, busur) = (vertex, edge, arc); Ga yakin senarai sisi = edge list
    union = new Array("union", "gabung", "cari", "UFDS", "pohon", "kompres", "ranking", "kompresi path", "gabung berdasarkan ranking", "cs3233", "cs2020", "cs2010", "array", "himpunan", "rekursi", "rekursif", "struktur data", "Himpunan Saling Lepas Gabung-Cari");
    segment = new Array("segmenttree", "rentang", "Minimum/Maksimum/Jumlah", "lazy update", "rekursi", "rekursif", "cs3233", "struktur data", "Pohon Segmen"); // catatan: range = rentang? apa bahasa Indonesia dari "lazy update"?
    bit = new Array("bit", "Fenwick", "BIT", "Rentang", "Titik", "Permintaan", "Pembaruan", "rentang", "cs3233", "rekursi", "rekursif", "struktur data", "Pohon Indeks Biner");

    recursion = new Array("recursion", "Pemrograman Dinamis", "pohon", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "algorithma", "rekursif", "rekursi");

    traversal = new Array("traversal", "DFS", "BFS", "toposort", "SCC", "2-SAT", "pengurutan topologi", "Komponen Berkait Kuat", "pengecekan bipartite", "cs2010", "cs2020", "cs3230", "algoritma", "graf", "eksplorasi", "Tarjan", "Kosaraju", "Kahn");
    mst = new Array("mst", "MST", "Prim", "Kruskal", "algoritma", "cs2020", "cs2010", "graf", "pohon", "rentangan", "terkecil");
    sssp = new Array("sssp", "SSSP", "BFS", "Bellman Ford", "Dijkstra", "cs2010", "cs2020", "graf", "algoritma", "Jarak Terpendek Sumber Tunggal");
    maxflow = new Array("maxflow", "aliran terbesar", "potongan terkecil", "Dinic", "Edmonds Karp", "Ford Fulkerson", "graf", "cs2020", "cs3233", "algoritma", "Jaringan Aliran");
    matching = new Array("matching", "augmenting path", "Hopcroft Karp", "Edmonds", "cs3233", "algoritma", "graf", "pencocokan")

    suffixtree = new Array("suffixtree", "matching", "berulang", "sama", "string", "cs3233", "pohon", "akhiran", "struktur data", "pohon akhiran");
    suffixarray = new Array("suffixarray", "pengurutan", "LCP", "pencocokan", "string", "berulang", "sama", "cs3233", "struktur data", "larik", "akhiran", "larik akhiran");

    geometry = new Array("geometry", "polygon", "keliling", "cembung", "winding number", "inPolygon", "potong polygon", "cekung", "hull cembung", "Graham scan", "cs3233", "algoritma", "Geometri Komputasional");
  }
  else if (language == 'bn')  { // Bangla: bn, Contributors: Abdullah-Al-Imran, Ahmad Faiyaz and Moshiur Rahman
    $("#training-link").html("à¦ªà§à¦°à¦¶à¦¿à¦•à§à¦·à¦£ à¦¶à§à¦°à§ à¦•à¦°à§à¦¨!");
    $("#test-link").html("à¦šà¦²à¦®à¦¾à¦¨ à¦ªà¦°à§€à¦•à§à¦·à¦¾à§Ÿ à¦¯à§‹à¦— à¦¦à¦¿à¦¨");
    $("#ans-link").html("à¦¸à¦°à§à¦¬à¦¶à§‡à¦· à¦ªà¦°à§€à¦•à§à¦·à¦¾à¦° à¦‰à¦¤à§à¦¤à¦°à¦¸à¦®à§‚à¦¹");
 
    searchtext = "à¦…à¦¨à§à¦¸à¦¨à§à¦§à¦¾à¦¨...";
 
    sorting = new Array("sorting", "à¦¬à¦¾à¦¬à¦²", "à¦¸à¦¿à¦²à§‡à¦•à§à¦Ÿ", "à¦‡à¦¨à¦¸à¦¾à¦°à§à¦Ÿ", "à¦®à¦¾à¦°à§à¦œ", "à¦•à§à¦‡à¦•", "à¦°â€à§à¦¯à¦¾à¦¨à§à¦¡à§‹à¦®à¦¾à¦‡à¦œà¦¡ à¦•à§à¦‡à¦•", "à¦¸à¦¿à¦²à§‡à¦•à¦¶à¦¨", "à¦‡à¦¨à¦¸à¦¾à¦°à§à¦Ÿà¦¶à¦¨", "à¦•à¦¾à¦‰à¦¨à§à¦Ÿà¦¿à¦‚", "à¦°à§‡à¦¡à¦¿à¦•à§à¦¸", "à¦¸à¦°à§à¦Ÿ", "cs2020", "cs1020", "cs1010", "cs3230", "à¦…à§à¦¯à¦¾à¦°à§‡", "à¦²à¦¿à¦¸à§à¦Ÿ", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "à¦¸à¦°à§à¦Ÿà¦¿à¦‚");
    bitmask = new Array("bitmask", "à¦¬à¦¿à¦Ÿ à¦®à§à¦¯à¦¾à¦¨à¦¿à¦ªà§à¦²à§‡à¦¶à¦¨", "à¦¬à§à¦²à¦¿à§Ÿà¦¾à¦¨", "à¦…à§à¦¯à¦¾à¦°à§‡", "à¦¸à§à¦®à¦² à¦¸à§‡à¦Ÿ", "cs3233", "cs2020", "cs2010", "à¦²à¦¿à¦¸à§à¦Ÿ", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦¬à¦¿à¦Ÿà¦®à¦¾à¦¸à§à¦•");
    linked = new Array("linked", "à¦¸à§à¦Ÿà§à¦¯à¦¾à¦•", "à¦•à¦¿à¦‰", "à¦¸à¦¿à¦™à§à¦—à§‡à¦²", "à¦¡à¦¬à¦²", "à¦¡à¦¿à¦•à¦¿à¦‰", "cs2020", "cs1020", "à¦…à§à¦¯à¦¾à¦°à§‡", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦²à¦¿à¦™à§à¦•à¦¡", "à¦²à¦¿à¦¸à§à¦Ÿ");
    bst = new Array("bst", "à¦Ÿà§‡à¦¬à¦¿à¦²", "à¦¸à§‡à¦Ÿ", "à¦®à§à¦¯à¦¾à¦ª", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¿à¦­", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "AVL", "à¦¬à¦¾à¦‡à¦¨à¦¾à¦°à¦¿ à¦¸à¦¾à¦°à§à¦š à¦Ÿà§à¦°à¦¿");
    heap = new Array("heap", "à¦ªà§à¦°à¦¾à¦‡à¦“à¦°à¦¿à¦Ÿà¦¿ à¦•à¦¿à¦‰", "à¦¹à¦¿à¦ª à¦¸à¦°à§à¦Ÿ", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¿à¦­", "cs2020", "cs2010", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦¬à¦¾à¦‡à¦¨à¦¾à¦°à¦¿ à¦¹à¦¿à¦ª");
    graphs = new Array("graphs", "à¦Ÿà§à¦°à¦¿", "à¦•à¦®à¦ªà§à¦²à¦¿à¦Ÿ", "à¦¬à¦¾à¦‡à¦ªà¦¾à¦°à¦Ÿà¦¾à¦‡à¦Ÿ", "DAG", "à¦…à§à¦¯à¦¾à¦¡à¦œà§‡à¦¸à§‡à¦¨à§à¦¸à¦¿ à¦®à§à¦¯à¦¾à¦Ÿà§à¦°à¦¿à¦•à§à¦¸", "à¦…à§à¦¯à¦¾à¦¡à¦œà§‡à¦¸à§‡à¦¨à§à¦¸à¦¿ à¦²à¦¿à¦¸à§à¦Ÿ", "à¦à¦œ à¦²à¦¿à¦¸à§à¦Ÿ", "cs2010", "cs2020", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦—à§à¦°à¦¾à¦«à¦¸à¦®à§‚à¦¹");
    union = new Array("union", "UFDS", "à¦Ÿà§à¦°à¦¿", "à¦•à¦®à§à¦ªà§à¦°à§‡à¦¶", "à¦°â€à§à¦¯à¦¾à¦‚à¦•", "à¦ªà¦¾à¦¥ à¦•à¦®à§à¦ªà§à¦°à§‡à¦¶à¦¨", "à¦‡à¦‰à¦¨à¦¿à§Ÿà¦¨ à¦¬à¦¾à¦‡ à¦°â€à§à¦¯à¦¾à¦™à§à¦•", "cs3233", "cs2020", "cs2010", "à¦…à§à¦¯à¦¾à¦¾à¦°à§‡", "à¦¸à§‡à¦Ÿ", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¿à¦­", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦‡à¦‰à¦¨à¦¿à§Ÿà¦¨-à¦«à¦¾à¦‡à¦¨à§à¦¡ à¦¡à¦¿à¦¸à¦œà§Ÿà§‡à¦¨à§à¦Ÿ à¦¸à§‡à¦Ÿà¦¸");
    segment = new Array("segmenttree", "à¦°à§‡à¦žà§à¦œ", "à¦¸à¦°à§à¦¬à¦¨à¦¿à¦®à§à¦¨/à¦¸à¦°à§à¦¬à§‹à¦šà§à¦š/à¦¯à§‹à¦—à¦«à¦²", "à¦²à§‡à¦œà¦¿ à¦†à¦ªà¦¡à§‡à¦Ÿ", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¿à¦­", "cs3233", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦¸à§‡à¦—à¦®à§‡à¦¨à§à¦Ÿ à¦Ÿà§à¦°à¦¿");
    bit = new Array("bit", "Fenwick", "à¦°à§‡à¦žà§à¦œ", "BIT", "à¦°à§‡à¦žà§à¦œ/à¦ªà§Ÿà§‡à¦¨à§à¦Ÿ à¦•à§à§Ÿà§‡à¦°à¦¿/à¦†à¦ªà¦¡à§‡à¦Ÿ", "cs3233", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¿à¦­", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦¬à¦¾à¦‡à¦¨à¦¾à¦°à¦¿ à¦‡à¦¨à¦¡à§‡à¦•à§à¦¸à¦¡ à¦Ÿà§à¦°à¦¿");
 
    recursion = new Array("recursion", "à¦¡à¦¾à¦‡à¦¨à¦¾à¦®à¦¿à¦• à¦ªà§à¦°à§‹à¦—à§à¦°à¦¾à¦®à¦¿à¦‚", "à¦Ÿà§à¦°à¦¿", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¿à¦­", "à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨");
 
    traversal = new Array("traversal", "DFS", "BFS", "à¦Ÿà¦ªà§‹à¦¸à¦°à§à¦Ÿ", "SCC", "2-SAT", "à¦Ÿà¦ªà§‹à¦²à¦œà¦¿à¦•à¦¾à¦² à¦¸à¦°à§à¦Ÿ", "à¦¸à§à¦Ÿà§à¦°à¦‚à¦²à¦¿ à¦•à¦¾à¦¨à§‡à¦•à§à¦Ÿà§‡à¦¡ à¦•à¦®à§à¦ªà§‹à¦¨à§‡à¦¨à§à¦Ÿ", "à¦¬à¦¾à¦‡à¦ªà¦¾à¦°à¦Ÿà¦¾à¦‡à¦Ÿ à¦šà§‡à¦•", "cs2010", "cs2020", "cs3230", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "à¦Ÿà¦¾à¦°à¦œà¦¾à¦¨", "à¦•à¦¸à¦¾à¦°à¦¾à¦œà§", "à¦–à¦¾à¦¨", "à¦—à§à¦°à¦¾à¦«à¦¸à¦®à§‚à¦¹", "à¦Ÿà§à¦°à¦¾à¦­à¦¾à¦°à§à¦¸à¦¾à¦²");
    mst = new Array("mst", "MST", "à¦ªà§à¦°à¦¿à¦®", "à¦•à§à¦°à§à¦¸à¦•à¦¾à¦²", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "cs2020", "cs2010", "à¦—à§à¦°à¦¾à¦«à¦¸à¦®à§‚à¦¹", "à¦®à¦¿à¦¨", "à¦¸à§à¦ªà§à¦¯à¦¾à¦¨à¦¿à¦‚", "à¦Ÿà§à¦°à¦¿");
    sssp = new Array("sssp", "SSSP", "à¦¬à§‡à¦²à¦®à§à¦¯à¦¾à¦¨  à¦«à§‹à¦°à§à¦¡", "à¦¡à¦¾à§Ÿà¦¾à¦•à§à¦¸à¦Ÿà§à¦°à¦¾", "BFS", "cs2010", "cs2020", "à¦—à§à¦°à¦¾à¦«à¦¸à¦®à§‚à¦¹", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "à¦¸à¦¿à¦™à§à¦—à§‡à¦² à¦¸à§‹à¦°à§à¦¸ à¦¶à¦°à§à¦Ÿà§‡à¦¸à§à¦Ÿ à¦ªà¦¾à¦¥");
    maxflow = new Array("maxflow", "à¦®à§à¦¯à¦¾à¦•à§à¦¸ à¦«à§à¦²à§‹", "à¦®à¦¿à¦¨ à¦•à¦¾à¦Ÿ", "à¦à¦¡à¦®à¦¨à§à¦¡ à¦•à¦¾à¦°à§à¦ª", "à¦¡à¦¿à¦¨à¦¿à¦•", "à¦«à§‹à¦°à§à¦¡ à¦«à§à¦²à¦•à¦¾à¦°à¦¸à¦¨", "à¦—à§à¦°à¦¾à¦«à¦¸à¦®à§‚à¦¹", "cs2020", "cs3233", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "à¦¨à§‡à¦Ÿà¦“à§Ÿà¦¾à¦°à§à¦• à¦«à§à¦²à§‹");
    matching = new Array("matching", "à¦…à¦—à¦®à§‡à¦¨à§à¦Ÿà¦¿à¦‚ à¦ªà¦¾à¦¥", "à¦¹à¦ªà¦•à§à¦°à¦«à¦Ÿ à¦•à¦¾à¦°à§à¦ª", "à¦à¦¡à¦®à¦¨à§à¦¡", "cs3233", "à¦—à§à¦°à¦¾à¦«à¦¸à¦®à§‚à¦¹", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "à¦®à§à¦¯à¦¾à¦šà¦¿à¦‚")
 
    suffixtree = new Array("suffixtree", "à¦®à§à¦¯à¦¾à¦šà¦¿à¦‚", "à¦°à¦¿à¦ªà¦¿à¦Ÿà§‡à¦¡", "à¦•à¦®à¦¨", "à¦¸à§à¦Ÿà§à¦°à¦¿à¦‚", "cs3233", "à¦Ÿà§à¦°à¦¿", "à¦¸à¦¾à¦«à¦¿à¦•à§à¦¸", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦¸à¦¾à¦«à¦¿à¦•à§à¦¸ à¦Ÿà§à¦°à¦¿");
    suffixarray = new Array("suffixarray", "à¦¸à¦°à§à¦Ÿà¦¿à¦‚", "à¦•à¦®à¦¨ à¦ªà§à¦°à¦¿à¦«à¦¿à¦•à§à¦¸", "à¦¸à§à¦Ÿà§à¦°à¦¿à¦‚", "LCP", "à¦®à§à¦¯à¦¾à¦šà¦¿à¦‚", "à¦¸à¦°à§à¦Ÿà¦¿à¦‚", "à¦°à¦¿à¦ªà¦¿à¦Ÿà§‡à¦¡", "à¦•à¦®à¦¨", "cs3233", "à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°", "à¦¸à¦¾à¦«à¦¿à¦•à§à¦¸", "à¦…à§à¦¯à¦¾à¦°à§‡", "à¦¸à¦¾à¦«à¦¿à¦•à§à¦¸ à¦…à§à¦¯à¦¾à¦°à§‡");
 
    geometry = new Array("geometry", "à¦¬à¦¹à§à¦­à§à¦œ", "à¦“à§Ÿà¦¾à¦‡à¦¨à§à¦¡à¦¿à¦‚ à¦¨à¦¾à¦®à§à¦¬à¦¾à¦°", "à¦‡à¦¨à¦ªà¦²à¦¿à¦—à¦¨", "à¦•à¦¾à¦Ÿ à¦ªà¦²à¦¿à¦—à¦¨", "à¦ªà¦°à¦¿à¦¸à§€à¦®à¦¾", "à¦•à¦¨à¦­à§‡à¦•à§à¦¸", "à¦•à¦¨à¦•à§‡à¦­", "à¦•à¦¨à¦­à§‡à¦•à§à¦¸ à¦¹à¦¾à¦²", "à¦—à§à¦°à¦¾à¦¹à¦¾à¦® à¦¸à§à¦•à§à¦¯à¦¾à¦¨", "cs3233", "à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®", "à¦•à¦®à§à¦ªà¦¿à¦‰à¦Ÿà§‡à¦¶à¦¨à¦¾à¦² à¦¤à§à¦°à¦¿à¦•à§‹à¦£à¦®à¦¿à¦¤à¦¿");
 
    $("#subtitle").html("à¦…à§à¦¯à¦¾à¦¨à¦¿à¦®à§‡à¦¶à¦¨ à¦à¦° à¦®à¦¾à¦§à§à¦¯à¦®à§‡ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦à¦¬à¦‚ à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦° à¦—à§à¦²à§‹à¦° à¦•à¦¾à¦°à§à¦¯à¦ªà§à¦°à¦•à§à¦°à¦¿à§Ÿà¦¾ à¦ªà§à¦°à¦¦à¦°à§à¦¶à¦¨ (Bengali)");
    $("#sortingtext").html("à¦¸à¦°à§à¦Ÿà¦¿à¦‚");
    $("#bitmasktext").html("à¦¬à¦¿à¦Ÿà¦®à¦¾à¦¸à§à¦•");
    $("#linkedtext").html("à¦²à¦¿à¦‚à¦•à¦¡ à¦²à¦¿à¦¸à§à¦Ÿ, à¦¸à§à¦Ÿà§à¦¯à¦¾à¦•, à¦•à¦¿à¦‰, à¦¡à¦¿à¦•à¦¿à¦‰");
    $("#bsttext").html("à¦¬à¦¾à¦‡à¦¨à¦¾à¦°à¦¿ à¦¸à¦¾à¦°à§à¦š à¦Ÿà§à¦°à¦¿, AVL à¦Ÿà§à¦°à¦¿");
    $("#heaptext").html("à¦¬à¦¾à¦‡à¦¨à¦¾à¦°à¦¿ à¦¹à¦¿à¦ª");
    $("#graphstext").html("à¦—à§à¦°à¦¾à¦« à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦°à¦¸");
    $("#uniontext").html("à¦‡à¦‰à¦¨à¦¿à§Ÿà¦¨-à¦«à¦¾à¦‡à¦¨à§à¦¡ à¦¡à¦¿à¦¸à¦œà§Ÿà§‡à¦¨à§à¦Ÿ à¦¸à§‡à¦Ÿà¦¸");
    $("#segmenttreetext").html("à¦¸à§‡à¦—à¦®à§‡à¦¨à§à¦Ÿ à¦Ÿà§à¦°à¦¿");
    $("#bittext").html("à¦¬à¦¾à¦‡à¦¨à¦¾à¦°à¦¿ à¦‡à¦¨à§à¦¡à§‡à¦•à§à¦¸à¦¡ à¦Ÿà§à¦°à¦¿");
    $("#recursiontext").html("à¦œà§‡à¦¨à§‡à¦°à¦¿à¦• à¦°à¦¿à¦•à¦¾à¦°à¦¸à¦¨/DAG");
 
    $("#traversaltext").html("à¦—à§à¦°à¦¾à¦« à¦Ÿà§à¦°à¦¾à¦­à¦¾à¦°à¦¸à¦¾à¦²");
    $("#msttext").html("à¦®à¦¿à¦¨à¦¿à¦®à¦¾à¦® à¦¸à§à¦ªà§à¦¯à¦¾à¦¨à¦¿à¦‚ à¦Ÿà§à¦°à¦¿");
    $("#sssptext").html("à¦¸à¦¿à¦™à§à¦—à§‡à¦²-à¦¸à§‹à¦°à§à¦¸ à¦¶à¦°à§à¦Ÿà§‡à¦¸à§à¦Ÿ à¦ªà¦¾à¦¥");
    $("#maxflowtext").html("à¦¨à§‡à¦Ÿà¦“à§Ÿà¦¾à¦°à§à¦• à¦«à§à¦²à§‹");
    $("#matchingtext").html("à¦—à§à¦°à¦¾à¦« à¦®à§à¦¯à¦¾à¦šà¦¿à¦‚");
    $("#suffixtreetext").html("à¦¸à¦¾à¦«à¦¿à¦•à§à¦¸ à¦Ÿà§à¦°à¦¿");
    $("#suffixarraytext").html("à¦¸à¦¾à¦«à¦¿à¦•à§à¦¸ à¦…à§à¦¯à¦¾à¦°à§‡");
    $("#geometrytext").html("(à¦•à¦®à§à¦ªà¦¿à¦‰à¦Ÿà§‡à¦¶à¦¨à¦¾à¦²) à¦œà§à¦¯à¦¾à¦®à¦¿à¦¤à¦¿");
 
    $("#abouttext").html("VisuAlgo à¦¸à¦®à§à¦ªà¦°à§à¦•à§‡");
 
    $("#motivation").html("<h2>à¦…à¦¨à§à¦ªà§à¦°à§‡à¦°à¦£à¦¾</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">à§¨à§¦à§§à§§ à¦¸à¦¾à¦²à§‡ à¦¡.à¦¸à§à¦Ÿà¦¿à¦­à§‡à¦¨ à¦¹à¦¾à¦²à¦¿à¦® à¦¤à¦¾à¦° à¦›à¦¾à¦¤à§à¦°à¦¦à§‡à¦° à¦¡à¦¾à¦Ÿà¦¾à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦° à¦à¦¬à¦‚ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦­à¦¾à¦²à§‹ à¦•à¦°à§‡ à¦¬à§‹à¦à¦¾à¦¨à§‹à¦° à¦¸à§à¦¬à¦¿à¦§à¦¾à¦° à¦œà¦¨à§à¦¯ VisuAlgo à¦•à§‡ à¦à¦•à¦Ÿà¦¾ à¦Ÿà§à¦² à¦¹à¦¿à¦¸à§‡à¦¬à§‡ à¦¬à§à¦¯à¦¬à¦¹à¦¾à¦° à¦•à¦°à¦¾à¦° à¦šà¦¿à¦¨à§à¦¤à¦¾ à¦•à¦°à§‡à¦¨, " +
    "à¦¯à¦¾à¦¤à§‡ à¦¤à¦¾à¦°à¦¾ à¦¨à¦¿à¦œà§‡à¦°à¦¾ à¦¨à¦¿à¦œà§‡à¦¦à§‡à¦° à¦‰à§Žà¦¸à¦¾à¦¹à§‡ à¦¶à¦¿à¦–à¦¤à§‡ à¦ªà¦¾à¦°à§‡à¥¤ VisuAlgo à¦¡.à¦¸à§à¦Ÿà¦¿à¦­à§‡à¦¨à§‡à¦° à§¨à§ª à¦˜à¦£à§à¦Ÿà¦¾ à¦‰à¦ªà¦¸à§à¦¥à¦¿à¦¤à¦¿à¦° à¦®à¦¤à§‹à¦‡à¥¤" +
    "à¦¤à¦¿à¦¨à¦¿ à¦¨à§à¦¯à¦¾à¦¶à¦¨à¦¾à¦² à¦‡à¦‰à¦¨à¦¿à¦­à¦¾à¦°à§à¦¸à¦¿à¦Ÿà¦¿ à¦…à¦« à¦¸à¦¿à¦™à§à¦—à¦¾à¦ªà§à¦° à¦à¦° à¦¤à¦¾à¦° à¦•à¦¿à¦›à§ à¦›à¦¾à¦¤à§à¦°à¦¦à§‡à¦° à¦¸à¦¾à¦¥à§‡ à¦à¦•à¦¤à§à¦°à§‡ à¦®à¦¿à¦²à§‡ (à¦¦à§‡à¦–à§à¦¨ 'à¦Ÿà§€à¦®'), à¦¸à¦¾à¦§à¦¾à¦°à¦£ à¦¸à¦°à§à¦Ÿà¦¿à¦‚ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦¥à§‡à¦•à§‡ à¦¶à§à¦°à§ à¦•à¦°à§‡ à¦œà¦Ÿà¦¿à¦² à¦—à§à¦°à¦¾à¦« à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦° à¦“ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦à¦¬à¦‚ à¦¸à§à¦Ÿà§à¦°à¦¿à¦‚+à¦œà¦¿à¦“à¦®à§‡à¦Ÿà§à¦°à¦¿ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œà§‡à¦¶à¦¨à§‡à¦° à¦à¦•à¦Ÿà¦¿ à¦¸à¦¿à¦°à¦¿à¦œ à¦¡à§‡à¦­à§‡à¦²à¦ª à¦•à¦°à§‡à¦¨à¥¤<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">VisuAlgo à¦¤à§‡ à¦†à¦›à§‡<b>à¦…à¦¨à§‡à¦• à¦…à§à¦¯à¦¾à¦¡à¦­à¦¾à¦¨à§à¦¸à¦¡ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®</b> à¦¯à¦¾ à¦¡.à¦¸à§à¦Ÿà¦¿à¦­à§‡à¦¨ à¦à¦° à¦¬à¦‡à§Ÿà§‡ à¦†à¦²à§‹à¦šà¦¨à¦¾ à¦•à¦°à¦¾ à¦¹à§Ÿà§‡à¦›à§‡ " +
    "(Note: This <a href=\"http://sites.google.com/site/stevenhalim/\">'Competitive Programming 3'</a> à¦¬à¦‡à¦Ÿà¦¿à¦° à¦¸à¦¹-à¦²à§‡à¦–à¦• à¦¹à¦²à§‡à¦¨ à¦¤à¦¾à¦° à¦­à¦¾à¦‡ à¦¡.à¦«à§‡à¦²à¦¿à¦•à§à¦¸ à¦¹à¦¾à¦²à¦¿à¦®à¥¤) à¥¤" +
    "à¦¬à¦°à§à¦¤à¦®à¦¾à¦¨ à¦¸à¦®à§Ÿà§‡ à¦à¦°à¦•à¦® à¦…à§à¦¯à¦¾à¦¡à¦­à¦¾à¦¨à§à¦¸à¦¡ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®à¦—à§à¦²à§‹à¦° à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œà§‡à¦¶à¦¨/à¦…à§à¦¯à¦¾à¦¨à¦¿à¦®à§‡à¦¶à¦¨ <b>à¦¶à§à¦§à§</b> VisuAlgo à¦¤à§‡à¦‡ à¦ªà¦¾à¦“à§Ÿà¦¾ à¦¯à¦¾à¦¬à§‡à¥¤" +
    "à¦¯à§‡à¦®à¦¨à¦ƒ, <a href=\"dfsbfs.html\">à¦—à§à¦°à¦¾à¦« à¦Ÿà§à¦°à¦¾à¦­à¦¾à¦°à¦¸à¦¾à¦² à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œà§‡à¦¶à¦¨à§‡</a>, à¦¸à§à¦Ÿà§à¦¯à¦¾à¦¨à§à¦¡à¦¾à¦°à§à¦¡ à¦¡à§‡à¦ªà¦¥-à¦«à¦¾à¦°à§à¦¸à§à¦Ÿ à¦¸à¦¾à¦°à§à¦š (DFS) à¦à¦¬à¦‚ à¦¬à§à¦°à§‡à¦¡à¦¥-à¦«à¦¾à¦°à§à¦¸à§à¦Ÿ à¦¸à¦¾à¦°à§à¦š (BFS) à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®à¦—à§à¦²à§‹ à¦¨à¦¿à§Ÿà§‡à¦‡ à¦¶à§à¦§à§ à¦†à¦²à§‹à¦šà¦¨à¦¾ à¦•à¦°à¦¾ à¦¹à§Ÿà¦¨à¦¿, à¦¤à¦¾à¦¦à§‡à¦° à¦¬à¦¿à¦•à¦²à§à¦ª à¦ªà¦¦à§à¦§à¦¤à¦¿à¦—à§à¦²à§‹ à¦¨à¦¿à§Ÿà§‡à¦“ à¦†à¦²à§‹à¦šà¦¨à¦¾ à¦•à¦°à¦¾ à¦¹à§Ÿà§‡à¦›à§‡à¥¤, à¦¯à§‡à¦®à¦¨à¦ƒ " +
    "à¦†à¦°à¦Ÿà¦¿à¦•à§à¦²à§‡à¦¶à¦¨ à¦ªà§Ÿà§‡à¦¨à§à¦Ÿ à¦–à§‹à¦à¦œà¦¾à¦° à¦œà¦¨à§à¦¯ (à¦•à¦¾à¦Ÿ à¦­à¦¾à¦°à¦Ÿà§‡à¦•à§à¦¸) DFS à¦à¦° à¦ªà¦°à¦¿à¦¬à¦°à§à¦¤à¦¨ à¦à¦¬à¦‚ à¦¡à¦¿à¦°à§‡à¦•à§à¦Ÿà§‡à¦¡ à¦—à§à¦°à¦¾à¦«à§‡à¦° à¦¸à§à¦Ÿà§à¦°à¦‚à¦²à¦¿ à¦•à¦¾à¦¨à§‡à¦•à§à¦Ÿà§‡à¦¡ à¦•à¦®à§à¦ªà§‹à¦¨à§‡à¦¨à§à¦Ÿà¦¸à¦—à§à¦²à§‹ (SCCs) à¦–à§‹à¦à¦œà¦¾à¦° à¦œà¦¨à§à¦¯ à¦¬à§à¦°à¦¿à¦œ, à¦Ÿà¦¾à¦°à¦œà¦¾à¦¨'à¦¸ à¦à¦¬à¦‚ à¦•à¦¸à¦¾à¦°à¦¾à¦œà§'à¦¸ DFS à¦à¦° à¦®à¦¤à§‹ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®à¦—à§à¦²à§‹, " +
    " à¦à¦¬à¦‚ small 2-SAT(isfiablity) à¦‡à¦¨à§à¦¸à¦Ÿà§à¦¯à¦¾à¦¨à§à¦¸ à¦à¦° à¦‡à¦®à¦ªà§à¦²à¦¿à¦•à§‡à¦¶à¦¨ à¦—à§à¦°à¦¾à¦« à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œ à¦•à¦°à¦¾ à¦à¦¬à¦‚ à¦‡à¦¨à§à¦¸à¦Ÿà§à¦¯à¦¾à¦¨à§à¦¸à§‡à¦° à¦¯à¦¥à¦¾à¦°à§à¦¥à¦¤à¦¾ à¦ªà¦°à§€à¦•à§à¦·à¦¾ à¦•à¦°à¦¾à¦° à¦«à¦¿à¦šà¦¾à¦° à¦°à§Ÿà§‡à¦›à§‡ à¦à¦–à¦¾à¦¨à§‡à¥¤</p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">à¦¬à¦¿à¦­à¦¿à¦¨à§à¦¨ à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦° à¦à¦¬à¦‚ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦•à§à¦²à¦¾à¦¸ à¦¨à¦¿à§Ÿà§‡, à¦¯à¦¦à¦¿à¦“ à¦¬à¦¿à¦¶à§‡à¦·à¦­à¦¾à¦¬à§‡  NUS à¦›à¦¾à¦¤à§à¦°-à¦›à¦¾à¦¤à§à¦°à§€à¦¦à§‡à¦°  à¦œà¦¨à§à¦¯ à¦ªà¦°à¦¿à¦•à¦²à§à¦ªà¦¨à¦¾ à¦•à¦°à¦¾ à¦¹à§Ÿà§‡à¦›à§‡ (à¦¯à§‡à¦®à¦¨à¦ƒ" +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, and " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a>), à¦…à¦¨à¦²à¦¾à¦‡à¦¨à§‡ à¦¶à¦¿à¦•à§à¦·à¦¾à¦° à¦¸à¦®à¦°à§à¦¥à¦• à¦¹à¦¿à¦¸à¦¾à¦¬à§‡, à¦†à¦®à¦°à¦¾ à¦†à¦¶à¦¾ à¦•à¦°à¦¿ à¦¸à¦¾à¦°à¦¾ à¦¬à¦¿à¦¶à§à¦¬à§‡à¦° à¦‰à§Žà¦¸à¦¾à¦¹à§€ à¦®à¦¾à¦¨à§à¦· à¦à¦‡ à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œà§‡à¦¶à¦¨à¦—à§à¦²à§‹à¦° à¦®à¦¾à¦§à§à¦¯à¦®à§‡ à¦…à¦¨à§‡à¦• à¦‰à¦ªà¦•à§ƒà¦¤ à¦¹à¦¬à§‡à¦¨à¥¤<br><br></p>");
     
    $("#developments").html("<h2>à¦šà¦²à¦®à¦¾à¦¨ à¦‰à¦¨à§à¦¨à§Ÿà¦¨</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo à¦à¦•à¦Ÿà¦¿ à¦šà¦²à¦®à¦¾à¦¨ à¦ªà§à¦°à§‹à¦œà§‡à¦•à§à¦Ÿ à¦à¦¬à¦‚ à¦†à¦°à§‹ à¦œà¦Ÿà¦¿à¦² à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œà§‡à¦¶à¦¨ à¦à¦–à¦¨à¦“ à¦¡à§‡à¦­à§‡à¦²à¦ª à¦•à¦°à¦¾ à¦¹à¦šà§à¦›à§‡à¥¤" +
    "à¦à¦‡ à¦­à¦¿à¦œà§à¦¯à§à§Ÿà¦¾à¦²à¦¾à¦‡à¦œà§‡à¦¶à¦¨à¦—à§à¦²à§‹ à¦ªà¦°à¦¬à¦°à§à¦¤à§€à¦¤à§‡ à¦†à¦®à¦¾à¦¦à§‡à¦° à¦¦à¦²à§‡à¦° à¦®à¦¾à¦§à§à¦¯à¦®à§‡ à¦¡à§‡à¦­à§‡à¦²à¦ª à¦•à¦°à¦¾ à¦¹à¦¬à§‡à¦ƒ à¦¹à§à¦¯à¦¾à¦¶ à¦Ÿà§‡à¦¬à¦¿à¦² (à¦¬à¦¿à¦­à¦¿à¦¨à§à¦¨ à¦¹à§à¦¯à¦¾à¦¶à¦¿à¦‚ à¦ªà§à¦°à¦•à§à¦°à¦¿à§Ÿà¦¾ à¦¬à§à¦¯à¦¾à¦¬à¦¹à¦¾à¦° à¦•à¦°à§‡), à¦œà§à¦¯à¦¾à¦• à¦à¦¡à¦®à¦¨à§à¦¡ à¦à¦° à¦—à§à¦°à¦¾à¦« à¦®à§à¦¯à¦¾à¦šà¦¿à¦‚ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®, à¦¡à¦¿à¦°à§‡à¦•à§à¦Ÿà§‡à¦¡ à¦à¦®à¦à¦¸à¦Ÿà¦¿ à¦à¦° à¦œà¦¨à§à¦¯ à¦šà§-à¦²à§à¦‡ à¦à¦° à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦®, à¦‡à¦¤à§à¦¯à¦¾à¦¦à¦¿à¥¤<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">à¦¯à¦¾à¦‡ à¦¹à§‹à¦•, à¦¸à¦¬à¦šà§‡à§Ÿà§‡ à¦†à¦¨à¦¨à§à¦¦à¦¦à¦¾à§Ÿà¦• à¦¡à§‡à¦­à§‡à¦²à¦ªà¦®à§‡à¦¨à§à¦Ÿ à¦¹à¦²à§‹ à¦¸à§à¦¬à§Ÿà¦‚à¦•à§à¦°à¦¿à§Ÿ à¦ªà§à¦°à¦¶à§à¦¨ à¦¤à§ˆà¦°à¦¿à¦•à¦¾à¦°à¦• à¦à¦¬à¦‚ à¦¨à¦¿à¦°à§€à¦•à§à¦·à¦• (à¦…à¦¨à¦²à¦¾à¦‡à¦¨ à¦•à§à¦‡à¦œ à¦ªà§à¦°à¦•à§à¦°à¦¿à§Ÿà¦¾ )" +
    "à¦¯à¦¾ à¦›à¦¾à¦¤à§à¦°-à¦›à¦¾à¦¤à§à¦°à§€à¦¦à§‡à¦°à¦•à§‡ à¦¬à§‡à¦¸à¦¿à¦• à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦° à¦à¦¬à¦‚ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦à¦° à¦‰à¦ªà¦° à¦¤à¦¾à¦¦à§‡à¦° à¦œà§à¦žà¦¾à¦¨ à¦¯à¦¾à¦šà¦¾à¦‡ à¦•à¦°à¦¤à§‡ à¦¸à¦¾à¦¹à¦¾à¦¯à§à¦¯ à¦•à¦°à¦¬à§‡à¥¤" +
    "à¦ªà§à¦°à¦¶à§à¦¨à¦—à§à¦²à§‹ à¦•à¦¿à¦›à§ à¦¨à¦¿à§Ÿà¦®à§‡à¦° à¦®à¦¾à¦§à§à¦¯à¦®à§‡ <b>à¦°â€à§à¦¯à¦¾à¦¨à§à¦¡à¦®à¦²à¦¿ à¦¤à§ˆà¦°à¦¿</b>à¦à¦¬à¦‚ à¦›à¦¾à¦¤à§à¦°-à¦›à¦¤à§à¦°à§€à¦¦à§‡à¦°  à¦‰à¦¤à§à¦¤à¦°à¦—à§à¦²à§‹<b>à¦¸à¦¾à¦¥à§‡à¦¸à¦¾à¦¥à§‡ à¦à¦¬à¦‚ à¦¸à§à¦¬à§Ÿà¦‚à¦•à§à¦°à¦¿à§Ÿà¦­à¦¾à¦¬à§‡ à¦—à§à¦°à§‡à¦¡à¦¿à¦‚ à¦•à¦°à¦¾ à¦¹à¦¬à§‡ </b> à¦†à¦®à¦¾à¦¦à§‡à¦° à¦—à§à¦°à§‡à¦¡à¦¿à¦‚ à¦¸à¦¾à¦°à§à¦­à¦¾à¦° à¦ à¦œà¦®à¦¾ à¦¦à§‡à§Ÿà¦¾à¦° à¦ªà¦° à¥¤" +
    "<b>à¦à¦‡ à¦…à¦¨à¦²à¦¾à¦‡à¦¨ à¦•à§à¦‡à¦œ à¦ªà§à¦°à¦•à§à¦°à¦¿à§Ÿà¦¾  à¦¯à¦–à¦¨ à¦¸à¦®à§à¦ªà¦¨à§à¦¨ à¦¹à¦¬à§‡, à¦¬à¦¿à¦­à¦¿à¦¨à§à¦¨ à¦¬à¦¿à¦¶à§à¦¬à¦¬à¦¿à¦¦à§à¦¯à¦¾à¦²à§Ÿà§‡à¦°  à¦¬à¦¿à¦­à¦¿à¦¨à§à¦¨ à¦•à¦®à§à¦ªà¦¿à¦‰à¦Ÿà¦¾à¦°  à¦¸à¦¾à¦‡à¦¨à§à¦¸  à¦ªà¦°à§€à¦•à§à¦·à¦¾à¦° à¦¬à§‡à¦¸à¦¿à¦• à¦¡à¦¾à¦Ÿà¦¾ à¦¸à§à¦Ÿà§à¦°à¦¾à¦•à¦šà¦¾à¦° à¦à¦¬à¦‚ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦ªà§à¦°à¦¶à§à¦¨  à¦¯à¦¾à¦šà¦¾à¦‡  à¦•à¦°à¦¤à§‡ à¦ªà¦¾à¦°à¦¬à§‡ à¥¤</b>" +
    "à¦…à¦¨à¦²à¦¾à¦‡à¦¨ à¦•à§à¦‡à¦œ à¦à¦° à¦¸à¦¾à¦®à¦¾à¦¨à§à¦¯  (à¦•à¦¿à¦¨à§à¦¤à§  à¦…à¦¶à§‚à¦¨à§à¦¯) à¦—à§à¦°à§à¦¤à§à¦¬  à¦¦à§à¦¬à¦¾à¦°à¦¾, à¦à¦•à¦œà¦¨ à¦¸à¦¿à¦à¦¸ à¦ªà§à¦°à¦¶à¦¿à¦•à§à¦·à¦•  (à¦‰à¦²à§à¦²à§‡à¦–à¦¯à§‹à¦—à§à¦¯à¦­à¦¾à¦¬à§‡ - à¦¡à¦ƒ à¦¸à§à¦Ÿà¦¿à¦­à§‡à¦¨ à¦¹à¦¾à¦²à¦¿à¦® à¦à¦°  à¦à¦‡ à¦¸à§‡à¦®à¦¿à¦¸à§à¦Ÿà¦¾à¦°à§‡ à¦…à§à¦¯à¦¾à¦²à¦—à§‹à¦°à¦¿à¦¦à¦® à¦•à§à¦²à¦¾à¦¸à§‡ à¦à¦Ÿà¦¿  à¦ªà¦°à§€à¦•à§à¦·à¦¾ à¦•à¦°à¦¾à¦° à¦ªà¦° à¦ªà§à¦°à¦®à¦¾à¦¨à¦¿à¦¤ à¦¹à¦¬à§‡)" +
    " à¦à¦‡ à¦¸à¦¾à¦§à¦¾à¦°à¦¨ à¦ªà§à¦°à¦¶à§à¦¨à¦—à§à¦²à§‹à¦° à¦‰à¦ªà¦° à¦¤à¦¾à¦° à¦›à¦¾à¦¤à§à¦°-à¦›à¦¾à¦¤à§à¦°à§€à¦¦à§‡à¦° à¦†à¦§à¦¿à¦ªà¦¤à§à¦¯ à¦¬à¦¾à§œà¦¾à¦¤à§‡ à¦ªà¦¾à¦°à¦¬à§‡à¦¨ ,à¦¯à§‡à¦¹à§‡à¦¤à§ à¦›à¦¾à¦¤à§à¦°-à¦›à¦¤à§à¦°à§€à¦°à¦¾ à¦­à¦¾à¦°à¦šà§à§Ÿà¦¾à¦²à§€ à¦…à¦¸à¦‚à¦–à§à¦¯ à¦ªà§à¦°à¦¶à¦¿à¦•à§à¦·à¦£ à¦ªà§à¦°à¦¶à§à¦¨ à¦ªà¦¾à¦¬à§‡à¦¨ à¦¯à¦¾ à¦¤à¦¾à¦°à¦¾  à¦…à¦¨à¦²à¦¾à¦‡à¦¨ à¦•à§à¦‡à¦œ à¦  à¦…à¦‚à¦¶à¦—à§à¦°à¦¹à¦£ à¦•à¦°à¦¾à¦° à¦ªà§‚à¦°à§à¦¬à§‡à¦‡ à¦¸à¦¾à¦¥à§‡à¦¸à¦¾à¦¥à§‡ à¦¯à¦¾à¦šà¦¾à¦‡ à¦•à¦°à¦¤à§‡ à¦ªà¦¾à¦°à¦¬à§‡à¦¨à¥¤" +
    "à¦à¦‡ à¦†à¦¨à¦¨à§à¦¦à¦¦à¦¾à§Ÿà¦• à¦…à¦¨à¦²à¦¾à¦‡à¦¨ à¦•à§à¦‡à¦œ à¦«à¦¿à¦šà¦¾à¦°à¦Ÿà¦¿ à¦¦à§‡à¦–à¦¤à§‡,à¦à¦‡ à¦ªà§‡à¦œ à¦à¦° à¦‰à¦ªà¦°à§‡ à¦¡à¦¾à¦¨ à¦•à§‹à¦¨à¦¾à§Ÿ  'à¦ªà§à¦°à¦¶à¦¿à¦•à§à¦·à¦¨ à¦¶à§à¦°à§!' à¦¬à¦¾à¦Ÿà¦¨ à¦ à¦•à§à¦²à¦¿à¦• à¦•à¦°à§à¦¨à¥¤<br><br></p>");
 
    $("#bug").html("<h2>à¦¤à§à¦°à§à¦Ÿà¦¿ à¦¸à¦®à§à¦ªà¦°à§à¦•à§‡ à¦œà¦¾à¦¨à¦¾à¦¤à§‡ à¦…à¦¥à¦¬à¦¾ à¦¨à¦¤à§à¦¨ à¦«à¦¿à¦šà¦¾à¦° à¦à¦° à¦œà¦¨à§à¦¯ à¦…à¦¨à§à¦°à§‹à¦§ à¦•à¦°à§à¦¨</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo à¦ªà§à¦°à§‹à¦œà§‡à¦•à§à¦Ÿ à¦à¦° à¦•à¦¾à¦œ à¦à¦–à¦¨à¦“ à¦¶à§‡à¦· à¦¹à§Ÿà¦¨à¦¿à¥¤ à¦¡à¦ƒ à¦¸à§à¦Ÿà¦¿à¦­à§‡à¦¨ à¦¹à¦¾à¦²à¦¿à¦® à¦à¦¬à¦‚ à¦¤à¦¾à¦° à¦¦à¦² VisuAlgo à¦•à§‡ à¦¡à§‡à¦­à§‡à¦²à¦ª à¦•à¦°à¦¾à¦° à¦œà¦¨à§à¦¯ à¦¸à¦•à§à¦°à¦¿à§Ÿà¦­à¦¾à¦¬à§‡ à¦•à¦¾à¦œ à¦•à¦°à§‡ à¦¯à¦¾à¦šà§à¦›à§‡à¦¨ à¥¤ " +
    "à¦†à¦ªà¦¨à¦¿ à¦¯à¦¦à¦¿ à¦†à¦®à¦¾à¦¦à§‡à¦° VisuAlgo à¦ªà¦¾à¦¤à¦¾à§Ÿ/ à¦…à¦¨à¦²à¦¾à¦‡à¦¨ à¦•à§à¦‡à¦œ à¦Ÿà§à¦² à¦ à¦•à§‹à¦¨ à¦¤à§à¦°à§à¦Ÿà¦¿ à¦–à§à¦à¦œà§‡ à¦ªà¦¾à¦¨ à¦…à¦¥à¦¬à¦¾ à¦¨à¦¤à§à¦¨ à¦•à§‹à¦¨ à¦«à¦¿à¦šà¦¾à¦° à¦à¦° à¦œà¦¨à§à¦¯ à¦…à¦¨à§à¦°à§‹à¦§ à¦•à¦°à¦¤à§‡ à¦šà¦¾à¦¨  à¦¤à¦¾à¦¹à¦²à§‡ à¦¦à§Ÿà¦¾ à¦•à¦°à§‡ à¦¡à¦ƒ à¦¸à§à¦Ÿà¦¿à¦­à§‡à¦¨ à¦¹à¦¾à¦²à¦¿à¦® à¦à¦° à¦¸à¦¾à¦¥à§‡ à¦¯à§‹à¦—à¦¾à¦¯à§‹à¦— à¦•à¦°à§à¦¨à¥¤" +
    "à¦¤à¦¾à¦° à¦¸à¦¾à¦¥à§‡ à¦¯à§‹à¦—à¦¾à¦¯à§‹à¦—à§‡à¦° à¦œà¦¨à§à¦¯à¦ƒ stevenhalim@gmail.com<br></p><br>");
 
    $("#publications").html("<h2>à¦ªà§à¦°à¦•à¦¾à¦¶à¦¨à¦¾à¦¸à¦®à§à¦¹ </h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">à¦à¦‡ à¦•à¦¾à¦œà¦Ÿà¦¿  à¦à¦¸à¦¿à¦à¦®  à¦†à¦‡à¦¸à¦¿à¦ªà¦¿à¦¸à¦¿ à§¨à§¦à§§à§¨ (à¦ªà§‹à¦²à§à¦¯à¦¾à¦¨à§à¦¡ ,à¦“à§Ÿà¦¾à¦°à¦¸à¦¾à¦“) à¦à¦°  à¦¸à¦¿à¦à¦²à¦†à¦‡ à¦“à§Ÿà¦¾à¦°à§à¦•à¦¶à¦ª à¦ à¦ªà§à¦°à¦¨à¦¾à¦™à§à¦—à¦­à¦¾à¦¬à§‡ à¦‰à¦ªà¦¸à§à¦¥à¦¾à¦ªà¦¨ à¦•à¦°à¦¾ à¦¹à§Ÿà§‡à¦›à§‡à¥¤" +
    "à¦à¦¬à¦‚ à¦†à¦‡à¦“à¦†à¦‡  à§¨à§¦à§§à§¨ à¦¤à§‡ à¦†à¦‡à¦“à¦†à¦‡ à¦•à¦¨à¦«à¦¾à¦°à§‡à¦¨à§à¦¸ à¦à¦“ (à¦¸à¦¿à¦°à¦®à¦¿à¦“à¦¨-à¦®à¦¨à§à¦Ÿà¦¿à¦šà¦¿à§Ÿà¦¾à¦°à¦¿, à¦‡à¦¤à¦¾à¦²à¦¿). " +
    "à¦à¦‡ à¦²à¦¿à¦™à§à¦•à§‡ <a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">à¦•à§à¦²à¦¿à¦• à¦•à¦°à§à¦¨ </a> à¦à¦‡ à¦¬à§à¦¯à¦¾à¦¬à¦¸à§à¦¥à¦¾ à¦¸à¦®à§à¦ªà¦°à§à¦•à§‡ à¦†à¦®à¦¾à¦¦à§‡à¦° à§¨à§¦à§§à§¨ à¦¸à¦¾à¦²à§‡à¦°  à¦ªà§‡à¦ªà¦¾à¦°  à¦ªà§œà¦¤à§‡ (à§¨à§¦à§§à§¨ à¦¸à¦¾à¦²à§‡ à¦à¦Ÿà¦¿à¦•à§‡ VisuAlgo à¦¬à¦²à¦¾ à¦¹à§Ÿà¦¨à¦¿).<br><br></p>");
  }
  else if (language == 'ja') { // Japanese: ja-jp, Contributors: Seiichi Tani
    $("#training-link").html("ãƒˆãƒ¬ãƒ¼ãƒ‹ãƒ³ã‚°ã‚’é–‹å§‹!");
    $("#test-link").html("é€²è¡Œä¸­ã®ãƒ†ã‚¹ãƒˆã«å‚åŠ ");
    $("#ans-link").html("æœ€å¾Œã®ãƒ†ã‚¹ãƒˆã¸ã®å›žç­”");

    searchtext = "æ¤œç´¢...";

    sorting = new Array("sorting", "ã‚½ãƒ¼ãƒˆ", "ãƒãƒ–ãƒ«", "é¸æŠž", "æŒ¿å…¥", "ãƒžãƒ¼ã‚¸", "ã‚¯ã‚¤ãƒƒã‚¯", "ä¹±æ‹“ã‚¯ã‚¤ãƒƒã‚¯", "é¸æŠž", "æŒ¿å…¥", "æ•°ãˆä¸Šã’", "åŸºæ•°", "ã‚½ãƒ¼ãƒˆ", "cs2020", "cs1020", "cs1010", "cs3230", "é…åˆ—", "ãƒªã‚¹ãƒˆ", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "ã‚½ãƒ¼ãƒ†ã‚£ãƒ³ã‚°");
    bitmask = new Array("bitmask", "ãƒ“ãƒƒãƒˆãƒžã‚¹ã‚¯", "ãƒ“ãƒƒãƒˆæ“ä½œ", "ãƒ–ãƒ¼ãƒ«æ¼”ç®—", "é…åˆ—", "å°ã•ã„é›†åˆ", "cs3233", "cs2020", "cs2010", "ãƒªã‚¹ãƒˆ", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "ãƒ“ãƒƒãƒˆãƒžã‚¹ã‚¯");
    linked = new Array("linked", "é€£çµãƒªã‚¹ãƒˆ", "ã‚¹ã‚¿ãƒƒã‚¯", "ã‚­ãƒ¥ãƒ¼", "å˜æ–¹å‘", "åŒæ–¹å‘", "ä¸¡ç«¯ã‚­ãƒ¥ãƒ¼", "é€£çµ", "ãƒªã‚¹ãƒˆ", "cs2020", "cs1020", "array", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ");
    bst = new Array("bst", "ãƒ†ãƒ¼ãƒ–ãƒ«", "set", "map", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "å†å¸°", "å†å¸°çš„", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "äºŒåˆ†æŽ¢ç´¢æœ¨", "AVL"); 
    heap = new Array("heap", "ãƒ’ãƒ¼ãƒ—", "å„ªå…ˆåº¦ä»˜ãã‚­ãƒ¥ãƒ¼", "ãƒ’ãƒ¼ãƒ—ã‚½ãƒ¼ãƒˆ", "å†å¸°çš„", "cs2020", "cs2010", "å†å¸°", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "æœ¨", "äºŒåˆ†ãƒ’ãƒ¼ãƒ—");
    graphs = new Array("graphs", "ã‚°ãƒ©ãƒ•", "æœ¨", "å®Œå…¨", "äºŒéƒ¨", "DAG", "éš£æŽ¥è¡Œåˆ—", "éš£æŽ¥ãƒªã‚¹ãƒˆ", "è¾ºãƒªã‚¹ãƒˆ", "cs2010", "cs2020", "ã‚°ãƒ©ãƒ•");
    union = new Array("union", "UFDS", "æœ¨", "åœ§ç¸®", "ãƒ©ãƒ³ã‚¯", "ãƒ‘ã‚¹åœ§ç¸®", "ãƒ©ãƒ³ã‚¯ã«ã‚ˆã‚‹ä½µåˆ", "cs3233", "cs2020", "cs2010", "é…åˆ—", "set", "å†å¸°", "å†å¸°çš„", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "Union-Find ç´ é›†åˆ");
    segment = new Array("segmenttree", "ã‚»ã‚°ãƒ¡ãƒ³ãƒˆæœ¨", "ãƒ¬ãƒ³ã‚¸", "Min/Max/Sum", "é…å»¶ã‚¢ãƒƒãƒ—ãƒ‡ãƒ¼ãƒˆ", "å†å¸°çš„", "cs3233", "å†å¸°", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "ã‚»ã‚°ãƒ¡ãƒ³ãƒˆæœ¨");
    bit = new Array("bit", "Fenwick", "ãƒ¬ãƒ³ã‚¸", "BIT", "ãƒ¬ãƒ³ã‚¸/ãƒã‚¤ãƒ³ãƒˆ ã‚¯ã‚¨ãƒª/ã‚¢ãƒƒãƒ—ãƒ‡ãƒ¼ãƒˆ", "cs3233", "å†å¸°", "å†å¸°çš„", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "ãƒã‚¤ãƒŠãƒªã‚¤ãƒ³ãƒ‡ãƒƒã‚¯ã‚¹ä»˜ãæœ¨");

    recursion = new Array("recursion", "å†å¸°", "å‹•çš„è¨ˆç”»æ³•", "æœ¨", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "å†å¸°çš„", "å†å¸°");

    traversal = new Array("traversal", "ãƒˆãƒ©ãƒãƒ¼ã‚µãƒ«", "DFS", "BFS", "ãƒˆãƒãƒ­ã‚¸ã‚«ãƒ«ã‚½ãƒ¼ãƒˆ", "SCC", "2-SAT", "ãƒˆãƒãƒ­ã‚¸ã‚«ãƒ«ã‚½ãƒ¼ãƒˆ", "å¼·é€£çµæˆåˆ†", "äºŒéƒ¨ã‚°ãƒ©ãƒ•ãƒã‚§ãƒƒã‚¯", "cs2010", "cs2020", "cs3230", "ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ", "ã‚°ãƒ©ãƒ•", "ãƒˆãƒ©ãƒãƒ¼ã‚µãƒ«", "ã‚¿ãƒ¼ã‚¸ãƒ£ãƒ³", "Kosaraju", "Kahn");
    mst = new Array("mst", "MST", "ãƒ—ãƒªãƒ ", "ã‚¯ãƒ«ã‚¹ã‚«ãƒ«", "ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ", "cs2020", "cs2010", "æœ€å°", "å…¨åŸŸ", "æœ¨", "ã‚°ãƒ©ãƒ•");
    sssp = new Array("sssp", "SSSP", "BFS", "ãƒ™ãƒ«ãƒžãƒ³-ãƒ•ã‚©ãƒ¼ãƒ‰", "ãƒ€ã‚¤ã‚¯ã‚¹ãƒˆãƒ©", "cs2010", "cs2020", "å˜ä¸€å§‹ç‚¹æœ€çŸ­çµŒè·¯", "ã‚°ãƒ©ãƒ•", "ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ");
    maxflow = new Array("maxflow", "æœ€å¤§æµ", "æœ€å°ã‚«ãƒƒãƒˆ", "ã‚¨ãƒ‰ãƒ¢ãƒ³ã‚º-ã‚«ãƒ¼ãƒ—", "ãƒ‡ã‚£ãƒ‹ãƒƒã‚¯", "ãƒ•ã‚©ãƒ¼ãƒ‰-ãƒ•ã‚¡ã‚¦ã‚«ãƒ¼ã‚½ãƒ³", "ã‚°ãƒ©ãƒ•", "cs2020", "cs3233", "ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ");
    matching = new Array("matching", "ãƒžãƒƒãƒãƒ³ã‚°", "å¢—åŠ é“", "ãƒ›ãƒƒãƒ—ã‚¯ãƒ­ãƒ•ãƒˆ-ã‚«ãƒ¼ãƒ—", "ã‚¨ãƒ‰ãƒ¢ãƒ³ã‚º", "cs3233", "ãƒžãƒƒãƒãƒ³ã‚°", "ã‚°ãƒ©ãƒ•", "ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ")

    suffixtree = new Array("suffixtree", "æŽ¥å°¾è¾žæœ¨", "ãƒžãƒƒãƒãƒ³ã‚°", "ç¹°ã‚Šè¿”ã—", "å…±é€š", "æ–‡å­—åˆ—", "cs3233", "æœ¨", "æŽ¥å°¾è¾ž", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ", "æŽ¥å°¾è¾žæœ¨");
    suffixarray = new Array("suffixarray", "æŽ¥å°¾è¾žé…åˆ—", "æ•´åˆ—", "LCP", "æ–‡å­—åˆ—", "æ•´åˆ—", "ãƒžãƒƒãƒãƒ³ã‚°", "ç¹°ã‚Šè¿”ã—", "å…±é€š", "æŽ¥å°¾è¾žé…åˆ—", "cs3233", "é…åˆ—", "æŽ¥å°¾è¾ž", "ãƒ‡ãƒ¼ã‚¿æ§‹é€ ");

    geometry = new Array("geometry", "å¹¾ä½•", "å¤šè§’å½¢", "å‘¨", "å‡¸", "å·»ãæ•°", "å¤šè§’å½¢å†…", "å¤šè§’å½¢åˆ‡æ–­", "å‡¹", "å‡¸åŒ…", "ã‚°ãƒ©ãƒãƒ ã‚¹ã‚­ãƒ£ãƒ³", "cs3233", "è¨ˆç®—å¹¾ä½•");

    $("#subtitle").html("ã‚¢ãƒ‹ãƒ¡ãƒ¼ã‚·ãƒ§ãƒ³ã‚’ä»‹ã—ã¦ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¨ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚’å¯è¦–åŒ–ã™ã‚‹ (Japanese)");
    $("#sortingtext").html("ã‚½ãƒ¼ãƒˆ");
    $("#bitmasktext").html("ãƒ“ãƒƒãƒˆãƒžã‚¹ã‚¯");
    $("#linkedtext").html("é€£çµãƒªã‚¹ãƒˆ, ã‚¹ã‚¿ãƒƒã‚¯, ã‚­ãƒ¥ãƒ¼ã€ ãƒ‡ãƒƒã‚¯");
    $("#bsttext").html("äºŒåˆ†æŽ¢ç´¢æœ¨, AVLæœ¨");
    $("#heaptext").html("äºŒåˆ†ãƒ’ãƒ¼ãƒ—");
    $("#graphstext").html("ã‚°ãƒ©ãƒ•ãƒ‡ãƒ¼ã‚¿æ§‹é€ ");
    $("#uniontext").html("Union-Find ç´ é›†åˆ");
    $("#segmenttreetext").html("ã‚»ã‚°ãƒ¡ãƒ³ãƒˆæœ¨");
    $("#bittext").html("ãƒã‚¤ãƒŠãƒªã‚¤ãƒ³ãƒ‡ãƒƒã‚¯ã‚¹ä»˜ãæœ¨");
    $("#recursiontext").html("ä¸€èˆ¬çš„å†å¸°æœ¨/DAG");

    $("#traversaltext").html("ã‚°ãƒ©ãƒ•ãƒˆãƒ©ãƒãƒ¼ã‚µãƒ«");
    $("#msttext").html("æœ€å°å…¨åŸŸæœ¨");
    $("#sssptext").html("å˜ä¸€å§‹ç‚¹æœ€çŸ­çµŒè·¯");
    $("#maxflowtext").html("æœ€å¤§æµ");
    $("#matchingtext").html("ãƒžãƒƒãƒãƒ³ã‚°");
    $("#suffixtreetext").html("æŽ¥å°¾è¾žæœ¨");
    $("#suffixarraytext").html("æŽ¥å°¾è¾žé…åˆ—");
    $("#geometrytext").html("è¨ˆç®—å¹¾ä½•");

    $("#abouttext").html("About VisuAlgo");

    $("#motivation").html("<h2>å‹•æ©Ÿ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo ã¯, å­¦ç”ŸãŒè‡ªåˆ†ã®ãƒšãƒ¼ã‚¹ã§è‡ªç¿’ã™ã‚‹ã“ã¨ã§ãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¨ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚’ã‚ˆã‚Šç†è§£ã§ãã‚‹ãŸã‚ã®ãƒ„ãƒ¼ãƒ«ã¨ã—ã¦ 2011 å¹´ã« Steven Halim ã«ã‚ˆã‚Šæ§‹æƒ³ã•ã‚Œã¾ã—ãŸ. " +
    "VisuAlgo ã¯ 24 æ™‚é–“ã„ã¤ã§ã‚‚æ•™ãˆã¦ãã‚Œã‚‹ Halim åšå£«ã®ã‚¯ãƒ­ãƒ¼ãƒ³ã®ã‚ˆã†ãªã‚‚ã®ã§ã™. " +
    "Halim åšå£«ã¯ä½•äººã‹ã® National University of Singapore ã®å­¦ç”Ÿ ('Team' ã‚’å‚ç…§) ã¨å”åŠ›ã—ã¦, æ§˜ã€…ãªã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã®å¯è¦–åŒ–ã‚’é–‹ç™ºã—ã¦ãã¾ã„ãŸ. " +
    "ãã‚Œã¯, ç°¡å˜ãªã‚½ãƒ¼ãƒˆã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‹ã‚‰å§‹ã¾ã‚Š, è¤‡é›‘ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚„ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã¸ã¨, ãã—ã¦, æ–‡å­—åˆ—ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚„å¹¾ä½•ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã¸ã¨åºƒãŒã‚Šã¾ã—ãŸ.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">VisuAlgo ã¯ Steven Halim åšå£«ã®æœ¬ã§æ‰±ã£ã¦ã„ã‚‹ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚„ãã‚Œä»¥å¤–ã®<b>å¤šãã®é«˜åº¦ãªã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ </b>ã‚’å«ã‚“ã§ã„ã¾ã™." +
    "(æ³¨æ„: ã“ã® <a href=\"http://sites.google.com/site/stevenhalim/\">'Competitive Programming 3'</a> ã¨ã„ã†æœ¬ã¯, Halim åšå£«ã®å…„å¼Ÿã§ã‚ã‚‹ Felix Halim ã¨ã®å…±è‘—ã§ã™.) " +
    "ç¾æ™‚ç‚¹ã§ã¯, ã“ã‚Œã‚‰ã®é«˜åº¦ãªã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã®ä¸­ã«ã¯, ãã‚Œã‚‰ã«å¯¾ã™ã‚‹å¯è¦–åŒ–/ã‚¢ãƒ‹ãƒ¡ãƒ¼ã‚·ãƒ§ãƒ³ãŒ VisuAlgo <b>ã ã‘</b>ã§ç”¨æ„ã•ã‚Œã¦ã„ã‚‹ã‚‚ã®ãŒã‚ã‚Šã¾ã™. " +
    "ä¾‹ãˆã°, <a href=\"dfsbfs.html\">ã‚°ãƒ©ãƒ•ãƒˆãƒ©ãƒãƒ¼ã‚µãƒ«å¯è¦–åŒ–</a>ã§ã¯, æ¨™æº–çš„ãªæ·±ã•å„ªå…ˆæŽ¢ç´¢ (DFS) ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚„å¹…å„ªå…ˆæŽ¢ç´¢ (BFS) ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã ã‘ã§ãªã, ãã‚Œã‚‰ã®ãƒãƒªã‚¨ãƒ¼ã‚·ãƒ§ãƒ³ã‚‚å–ã‚Šæ‰±ã£ã¦ã„ã¾ã™. " +
    "ä¾‹ãˆã°, DFS ã®å¤‰å½¢ã¨ã—ã¦ Articulation Points (Cut Vertex) ã‚„ãƒ–ãƒªãƒƒã‚¸ã‚’ç™ºè¦‹ã™ã‚‹ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚„, æœ‰å‘ã‚°ãƒ©ãƒ•ã®å¼·é€£çµæˆåˆ† (Strongly Connected Components, SCCs) ã‚’ç™ºè¦‹ã™ã‚‹ Tarjan ã‚„ Kosaraju ã® DFS é¢¨ã®ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã‚‚æ‰±ã£ã¦ã„ã¾ã™. " +
    "ãã‚Œã°ã‹ã‚Šã‹, 2-SAT(isfiablity) ã®ã‚µã‚¤ã‚ºã®å°ã•ã„å…¥åŠ›ã«å¯¾ã—ã¦,  implication graph ã‚’å¯è¦–åŒ–ã—, å……è¶³å¯èƒ½ (satisfiable) ã‹ã©ã†ã‹ã®åˆ¤å®šã‚’æ‰±ã£ã¦ã„ã¾ã™.</p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">ç‰¹ã« NUS ã®æ§˜ã€…ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚„ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã®è¬›ç¾© (ä¾‹ãˆã°,  " +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, and " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a>), ã‚’å±¥ä¿®ã—ã¦ã„ã‚‹å­¦ç”Ÿã‚’å¯¾è±¡ã«è¨­è¨ˆã•ã‚Œã¦ã„ã¾ã™ãŒ, ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å­¦ç¿’ã®æŽ¨é€²è€…ã¨ã—ã¦, ä¸–ç•Œä¸­ã®èˆˆå‘³ã®ã‚ã‚‹äººã«ã‚‚æœ‰ç”¨ã ã¨æ€ã£ã¦ã‚‚ã‚‰ãˆã‚‹ã¨å¹¸ã„ã§ã™.<br><br></p>");

    $("#developments").html("<h2>é€²è¡Œä¸­ã®é–‹ç™º</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo ã¯é€²è¡Œä¸­ã®ãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã§, ã‚ˆã‚Šè¤‡é›‘ãªå¯è¦–åŒ–ã®é–‹ç™ºãŒä»Šã‚‚é€²ã‚ã‚‰ã‚Œã¦ã„ã¾ã™. " + 
    "é–‹ç™ºãƒãƒ¼ãƒ ãŒé–‹ç™ºã‚’äºˆå®šã—ã¦ã„ã‚‹å¯è¦–åŒ–ã¯, (ç¨®ã€…ã®ãƒãƒƒã‚·ãƒ¥åŒ–æ‰‹æ³•ã‚’ç”¨ã„ãŸ) ãƒãƒƒã‚·ãƒ¥ãƒ†ãƒ¼ãƒ–ãƒ«, Jack Edmonds ã®ã‚°ãƒ©ãƒ ãƒžãƒƒãƒãƒ³ã‚°ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ , Chu-Liu Edmonds ã®æœ‰å‘ MST ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ãªã©ã§ã™.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">ã—ã‹ã—ãªãŒã‚‰, ã‚‚ã£ã¨ã‚‚ãƒ¯ã‚¯ãƒ¯ã‚¯ã•ã›ã‚‰ã‚Œã‚‹é–‹ç™ºèª²é¡Œã¯å•é¡Œè‡ªå‹•ç”Ÿæˆã¨è‡ªå‹•è©•ä¾¡ (ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å•é¡Œã‚·ã‚¹ãƒ†ãƒ ) ã§ã™. " +
    "ã“ã‚Œã«ã‚ˆã‚Š, å­¦ç”ŸãŒåŸºç¤Žçš„ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¨ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã«é–¢ã™ã‚‹çŸ¥è­˜ã‚’è‡ªåˆ†ã§ç¢ºã‹ã‚ã‚‰ã‚Œã‚‹ã‚ˆã†ã«ãªã‚Šã¾ã™. " +
    "å•é¡Œã¯ã‚ã‚‹è¦å‰‡ã«åŸºã¥ã<b>ãƒ©ãƒ³ãƒ€ãƒ ã«ç”Ÿæˆ</b>ã•ã‚Œ, å­¦ç”Ÿã®è§£ç­”ãŒè©•ä¾¡ã‚µãƒ¼ãƒã«æå‡ºã•ã‚Œã‚‹ã¨, <b>å³åº§ã«, ãã—ã¦, è‡ªå‹•çš„ã«</b>è©•ä¾¡ã•ã‚Œã¾ã™. " +
    "ã“ã®ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å•é¡Œã‚·ã‚¹ãƒ†ãƒ ãŒä»Šå¾Œæˆç†Ÿã—ã¦ã„ãã¨, å¤šãã®å¤§å­¦ã«ãŠã‘ã‚‹å…¸åž‹çš„ãªã‚³ãƒ³ãƒ”ãƒ¥ãƒ¼ã‚¿ã‚µã‚¤ã‚¨ãƒ³ã‚¹ã®è©¦é¨“ã‹ã‚‰, åŸºç¤Žçš„ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã¨ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã«é–¢ã™ã‚‹ã“ã‚Œã¾ã§ã®ã‚ˆã†ãª<b>ãƒžãƒ‹ãƒ¥ã‚¢ãƒ«ã®</b>å•é¡Œã¯æ¶ˆãˆã¦ã—ã¾ã†ã«é•ã„ã‚ã‚Šã¾ã›ã‚“. " +
    "å­¦ç”Ÿã¯ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å•é¡Œã‚·ã‚¹ãƒ†ãƒ ã‚’ä½¿ã†ã“ã¨ã§å³åº§ã«è©•ä¾¡ã•ã‚Œã‚‹å®Ÿè³ªçš„ã«ç„¡æ•°ã®ç·´ç¿’å•é¡Œã«å–ã‚Šçµ„ã‚ã‚‹ã“ã¨ã«ãªã‚‹ã®ã§, ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å•é¡Œã«åˆæ ¼ã™ã‚‹ã“ã¨ã« (ã‚¼ãƒ­ã¯ãªã„) å°ã•ãªé‡ã¿ã‚’è¨­å®šã™ã‚‹ã“ã¨ã§, ã‚³ãƒ³ãƒ”ãƒ¥ãƒ¼ã‚¿ã‚µã‚¤ã‚¨ãƒ³ã‚¹ã®æ•™å“¡ã¯å­¦ç”Ÿã®åŸºç¤Žçš„ãªãƒ‡ãƒ¼ã‚¿æ§‹é€ ã‚„ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã®ç†è§£ã‚’å‘ä¸Šã•ã›ã‚‹ã“ã¨ãŒã§ãã¾ã™.  " +
    "(ãã®å‘ä¸ŠãŒè‘—ã—ã„ã‹ã©ã†ã‹ã¯, Steven Halim åšå£«ãŒä»Šã‚»ãƒ¡ã‚¹ã‚¿ãƒ¼ã®ã‚¢ãƒ«ã‚´ãƒªã‚ºãƒ ã®è¬›ç¾©ã§è¡Œã£ã¦ã„ã‚‹å®Ÿé¨“çµ‚äº†å¾Œã«åˆ¤æ˜Žã™ã‚‹ã§ã—ã‚‡ã†.) " +
    "ã“ã®ãƒ¯ã‚¯ãƒ¯ã‚¯ã™ã‚‹ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å•é¡Œã«æŒ‘æˆ¦ã—ãŸã„æ–¹ã¯, ã“ã®ãƒšãƒ¼ã‚¸ã®å³ä¸Šã® 'ãƒˆãƒ¬ãƒ¼ãƒ‹ãƒ³ã‚°ã‚’é–‹å§‹!' ãƒœã‚¿ãƒ³ã‚’ã‚¯ãƒªãƒƒã‚¯ã—ã¦ãã ã•ã„.<br><br></p>");

    $("#bug").html("<h2>ãƒã‚°ãƒ¬ãƒãƒ¼ãƒˆã‚„æ–°é …ç›®ã®ãƒªã‚¯ã‚¨ã‚¹ãƒˆ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo ã¯å®Œäº†ã—ãŸãƒ—ãƒ­ã‚¸ã‚§ã‚¯ãƒˆã§ã¯ã‚ã‚Šã¾ã›ã‚“. Steven Halim åšå£«ã¨å½¼ã®ãƒãƒ¼ãƒ ã¯å¼•ãç¶šã VisuAlgo ã®æ”¹å–„ã«å–ã‚Šçµ„ã‚“ã§ã„ã¾ã™. " +
    "å¯è¦–åŒ–ãƒšãƒ¼ã‚¸ã‚„ã‚ªãƒ³ãƒ©ã‚¤ãƒ³å•é¡Œãƒ„ãƒ¼ãƒ«ã‚’ä½¿ã£ã¦, ã‚‚ã—, ãƒã‚°ã«æ°—ã¥ã„ãŸã‚Š, æ–°ã—ã„é …ç›®ã‚„æ©Ÿèƒ½ã«ã¤ã„ã¦ãƒªã‚¯ã‚¨ã‚¹ãƒˆãŒç”Ÿã˜ãŸã‚Šã™ã‚Œã°, Steven Halim åšå£«ã«é€£çµ¡ã—ã¦ãã ã•ã„. " +
    "å½¼ã®é€£çµ¡å…ˆã¯, å½¼ã®åå‰ã‚’ã¤ãªã’ã¦ãã‚Œã«ã‚¢ãƒƒãƒˆãƒžãƒ¼ã‚¯ã¨ gmail.com ã‚’åŠ ãˆãŸã‚‚ã®ã§ã™.<br></p><br>");

    $("#publications").html("<h2>ç™ºè¡¨</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">ã“ã®æˆæžœã¯ ACM ICPC World Finals 2012 (Poland, Warsaw) ã® CLI Workshop ã¨," +
    "IOI 2012 (Sirmione-Montichiari, Italy) ã® IOI Conference ã§ç™ºè¡¨ã•ã‚Œã¦ã„ã¾ã™. " +
    "You can click <a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">this link</a> to read our 2012 paper about this system (it was not yet called VisuAlgo back in 2012).<br><br></p>");
  }
  else if (language == 'de') { // German: de, Contributors: Lukas Fritzsche, Wolfgang Pohl
    sorting = new Array("sorting", "bubble", "select", "insert", "merge", "quick", "randomized quick", "selection", "insertion", "counting", "radix", "sort", "cs2020", "cs1020", "cs1010", "cs3230", "Reihung", "Liste", "Datenstruktur", "Algorithmus", "sorting");
    bitmask = new Array("bitmask", "Bitmanipulation", "Boolean", "Reihung", "small set", "cs3233", "cs2020", "cs2010", "Liste", "Datenstruktur", "Bitmaske");
    linked = new Array("linked", "Stapelspeicher", "Warteschlange", "einfach", "doppelt", "deque", "cs2020", "cs1020", "Reihung", "Datenstruktur", "verkettet", "Liste");
    bst = new Array("bst", "Tabelle", "Menge", "map", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "Rekursion", "rekursiv", "Datenstruktur", "AVL", "BinÃ¤rersuchbaum");
    heap = new Array("heap", "Vorrangwarteschlange", "Heapsort", "rekursiv", "cs2020", "cs2010", "Rekursion", "Datenstruktur", "Baum", "BinÃ¤rer Heap");
    graphs = new Array("graphs", "Baum", "vollstÃ¤ndig", "bipartit", "DAG", "Adjazenzmatrix", "Adjazenzliste", "Kantenliste", "cs2010", "cs2020", "Datenstruktur", "Graphen");
    union = new Array("union", "UFDS", "Baum", "komprimieren", "rank", "Pfadkompression", "union by rank", "cs3233", "cs2020", "cs2010", "Reihung", "Menge", "Rekursion", "rekursiv", "Datenstruktur", "Union-Find Disjoint Sets");
    segment = new Array("segmenttree", "Bereich", "Min/Max/Sum", "lazy update", "rekursiv", "cs3233", "Rekursion", "data structure", "Segment Tree");
    bit = new Array("bit", "Fenwick", "Bereich", "BIT", "Range/Point Query/Update", "cs3233", "Rekursion", "rekursiv", "Datenstruktur", "Binary Indexed Tree");
    
    recursion = new Array("recursion", "Dynamisches Programmieren", "Baum", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "rekursiv", "Rekursion");

    traversal = new Array("traversal", "DFS", "BFS", "toposort", "SCC", "2-SAT", "topologisches Sortieren", "Starke Zusammenhangskomponente", "bipartite check", "cs2010", "cs2020", "cs3230", "Algorithmus", "Tarjan", "Kosaraju", "Kahn", "Graph", "Traversierung");
    mst = new Array("mst", "MST", "Prim", "Kruskal", "Algorithmus", "cs2020", "cs2010", "Graphen", "minimal", "spannender", "Baum");
    sssp = new Array("sssp", "SSSP", "Bellman Ford", "Dijkstra", "BFS", "cs2010", "cs2020", "graphs", "algorithm", "Single-Source Shortest Paths");
    maxflow = new Array("maxflow", "maximaler Fluss", "minimaler Schnitt", "Edmonds Karp", "Dinic", "Ford Fulkerson", "Graphen", "cs2020", "cs3233", "Algorithmus", "Netzwerkfluss");
    matching = new Array("matching", "augmenting path", "Hopcroft Karp", "Edmonds", "cs3233", "Graphen", "Algorithmen", "Matching")

    suffixtree = new Array("suffixtree", "Matching", "wiederholt", "hÃ¤ufig", "String", "cs3233", "tree", "suffix", "Datenstruktur", "Suffixbaum");
    suffixarray = new Array("suffixarray", "Sortieren", "common prefix", "String", "LCP", "Matching", "Sortieren", "wiederholt", "hÃ¤ufig", "cs3233", "Datenstruktur", "Suffix", "Reihung", "Suffixreihung");

    geometry = new Array("geometry", "Polygon", "winding number", "inPolygon", "Schnitt-Polygon", "Umfang", "konvex", "konkav", "konvexe HÃ¼lle", "Graham Scan", "cs3233", "Algorithmus", "algorithmische Geometrie");
  }
  else if (language == 'ko') { // Korean: ko, ko-kr, Contributors: Gyun Woo, Moon Seokmin
    $("#training-link").html("ì—°ìŠµ ì‹œìž‘!");
    $("#test-link").html("ì§„í–‰ì¤‘ì¸ í…ŒìŠ¤íŠ¸");
    $("#ans-link").html("ì´ì „ í…ŒìŠ¤íŠ¸ ì •ë‹µ");

    searchtext = "ê²€ìƒ‰...";

    sorting = new Array("sorting", "ì •ë ¬", "ê±°í’ˆ", "ì„ íƒ", "ì‚½ìž…", "ë³‘í•©", "í€µ", "í€µ(ë¬´ìž‘ìœ„ í”¼ë´‡ ì„ íƒ)", "ì„ íƒ", "ì‚½ìž…", "ê³„ìˆ˜", "ìžë¦¿ìˆ˜", "ì •ë ¬", "cs2020", "cs1020", "cs1010", "cs3230", "ë°°ì—´", "ë¦¬ìŠ¤íŠ¸", "ìžë£Œêµ¬ì¡°", "ì •ë ¬");
    bitmask = new Array("bitmask", "ë¹„íŠ¸ë§¤ìŠ¤í¬", "ë¹„íŠ¸ ë‹¤ë£¨ê¸°", "Boolean", "ë°°ì—´", "ìž‘ì€ ì§‘í•©", "cs3233", "cs2020", "cs2010", "ë¦¬ìŠ¤íŠ¸", "ìžë£Œêµ¬ì¡°", "ë¹„íŠ¸ë§¤ìŠ¤í¬");
    linked = new Array("linked", "ì—°ê²°", "ìŠ¤íƒ", "í", "ë‹¨ë°©í–¥", "ì–‘ë°©í–¥", "deque", "ì—°ê²°", "ë¦¬ìŠ¤íŠ¸", "cs2020", "cs1020", "ë°°ì—´", "ìžë£Œêµ¬ì¡°");
    bst = new Array("bst", "í…Œì´ë¸”", "ì§‘í•©", "ë§µ", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "ìž¬ê·€í˜¸ì¶œ", "ìž¬ê·€ì ", "ìžë£Œêµ¬ì¡°", "ì´ì§„ íƒìƒ‰ íŠ¸ë¦¬", "AVL");
    heap = new Array("heap", "íž™", "ìš°ì„ ìˆœìœ„ í", "íž™ ì •ë ¬", "ìž¬ê·€ì ", "cs2020", "cs2010", "ìž¬ê·€í˜¸ì¶œ", "ìžë£Œêµ¬ì¡°", "íŠ¸ë¦¬", "ì´ì§„ íž™");
    graphs = new Array("graphs", "ê·¸ëž˜í”„", "íŠ¸ë¦¬", "ì™„ì „", "ì´ë¶„", "DAG", "ì¸ì ‘ í–‰ë ¬", "ì¸ì ‘ ë¦¬ìŠ¤íŠ¸", "ê°„ì„  ë¦¬ìŠ¤íŠ¸", "cs2010", "cs2020", "ê·¸ëž˜í”„");
    union = new Array("union", "í•©ì§‘í•©", "UFDS", "íŠ¸ë¦¬", "ì••ì¶•", "ëž­í¬", "ê²½ë¡œ ì••ì¶•", "ëž­í¬ë¥¼ ì´ìš©í•œ í•©ì§‘í•©", "cs3233", "cs2020", "cs2010", "ë°°ì—´", "ì§‘í•©", "ìž¬ê·€í˜¸ì¶œ", "ìž¬ê·€ì ", "ìžë£Œêµ¬ì¡°", "Union Find Disjoint Sets");
    segment = new Array("segmenttree", "ë²”ìœ„", "Min/Max/Sum", "ì§€ì—° ê°±ì‹ ", "ìž¬ê·€ì ", "cs3233", "ìž¬ê·€í˜¸ì¶œ", "ìžë£Œêµ¬ì¡°", "ì„¸ê·¸ë¨¼íŠ¸ íŠ¸ë¦¬");
    bit = new Array("bit", "ë¹„íŠ¸", "Fenwick", "ë²”ìœ„", "BIT", "Range/Point Query/Update", "cs3233", "ìž¬ê·€í˜¸ì¶œ", "ìž¬ê·€ì ", "ìžë£Œêµ¬ì¡°", "ì´ì§„ ìƒ‰ì¸ íŠ¸ë¦¬");
    
    recursion = new Array("recursion", "ìž¬ê·€í˜¸ì¶œ", "ë™ì  í”„ë¡œê·¸ëž˜ë°", "íŠ¸ë¦¬", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "ìž¬ê·€ì ", "ìž¬ê·€í˜¸ì¶œ");
    
    traversal = new Array("traversal", "ìˆœíšŒ", "DFS", "BFS", "toposort", "SCC", "2-SAT", "ìœ„ìƒì •ë ¬", "ê°•ì—°ê²°ì„±ë¶„", "ì´ë¶„ ê²€ì‚¬", "cs2010", "cs2020", "cs3230", "ì•Œê³ ë¦¬ì¦˜", "ê·¸ëž˜í”„", "ìˆœíšŒ", "Tarjan", "Kosaraju", "Kahn");
    mst = new Array("mst", "MST", "í”„ë¦¼(Prim)", "í¬ë£¨ìŠ¤ì¹¼(Kruskal)", "ì•Œê³ ë¦¬ì¦˜", "cs2020", "cs2010", "min", "ì‹ ìž¥", "íŠ¸ë¦¬", "ê·¸ëž˜í”„");
    sssp = new Array("sssp", "SSSP", "BFS", "ë²¨ë§Œí¬ë“œ(Bellman Ford)", "ëŒìŠ¤íŠ¸ë¼(Dijkstra)", "cs2010", "cs2020", "í•œ ì ì—ì„œ ì‹œìž‘ë˜ëŠ” ìµœë‹¨ê²½ë¡œ", "ê·¸ëž˜í”„", "ì•Œê³ ë¦¬ì¦˜");
    maxflow = new Array("maxflow", "max flow", "min cut", "Edmonds Karp", "Dinic", "Ford Fulkerson", "ê·¸ëž˜í”„", "cs2020", "cs3233", "ì•Œê³ ë¦¬ì¦˜");
    matching = new Array("matching", "ë§¤ì¹­", "augmenting path", "Hopcroft Karp", "Edmonds", "cs3233", "ë§¤ì¹­", "ê·¸ëž˜í”„", "ì•Œê³ ë¦¬ì¦˜")
    
    suffixtree = new Array("suffixtree", "ë§¤ì¹­", "ë°˜ë³µëœ", "ê³µí†µì˜", "ë¬¸ìžì—´", "cs3233", "íŠ¸ë¦¬", "ì ‘ë¯¸ì‚¬", "ìžë£Œêµ¬ì¡°", "ì ‘ë¯¸ì‚¬ íŠ¸ë¦¬");
    suffixarray = new Array("suffixarray", "ì •ë ¬", "LCP", "string", "ì •ë ¬", "ë§¤ì¹­", "ë°˜ë³µëœ", "ê³µí†µì˜", "ì ‘ë¯¸ì‚¬ ë°°ì—´", "cs3233", "ë°°ì—´", "ì ‘ë¯¸ì‚¬", "ìžë£Œêµ¬ì¡°");

    geometry = new Array("geometry", "ê¸°í•˜", "ë‹¤ê°í˜•", "ë‘˜ë ˆ", "ë³¼ë¡", "winding number", "inPolygon", "cut polygon", "ì˜¤ëª©", "convex hull", "Graham ìŠ¤ìº”", "cs3233", "ê³„ì‚°ê¸°í•˜í•™");

    $("#subtitle").html("ì˜ìƒì„ í†µí•œ ìžë£Œêµ¬ì¡°ì™€ ì•Œê³ ë¦¬ì¦˜ì˜ ì‹œê°í™” (í•œêµ­ì–´íŒ) (Korean)");
    $("#sortingtext").html("ì •ë ¬");
    $("#bitmasktext").html("ë¹„íŠ¸ë§¤ìŠ¤í¬");
    $("#linkedtext").html("ì—°ê²°");
    $("#bsttext").html("ìž¬ê·€í˜¸ì¶œ");
    $("#heaptext").html("íž™");
    $("#graphstext").html("ê·¸ëž˜í”„");
    $("#uniontext").html("Union-Find Disjoint Sets");
    $("#segmenttreetext").html("Segment Tree");
    $("#bittext").html("ë¹„íŠ¸");
    $("#recursiontext").html("ìž¬ê·€í˜¸ì¶œ");

    $("#traversaltext").html("ìˆœíšŒ");
    $("#msttext").html("ì‹ ìž¥íŠ¸ë¦¬");
    $("#sssptext").html("í•œ ì ì—ì„œ ì‹œìž‘ë˜ëŠ” ìµœë‹¨ê²½ë¡œ");
    $("#maxflowtext").html("Network Flow");
    $("#matchingtext").html("ë§¤ì¹­");
    $("#suffixtreetext").html("ì ‘ë¯¸ì‚¬ íŠ¸ë¦¬");
    $("#suffixarraytext").html("ì ‘ë¯¸ì‚¬ ë°°ì—´");
    $("#geometrytext").html("ê³„ì‚°ê¸°í•˜í•™");

    $("#abouttext").html("VisuAlgoì— ëŒ€í•˜ì—¬");

    $("#motivation").html("<h2>ë™ê¸°</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">" +
    "VisuAlgoëŠ”2011ë…„ì— Steven Halim ë°•ì‚¬ì— ì˜í•´ ê³ ì•ˆëœ ë„êµ¬ë¡œì¨, ìžë£Œêµ¬ì¡°ì™€ ì•Œê³ ë¦¬ì¦˜ì˜ ê¸°ë³¸ì„ ìŠ¤ìŠ¤ë¡œ ë°°ìš¸ ìˆ˜ ìžˆê²Œ í•´ì£¼ì–´ í•™ìƒë“¤ì˜ ì´í•´ë¥¼ ë•ê¸° ìœ„í•´ ë§Œë“¤ì–´ì§„ Steven ë°•ì‚¬ì˜ ë¶„ì‹ ê³¼ë„ ê°™ìŠµë‹ˆë‹¤." +
    "ì‹±ê°€í´ êµ­ë¦½ ëŒ€í•™êµì˜ í•™ìƒë“¤(Team ì°¸ì¡°)ê³¼ í•¨ê»˜ ê°„ë‹¨í•œ ì •ë ¬ ì•Œê³ ë¦¬ì¦˜ë¶€í„° ë³µìž¡í•œ ê·¸ëž˜í”„ êµ¬ì¡°ì™€ ì•Œê³ ë¦¬ì¦˜, ê·¸ë¦¬ê³  ë¬¸ìžì—´ê³¼ ê¸°í•˜ ì•Œê³ ë¦¬ì¦˜ê¹Œì§€ ì¼ë ¨ì˜ ì‹œê°í™”ë¥¼ ê°œë°œí•˜ì˜€ìŠµë‹ˆë‹¤.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">" +
    "VisuAlgoëŠ”Steven Halim ë°•ì‚¬ì˜ ì±…(ë°•ì‚¬ì˜ ë™ìƒì¸ Felix Halimê³¼ ê³µì €í•œ 'Competitive Programming 3')ë“±ì—ì„œì˜ ë‹¤ì–‘í•œ ê³ ê¸‰ ì•Œê³ ë¦¬ì¦˜ì´ ë“¤ì–´ìœ¼ë©°, ì´ë“¤ì¤‘ ì¼ë¶€ ê³ ê¸‰ ì•Œê³ ë¦¬ì¦˜ì˜ ì‹œê°í™”ëŠ” í˜„ìž¬ ì˜¤ë¡œì§€ VisuAlgoë¥¼ í†µí•´ì„œë§Œ ë§Œë‚˜ì‹¤ ìˆ˜ ìžˆìŠµë‹ˆë‹¤." +
    "ì˜ˆë¥¼ë“¤ì–´, ê·¸ëž˜í”„ ìˆœíšŒ ì•Œê³ ë¦¬ì¦˜ì˜ ê²½ìš° ì¼ë°˜ì ì¸ ê¹Šì´ìš°ì„  íƒìƒ‰(DFS)ì™€ ë„ˆë¹„ìš°ì„  íƒìƒ‰(BFS)ë¿ë§Œ ì•„ë‹ˆë¼ ê·¸ ë³€í˜• ë˜í•œ ë‹¤ë£¨ê³  ìžˆìŠµë‹ˆë‹¤." +
    "(e.g  DFSë¥¼ ë³€í˜•í•˜ì—¬ ë¶„í•  ì •ì (articulation point; Cut Vertex)ì´ë‚˜ ë¸Œë¦¿ì§€ë¥¼ ì°¾ëŠ” ì•Œê³ ë¦¬ì¦˜, ë°©í–¥ ê·¸ëž˜í”„ì—ì„œ ê°•ì—°ê²°ì„±ë¶„(SCC)ì„ ì°¾ê¸° ìœ„í•œ Tarjan ì•Œê³ ë¦¬ì¦˜, Kosaraju ì•Œê³ ë¦¬ì¦˜, ê°„ë‹¨í•œ 2-SAT ì¶”ë¡  ê·¸ëž˜í”„ë¥¼ í†µí•´ ë…¼ë¦¬ì‹ì´ ë§Œì¡±ë  ìˆ˜ ìžˆëŠ”ì§€ ê²€ì‚¬í•˜ëŠ” ê³¼ì • ë“±ë“±<br><br></p>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">" +
    "VisuAlgoëŠ” ì‹±ê°€í´ êµ­ë¦½ ëŒ€í•™êµì˜ ìžë£Œêµ¬ì¡°ì™€ ì•Œê³ ë¦¬ì¦˜ ê³¼ëª©ë“¤(e.g. " +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a> ë“±))ì˜ í•™ìƒë“¤ì„ ìœ„í•´ ê°œë°œë˜ì—ˆìœ¼ë‚˜, ì˜¨ë¼ì¸ êµìœ¡ì˜ ì§€ì§€ìžë¡œì„œ ì €í¬ëŠ” VisuAlgoê°€ ì „ì„¸ê³„ì˜ ì§€ì‹ì˜ íƒêµ¬ìžë“¤ì—ê²Œ ë„ì›€ì´ ë˜ê¸¸ ë°”ëžë‹ˆë‹¤.<br><br></p>");

    $("#developments").html("<h2>ê°œë°œ í˜„í™©</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">" +
    "VisuAlgoëŠ” í˜„ìž¬ì§„í–‰ì¤‘ì¸ í”„ë¡œì íŠ¸ë¡œ, ë” ë³µìž¡í•œ ì‹œê°í™”ì˜ ê°œë°œì„ í•˜ê³  ìžˆìŠµë‹ˆë‹¤. " + 
    "í˜„ìž¬ ìž‘ì—…ì¤‘ì¸ ì‹œê°í™”ëŠ” ë‹¤ìŒê³¼ ê°™ìŠµë‹ˆë‹¤: í•´ì‹œí…Œì´ë¸” (ì—¬ëŸ¬ê°€ì§€ í…Œí¬ë‹‰ì„ í™œìš©í•  ì˜ˆì •), ìž­ ì—ë“œëª¬ë“œì˜ ê·¸ëž˜í”„ ë§¤ì¹­ ì•Œê³ ë¦¬ì¦˜, ë¥˜ì¶” ì—ë“œëª¬ë“œì˜ Directed MST ì•Œë¡œë¦¬ì¦˜ ë“±ë“±.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">í•˜ì§€ë§Œ ê°€ìž¥ ê¸°ëŒ€ë˜ëŠ” ê°œë°œì€ ë¬¸ì œ ìƒì„±ê¸°ì™€ ê²€ì •ê¸°(ì˜¨ë¼ì¸ í€´ì¦ˆ ì‹œìŠ¤í…œ) ë¡œ, í•™ìƒë“¤ì´ ê¸°ë³¸ì ì¸ ìžë£Œêµ¬ì¡°ì™€ ì•Œê³ ë¦¬ì¦˜ì„ìŠ¤ìŠ¤ë¡œ í…ŒìŠ¤íŠ¸ í•  ìˆ˜ ìžˆê²Œ í•´ì£¼ëŠ” ì‹œìŠ¤í…œìž…ë‹ˆë‹¤. " +
    "ì§œì—¬ì§„ ê·œì¹™ë“¤ì„ í†µí•´ ë¬¸ì œë“¤ì´ <b>ë¬´ìž‘ìœ„</b>ë¡œ ìƒì„±ë˜ë©°, í•™ìƒë“¤ì˜ ë‹µë³€ì€ <b>ë‹µë³€ ì œì¶œ ì¦‰ì‹œ ì²´ì </b>ë˜ê²Œ ë©ë‹ˆë‹¤.  " +
    "ì˜¨ë¼ì¸ í€´ì¦ˆ ì‹œìŠ¤í…œì´ í™œì„±í™” ë˜ë©´ ë§Žì€ ëŒ€í•™êµì—ì„œ ì“°ì´ëŠ” ì¼ë°˜ì ì¸ ìžë£Œêµ¬ì¡°ì™€ ì•Œê³ ë¦¬ì¦˜ ë¬¸ì œë“¤ì´ ì‚¬ì‹¤ìƒ í•„ìš” ì—†ê²Œ ë©ë‹ˆë‹¤. " +
    "ì‚¬ì‹¤ìƒ ë¬´í•œí•œ ì—°ìŠµ ë¬¸ì œê°€ ìžˆê¸° ë•Œë¬¸ì—, ì»´í“¨í„° ê³µí•™ ê°•ì‚¬ê°€ ì˜¨ë¼ì¸ í€´ì¦ˆì— ì•½ê°„ì˜ ì ìˆ˜ë¥¼ ë°°ì í•˜ëŠ”ê²ƒë§Œìœ¼ë¡œ ê¸°ë³¸ì ì¸ ë¬¸ì œë“¤ì— ëŒ€í•œ í•™ìƒë“¤ì˜ ìˆ™ë ¨ë„ë¥¼ í–¥ìƒì‹œí‚¬ ìˆ˜ ìžˆìŠµë‹ˆë‹¤. " +
    "(Steven Halim ë°•ì‚¬ê°€ ì´ë²ˆ í•™ê¸° í•™ìƒë“¤ì„ í†µí•´ íš¨ê³¼ë¥¼ í™•ì¸í•´ ë³´ê³  ìžˆëŠ”ì¤‘) " +
    "ì˜¨ë¼ì¸ í€´ì¦ˆëŠ” ì‚¬ì´íŠ¸ ìš°ì¸¡ ìƒë‹¨ì˜ \"ì—°ìŠµ ì‹œìž‘!\" ë²„íŠ¼ì„ ëˆŒëŸ¬ í•´ë³´ì‹¤ ìˆ˜ ìžˆìŠµë‹ˆë‹¤.<br><br></p>");

    $("#bug").html("<h2>ë²„ê·¸ ë¦¬í¬íŠ¸ì™€ ìƒˆë¡œìš´ ê¸°ëŠ¥ ê±´ì˜</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo í”„ë¡œì íŠ¸ëŠ” ì•„ì§ ëë‚˜ì§€ ì•Šì•˜ìŠµë‹ˆë‹¤. Steven Halimë°•ì‚¬ì™€ íŒ€ì›ë“¤ì´ í˜„ìž¬ë„ ê³„ì†í•´ì„œ VisuAlgoë¥¼ í–¥ìƒì‹œí‚¤ê³  ìžˆìŠµë‹ˆë‹¤. " +
    "í˜¹ì‹œë‚˜ ì‹œê°í™”ë‚˜ ì˜¨ë¼ì¸ í€´ì¦ˆì—ì„œ ë²„ê·¸ë¥¼ ë°œê²¬í•˜ì‹œê±°ë‚˜ ìƒˆë¡œìš´ ê¸°ëŠ¥ì„ ê±´ì˜í•˜ê³  ì‹¶ìœ¼ì‹œë‹¤ë©´ Steven Halim ë°•ì‚¬ì—ê²Œ ë¬¸ì˜í•˜ì‹œê¸° ë°”ëžë‹ˆë‹¤. " +
    "Steven Halimë°•ì‚¬ì˜ ì´ë©”ì¼ì€ stevenhalim@gmail.comìž…ë‹ˆë‹¤.<br></p><br>");

    $("#publications").html("<h2>ê³µê°œ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgoëŠ” í´ëž€ë“œ ë±Œë¥´ìƒ¤ë°”ì—ì„œ ì—´ë¦° ACM ICPC World Finals 2012ì˜ CLI ì›Œí¬ìƒµê³¼ " +
    "ì´íƒˆë¦¬ì•„ì˜ Sirmione-Montichiariì—ì„œ ì—´ë¦° IOI Conference at IOI 2012ì—ì„œ ê°„ëžµí•˜ê²Œ  ê³µê°œë˜ì—ˆìŠµë‹ˆë‹¤. " +
    "<b><a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">ë§í¬</a></b>ë¥¼ í†µí•´ ì´ ì‹œìŠ¤í…œì— ëŒ€í•´ 2012ë…„ì— ë°œí‘œëœ ë‚´ìš©ì„ í™•ì¸í•˜ì‹¤ ìˆ˜ ìžˆìŠµë‹ˆë‹¤.(ë‹¹ì‹œëŠ” VisuAlgoë¼ê³  ë¶ˆë¦¬ì§€ ì•Šì•˜ìŒ).<br><br></p>");
  }
  else if (language == 'vi') { // Vietnamese: vi, vi-vn, Contributors: Le Xuan Manh
    $("#training-link").html("Báº¯t Ä‘áº§u luyá»‡n táº­p!");
    $("#test-link").html("Tham gia thá»­ nghiá»‡m");
    $("#ans-link").html("Tráº£ lá»i cÃ¢u há»i cuá»‘i cÃ¹ng");

    searchtext = "TÃ¬m kiáº¿m...";

    sorting = new Array("sorting", "Ná»•i bá»t", "Lá»±a chá»n", "ChÃ¨n", "Sáº¯p xáº¿p trá»™n", "Sáº¯p xáº¿p nhanh", "Sáº¯p xáº¿p ngáº«u nhiÃªn nhanh", "Lá»±a chá»n", "ChÃ¨n", "Äáº¿m phÃ¢n phá»‘i", "Sáº¯p xáº¿p theo cÆ¡ sá»‘", "Sáº¯p xáº¿p", "cs2020", "cs1020", "cs1010", "cs3230", "Máº£ng", "Danh sÃ¡ch", "Cáº¥u trÃºc dá»¯ liá»‡u", "Sáº¯p xáº¿p");
    bitmask = new Array("bitmask", "Thao tÃ¡c bit", "Boolean", "Máº£ng", "Táº­p há»£p nhá»", "cs3233", "cs2020", "cs2010", "Danh sÃ¡ch", "Cáº¥u trÃºc dá»¯ liá»‡u", "bitmask");
    linked = new Array("linked", "NgÄƒn xáº¿p (Stack)", "HÃ ng Ä‘á»£i (Queue)", "MÃ³c ná»‘i", "Má»™t chiá»u", "Hai chiá»u", "Hai chiá»u", "MÃ³c ná»‘i (Linked)", "Danh sÃ¡ch (List)", "cs2020", "cs1020", "Máº£ng", "Cáº¥u trÃºc dá»¯ liá»‡u");
    bst = new Array("bst", "table", "set", "map", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "Ä‘á»‡ quy", "Ä‘á»‡ quy", "Cáº¥u trÃºc dá»¯ liá»‡u", "CÃ¢y tÃ¬m kiáº¿m nhá»‹ phÃ¢n", "CÃ¢y cÃ¢n báº±ng AVL"); 
    heap = new Array("heap", "HÃ ng Ä‘á»£i Æ°u tiÃªn", "Heap sort", "Äá»‡ quy", "cs2020", "cs2010", "Äá»‡ quy", "Cáº¥u trÃºc dá»¯ liá»‡u", "CÃ¢y", "Heap nhá»‹ phÃ¢n");
    graphs = new Array("graphs", "CÃ¢y", "Äáº§y Ä‘á»§", "Hai phÃ­a", "DAG", "Ma tráº­n ká»", "Äá»“ thá»‹", "Danh sÃ¡ch ká»", "Danh sÃ¡ch cáº¡nh", "cs2010", "cs2020", "Äá»“ thá»‹");
    union = new Array("union", "Union-Find Disjoint Sets", "Há»£p nháº¥t", "UFDS", "CÃ¢y", "NÃ©n", "Báº­c", "NÃ©n Ä‘Æ°á»ng", "Há»£p nháº¥t theo báº­c", "cs3233", "cs2020", "cs2010", "Máº£ng", "Táº­p há»£p", "Äá»‡ quy", "Äá»‡ quy", "Cáº¥u trÃºc dá»¯ liá»‡u", "TÃ¬m kiáº¿m â€“ Há»£p nháº¥t cÃ¡c táº­p rá»i ráº¡c");
    segment = new Array("segmenttree", "Min/Max/Sum", "lazy update", "CÃ¢y phÃ¢n Ä‘oáº¡n (IT)", "PhÃ¢n Ä‘oáº¡n", "Äá»‡ quy", "cs3233", "Äá»‡ quy", "Cáº¥u trÃºc dá»¯ liá»‡u", "CÃ¢y phÃ¢n Ä‘oáº¡n");
    bit = new Array("bit", "Binary Indexed Tree", "BIT", "Xáº¿p loai (range)", "Xáº¿p loáº¡i (range)/Truy váº¥n Ä‘iá»ƒm (Point Query)/Cáº­p nháº­t (update)", "cs3233", "Äá»‡ quy", "Äá»‡ quy", "Cáº¥u trÃºc dá»¯ liá»‡u", "CÃ¢y chá»‰ sá»‘ nhá»‹ phÃ¢n (BIT)");
 
    recursion = new Array("recursion", "Äá»‡ quy", "Dynamic Programming", "CÃ¢y", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "Äá»‡ quy", "Äá»‡ quy");
 
    traversal = new Array("traversal", "DFS", "BFS", "Toposort", "SCC", "ÄÆ°á»ng Ä‘i", "2-SAT", "Sáº¯p xáº¿p topo", "ThÃ nh pháº§n liÃªn thÃ´ng máº¡nh", "bipartite check", "cs2010", "cs2020", "cs3230", "Thuáº­t toÃ¡n", "Äá»“ thá»‹", "ÄÆ°á»ng Ä‘i", "Tarjan", "Kosaraju", "Kahn");
    mst = new Array("mst", "MST", "Prim", "Kruskal", "Thuáº­t toÃ¡n", "cs2020", "cs2010", "nhá» nháº¥t", "CÃ¢y khung", "CÃ¢y", "Äá»“ thá»‹");
    sssp = new Array("sssp", "SSSP", "Bellman Ford", "Dijkstra", "BFS", "cs2010", "cs2020", "ÄÆ°á»ng Ä‘i Ä‘Æ¡n ngáº¯n nháº¥t", "Äá»“ thá»‹", "Thuáº­t toÃ¡n");
    maxflow = new Array("maxflow", "Edmonds Karp", "Dinic", "Ford Fulkerson", "Luá»“ng cá»±c Ä‘áº¡i", "LÃ¡t cáº¯t nhá» nháº¥t (Min cut)", "Äá»“ thá»‹", "cs2020", "cs3233", "Thuáº­t toÃ¡n");
    matching = new Array("matching", "ÄÆ°á»ng tÄƒng", "Hopcroft Karp", "Edmonds", "Cáº·p ghÃ©p", "cs3233", "Cáº·p ghÃ©p", "Äá»“ thá»‹", "thuáº­t toÃ¡n");
 
    suffixtree = new Array("suffixtree", "CÃ¢y háº­u tá»‘ (Suffix-tree)", "Cáº·p ghÃ©p", "Láº·p láº¡i (repeated)", "Phá»• biáº¿n (common)", "Chuá»—i", "cs3233", "CÃ¢y", "Háº­u tá»‘", "Cáº¥u trÃºc dá»¯ liá»‡u", "CÃ¢y háº­u tá»‘ (Suffix-tree)");
    suffixarray = new Array("suffixarray", "Máº£ng háº­u tá»‘ (Suffix-array)", "sáº¯p xáº¿p", "LCP", "XÃ¢u", "Sáº¯p xáº¿p", "GhÃ©p cáº·p", "Láº·p láº¡i (repeated)", "Phá»• biáº¿n (common)", "Máº£ng háº­u tá»‘ (Suffix-array)", "cs3233", "Máº£ng", "Háº­u tá»‘", "Cáº¥u trÃºc dá»¯ liá»‡u");
 
    geometry = new Array("geometry", "HÃ¬nh há»c", "Äa giÃ¡c", "Chu vi", "Lá»“i", "winding number", "Trong Ä‘a giÃ¡c", "Cáº¯t Ä‘a giÃ¡c", "LÃµm", "Bao lá»“i", "QuÃ©t Graham", "cs3233", "HÃ¬nh há»c tÃ­nh toÃ¡n");
 
    $("#subtitle").html("HÃ¬nh dung cáº¥u trÃºc dá»¯ liá»‡u vÃ  thuáº­t toÃ¡n thÃ´ng qua hÃ¬nh áº£nh trá»±c quan (Vietnamese)");
    $("#sortingtext").html("Sáº¯p xáº¿p (Sorting)");
    $("#bitmasktext").html("Bitmask");
    $("#linkedtext").html("Danh sÃ¡ch liÃªn káº¿t (Linked-list)");
    $("#bsttext").html("CÃ¢y tÃ¬m kiáº¿m nhá»‹ phÃ¢n, AVL Tree");
    $("#heaptext").html("Heap nhá»‹ phÃ¢n");
    $("#graphstext").html("Cáº¥u trÃºc dá»¯ liá»‡u Ä‘á»“ thá»‹");
    $("#uniontext").html("TÃ¬m kiáº¿m - Há»£p nháº¥t cÃ¡c táº­p rá»i ráº¡c");
    $("#segmenttreetext").html("CÃ¢y phÃ¢n Ä‘oáº¡n (Interval Tree)");
    $("#bittext").html("CÃ¢y chá»‰ sá»‘ nhá»‹ phÃ¢n (Fenwick Tree)");
    $("#recursiontext").html("Generic Recursion Tree/DAG");
 
    $("#traversaltext").html("ÄÆ°á»ng Ä‘i trÃªn Ä‘á»“ thá»‹");
    $("#msttext").html("CÃ¢y khung nhá» nháº¥t");
    $("#sssptext").html("ÄÆ°á»ng Ä‘i Ä‘Æ¡n ngáº¯n nháº¥t");
    $("#maxflowtext").html("Luá»“ng trÃªn máº¡ng");
    $("#matchingtext").html("Cáº·p ghÃ©p trÃªn Ä‘á»“ thá»‹");
    $("#suffixtreetext").html("CÃ¢y háº­u tá»‘ (Suffix-tree)");
    $("#suffixarraytext").html("Máº£ng háº­u tá»‘ (Suffix-array)");
    $("#geometrytext").html("(TÃ­nh toÃ¡n) HÃ¬nh há»c");
 
    $("#abouttext").html("Giá»›i thiá»‡u VisuAlgo");

    $("#motivation").html("<h2>Nguá»“n gá»‘c</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo Ä‘Æ°á»£c thiáº¿t káº¿ vÃ o nÄƒm 2011 bá»Ÿi Dr Steven Halim nhÆ° má»™t cÃ´ng cá»¥ Ä‘á»ƒ giÃºp há»c sinh hiá»ƒu rÃµ hÆ¡n vá» cáº¥u trÃºc dá»¯ liá»‡u vÃ  giáº£i thuáº­t, " +
    "báº±ng cÃ¡ch cho phÃ©p há» tÃ¬m hiá»ƒu tá»« má»©c cÆ¡ báº£n theo cÃ¡ch vÃ  tá»‘c Ä‘á»™ cá»§a riÃªng mÃ¬nh. VisuAlgo giá»‘ng nhÆ° má»™t báº£n sao 24/7. " +
    "CÃ¹ng vá»›i má»™t sá»‘ sinh viÃªn cá»§a trÆ°á»ng Äáº¡i há»c Quá»‘c Gia Singapore NUS (xem á»Ÿ 'Team'), má»™t loáº¡t cÃ¡c hÃ¬nh áº£nh trá»±c quan Ä‘Ã£ vÃ  Ä‘ang Ä‘Æ°á»£c xÃ¢y dá»±ng, cá»§ng cá»‘; " +
    "tá»« nhá»¯ng thuáº­t toÃ¡n sáº¯p xáº¿p Ä‘Æ¡n giáº£n cho Ä‘áº¿n nhá»¯ng cáº¥u trÃºc dá»¯ liá»‡u phá»©c táº¡p, bÃªn cáº¡nh Ä‘Ã³ cÃ²n cÃ³ chuá»—i vÃ  má»™t sá»‘ thuáº­t toÃ¡n vá» hÃ¬nh há»c.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">VisuAlgo chá»©a <b>nhiá»u thuáº­t toÃ¡n cao cáº¥p</b> Ä‘Æ°á»£c tháº£o luáº­n trong cuá»‘n sÃ¡ch cá»§a Dr Steven Halim" +
    "(Note: Cuá»‘n sÃ¡ch <a href=\"http://sites.google.com/site/stevenhalim/\">'Competitive Programming 3'</a> vá»›i Ä‘á»“ng tÃ¡c giáº£ Dr Felix Halim (em trai cá»§a Dr Steven Halim)). " +
    "Táº¡i thá»i Ä‘iá»ƒm nÃ y, hÃ¬nh áº£nh trá»±c quan cá»§a má»™t sá»‘ thuáº­t toÃ¡n cao cáº¥p cÃ³ thá»ƒ <b>only</b> Ä‘Æ°á»£c tÃ¬m tháº¥y á»Ÿ VisuAlgo. " +
    "VÃ­ dá»¥, trong <a href=\"dfsbfs.html\">ÄÆ°á»ng Ä‘i trÃªn Ä‘á»“ thá»‹ </a>, chÃºng ta khÃ´ng chá»‰ tháº£o luáº­n vá» thuáº­t toÃ¡n Depth-First Search (DFS) vÃ  Breadth-First Search (BFS) mÃ  cÃ²n vá» sá»± khÃ¡c nhau giá»¯a chÃºng, e.g. " +
    "sá»± biáº¿n Ä‘á»•i trong DFS vá» tÃ¬m kiáº¿m khá»›p (Cut Vertex) vÃ  cáº§u, DFS Tarjan vÃ  Kosaraju giá»‘ng nhÆ° thuáº­t toÃ¡n tÃ¬m thÃ nh pháº§n liÃªn thÃ´ng máº¡nh (SCCs) cá»§a má»™t Ä‘á»“ thá»‹ cÃ³ hÆ°á»›ng, " +
    "chÃºng ta cÃ²n cÃ³ thá»ƒ hÃ¬nh dung sá»± hoáº¡t Ä‘á»™ng cá»§a má»™t Ä‘á»“ thá»‹ 2-SAT(isfiablity) vÃ  kiá»ƒm tra vÃ­ dá»¥ cÃ³ thá»a mÃ£n.</p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">Máº·c dÃ¹ Ä‘Æ°á»£c thiáº¿t káº¿ riÃªng cho há»c sinh NUS tháº£o luáº­n trong nhá»¯ng khÃ³a há»c vá» cáº¥u trÃºc dá»¯ liá»‡u vÃ  giáº£i thuáº­t (vÃ­ dá»¥ " +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, vÃ  " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a>), lÃ  nhá»¯ng ngÆ°á»i á»§ng há»™ viá»‡c nghiÃªn cá»©u trá»±c tuyáº¿n, chÃºng tÃ´i hi vá»ng nhá»¯ng ngÆ°á»i Ä‘am mÃª nghiÃªn cá»©u trÃªn toÃ n tháº¿ giá»›i sáº½ tÃ¬m tháº¥y nhá»¯ng hÃ¬nh áº£nh trá»±c quan há»¯u Ã­ch.<br><br></p>");

    $("#developments").html("<h2>Ongoing developments</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo lÃ  má»™t dá»± Ã¡n Ä‘ang phÃ¡t triá»ƒn vÃ  nhiá»u hÃ¬nh áº£nh trá»±c quan phá»©c táº¡p hÆ¡n váº«n Ä‘ang Ä‘Æ°á»£c tiáº¿p tá»¥c má»Ÿ rá»™ng. " + 
    "The following visualizations are next in line to be developed by our team: Hash trÃªn báº£ng (sá»­ dá»¥ng nhiá»u kÄ© thuáº­t hashing khÃ¡c nhau), Jack Edmonds' thuáº­t toÃ¡n Cáº·p ghÃ©p trÃªn Ä‘á»“ thá»‹, Chu-Liu Edmonds' thuáº­t toÃ¡n cho Directed MST, etc.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">However, the most exciting development is an automated question generator and verifier (the online quiz system) " +
    "that allows student to test their knowledge of basic data structures and algorithms. " +
    "The questions are <b>randomly generated</b> via some rules and students' answers are <b>instantly and automatically graded</b> upon submission to our grading server. " +
    "This online quiz system, when it matures, should technically eliminate <b>manual</b> basic data structure and algorithm questions from typical Computer Science examinations in many Universities. " +
    "By setting a small (but non-zero) weightage on passing the online quiz, a CS instructor can (significantly? -- to be proven after Dr Steven Halim finished this experiment with his algorithm class this semester) " +
    "increase his/her students mastery on these basic questions as the students have virtually infinite number of training questions that can be verified instantly before they take the online quiz. " +
    "To try this exciting online quiz feature, click the 'Start training!' button on the top right corner of this page.<br><br></p>");

    $("#bug").html("<h2>Bug Reports or Request for New Features</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo is not a finished project. Dr Steven Halim and his team are still actively improving VisuAlgo. " +
    "If you spot a bug in any of our visualization page/online quiz tool or if you want to request for new features, please contact Dr Steven Halim. " +
    "His contact is the concatenation of his name and add gmail dot com.<br></p><br>");

    $("#publications").html("<h2>Publications</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">This work has been presented briefly at the CLI Workshop at the ACM ICPC World Finals 2012 (Poland, Warsaw) " +
    "and at the IOI Conference at IOI 2012 (Sirmione-Montichiari, Italy). " +
    "You can click <a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">this link</a> to read our 2012 paper about this system (it was not yet called VisuAlgo back in 2012).<br><br></p>");
  }
  else if (language == 'th') { // Thai: th, th-th Contributors: Ramon Bespinyowong
    $("#training-link").html("à¹€à¸£à¸´à¹ˆà¸¡à¸•à¹‰à¸™à¸à¸²à¸£à¸à¸¶à¸!");
    $("#test-link").html("à¹€à¸‚à¹‰à¸²à¸£à¹ˆà¸§à¸¡à¸šà¸—à¸—à¸”à¸ªà¸­à¸š");
    $("#ans-link").html("à¸„à¸³à¸•à¸­à¸šà¸šà¸—à¸—à¸”à¸ªà¸­à¸š");

    searchtext = "à¸„à¹‰à¸™à¸«à¸²";

    sorting = new Array("sorting", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¸¥à¸³à¸”à¸±à¸š", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¸Ÿà¸­à¸‡", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¹€à¸¥à¸·à¸­à¸", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¸¥à¸³à¸”à¸±à¸šà¹à¸—à¸£à¸", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¸œà¸ªà¸²à¸™", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¹€à¸£à¹‡à¸§", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¹€à¸£à¹‡à¸§", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¹€à¸¥à¸·à¸­à¸", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¹à¸—à¸£à¸", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¸™à¸±à¸šà¸ˆà¸³à¸™à¸§à¸™", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¹€à¸£à¸”à¸´à¸à¸‹à¹Œ", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡", "cs2020", "cs1020", "cs1010", "cs3230", "à¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ", "à¸¥à¸´à¸ªà¸•à¹Œ", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡", "à¸à¸²à¸£à¸ˆà¸±à¸”à¹€à¸£à¸µà¸¢à¸‡");
    bitmask = new Array("bitmask", "à¸•à¸±à¸§à¸”à¸³à¹€à¸™à¸´à¸™à¸à¸²à¸£à¸£à¸°à¸”à¸±à¸šà¸šà¸´à¸—", "à¸à¸²à¸£à¸ˆà¸±à¸”à¸à¸²à¸£à¸šà¸´à¸—", "à¸šà¸¹à¸¥à¸µà¸™", "à¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ", "à¹€à¸‹à¸—à¹€à¸¥à¹‡à¸", "cs3233", "cs2020", "cs2010", "à¸¥à¸´à¸ªà¸•à¹Œ", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸•à¸±à¸§à¸”à¸³à¹€à¸™à¸´à¸™à¸à¸²à¸£à¸£à¸°à¸”à¸±à¸šà¸šà¸´à¸—");
    linked = new Array("linked", "à¸¥à¸´à¸‡à¸„à¹Œ", "à¹à¸ªà¸•à¸", "à¸„à¸´à¸§", "à¹à¸šà¸šà¸—à¸´à¸¨à¸—à¸²à¸‡à¹€à¸”à¸µà¸¢à¸§", "à¹à¸šà¸šà¸ªà¸­à¸‡à¸—à¸´à¸¨à¸—à¸²à¸‡", "à¹€à¸”à¸„", "cs2020", "cs1020", "à¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸¥à¸´à¸‡à¸„à¹Œ", "à¸¥à¸´à¸ªà¸•à¹Œ");
    bst = new Array("bst", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¸„à¹‰à¸™à¸«à¸²à¹à¸šà¸šà¸—à¸§à¸´à¸ à¸²à¸„", "à¸•à¸²à¸£à¸²à¸‡", "à¹€à¸‹à¸—", "à¹à¸¡à¸ž", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¸„à¹‰à¸™à¸«à¸²à¹à¸šà¸šà¸—à¸§à¸´à¸ à¸²à¸„", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¸—à¸µà¹ˆà¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "AVL", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¸„à¹‰à¸™à¸«à¸²à¹à¸šà¸šà¸—à¸§à¸´à¸ à¸²à¸„"); 
    heap = new Array("heap", "à¸®à¸µà¸ž", "à¹à¸–à¸§à¸„à¸­à¸¢à¸¥à¸³à¸”à¸±à¸šà¸„à¸§à¸²à¸¡à¸ªà¸³à¸„à¸±à¸", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¹à¸šà¸šà¸®à¸µà¸ž", "à¸—à¸µà¹ˆà¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "cs2020", "cs2010", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸à¸£à¸²à¸Ÿ", "à¸®à¸µà¸žà¸—à¸§à¸´à¸™à¸²à¸¡");
    graphs = new Array("graphs", "à¸à¸£à¸²à¸Ÿ", "à¸•à¹‰à¸™à¹„à¸¡à¹‰", "à¸ªà¸¡à¸šà¸¹à¸£à¸“à¹Œ", "à¸à¸£à¸²à¸Ÿà¸ªà¸­à¸‡à¸ªà¹ˆà¸§à¸™", "à¸à¸£à¸²à¸Ÿà¸£à¸°à¸šà¸¸à¸—à¸´à¸¨à¸—à¸²à¸‡", "à¹€à¸¡à¸—à¸£à¸´à¸à¸‹à¹Œà¸›à¸£à¸°à¸Šà¸´à¸” (Adjacency Matrix)", "à¸£à¸²à¸¢à¸à¸²à¸£à¸›à¸£à¸°à¸Šà¸´à¸” (Adjacency list)", "à¸£à¸²à¸¢à¸à¸²à¸£à¸”à¹‰à¸²à¸™ (edge list)", "cs2010", "cs2020", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸à¸£à¸²à¸Ÿ");
    union = new Array("union", "à¸¢à¸¹à¹€à¸™à¸µà¸¢à¸™", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹€à¸‹à¸•à¹„à¸¡à¹ˆà¸¡à¸µà¸ªà¹ˆà¸§à¸™à¸£à¹ˆà¸§à¸¡", "à¸•à¹‰à¸™à¹„à¸¡à¹‰", "à¸šà¸µà¸šà¸­à¸±à¸”", "à¸¥à¸³à¸”à¸±à¸š", "à¸à¸²à¸£à¸šà¸µà¸šà¸­à¸±à¸”à¸§à¸´à¸–à¸µ (Path compression)", "à¸¢à¸¹à¹€à¸™à¸µà¸¢à¸™à¹‚à¸”à¸¢à¸¥à¸³à¸”à¸±à¸š (union by rank)", "cs3233", "cs2020", "cs2010", "à¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ", "à¹€à¸‹à¸•", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¸—à¸µà¹ˆà¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹€à¸‹à¸•à¹„à¸¡à¹ˆà¸¡à¸µà¸ªà¹ˆà¸§à¸™à¸£à¹ˆà¸§à¸¡");
    segment = new Array("segmenttree", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹€à¸‹à¸à¹€à¸¡à¸™à¸•à¹Œ", "à¸‚à¸­à¸šà¹€à¸‚à¸•", "à¸™à¹‰à¸­à¸¢à¸ªà¸¸à¸”/à¸¡à¸²à¸à¸ªà¸¸à¸”/à¸œà¸¥à¸£à¸§à¸¢", "à¸à¸²à¸£à¸­à¸±à¸žà¹€à¸”à¸•à¸­à¸¢à¹ˆà¸²à¸‡à¸‚à¸µà¹‰à¹€à¸à¸µà¸¢à¸ˆ", "à¸—à¸µà¹ˆà¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "cs3233", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹€à¸‹à¸à¹€à¸¡à¸™à¸•à¹Œ");
    bit = new Array("bit", "à¸šà¸´à¸—", "à¹€à¸Ÿà¸™à¸§à¸´à¸„", "à¸‚à¸­à¸šà¹€à¸‚à¸•", "BIT", "à¸„à¹‰à¸™à¸«à¸²à¸‚à¸­à¸šà¹€à¸‚à¸•/à¸„à¹‰à¸™à¸«à¸²à¸ˆà¸¸à¸”/à¸­à¸±à¸žà¹€à¸”à¸•", "cs3233", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¸—à¸µà¹ˆà¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¸”à¸±à¸Šà¸™à¸µà¸—à¸§à¸´à¸ à¸²à¸„");

    recursion = new Array("recursion", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¸à¸²à¸£à¸à¸³à¸«à¸™à¸”à¸à¸²à¸£à¹€à¸Šà¸´à¸‡à¸žà¸¥à¸§à¸±à¸• (Dynamic Programming)", "à¸•à¹‰à¸™à¹„à¸¡à¹‰", "à¸à¸£à¸²à¸Ÿà¸£à¸°à¸šà¸¸à¸—à¸´à¸¨à¸—à¸²à¸‡", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "à¸—à¸µà¹ˆà¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”", "à¸à¸²à¸£à¹€à¸§à¸µà¸¢à¸™à¹€à¸à¸´à¸”");

    traversal = new Array("traversal", "à¸à¸²à¸£à¸—à¹ˆà¸­à¸‡à¸à¸£à¸²à¸Ÿ", "à¸à¸²à¸£à¸—à¹ˆà¸­à¸‡à¸à¸£à¸²à¸Ÿà¹à¸šà¸šà¸¥à¸¶à¸", "à¸à¸²à¸£à¸—à¹ˆà¸­à¸‡à¸à¸£à¸²à¸Ÿà¹à¸šà¸šà¸à¸§à¹‰à¸²à¸‡", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¸¥à¸³à¸”à¸±à¸šà¹à¸šà¸šà¸—à¸­à¸žà¸­à¹‚à¸¥à¸¢à¸µ", "à¸ªà¹ˆà¸§à¸™à¸›à¸£à¸°à¸à¸­à¸šà¸—à¸µà¹ˆà¹€à¸Šà¸·à¹ˆà¸­à¸¡à¸à¸±à¸™à¹à¸šà¸šà¹€à¸‚à¹‰à¸¡", "2-SAT", "à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸‡à¸¥à¸³à¸”à¸±à¸šà¹à¸šà¸šà¸—à¸­à¸žà¸­à¹‚à¸¥à¸¢à¸µ ", "à¸ªà¹ˆà¸§à¸™à¸›à¸£à¸°à¸à¸­à¸šà¸—à¸µà¹ˆà¹€à¸Šà¸·à¹ˆà¸­à¸¡à¸à¸±à¸™à¹à¸šà¸šà¹€à¸‚à¹‰à¸¡", "à¸à¸²à¸£à¸•à¸£à¸§à¸ˆà¸ªà¸­à¸šà¸à¸£à¸²à¸Ÿà¸ªà¸­à¸‡à¸ªà¹ˆà¸§à¸™", "cs2010", "cs2020", "cs3230", "à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡", "Tarjan", "Kosaraju", "Kahn", "à¸à¸£à¸²à¸Ÿ", "à¸à¸²à¸£à¸—à¹ˆà¸­à¸‡à¸à¸£à¸²à¸Ÿ");
    mst = new Array("mst", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹à¸šà¸šà¸—à¸­à¸”à¸‚à¹‰à¸²à¸¡à¸™à¹‰à¸­à¸¢à¸ªà¸¸à¸”", "à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹à¸šà¸šà¸—à¸­à¸”à¸‚à¹‰à¸²à¸¡à¸™à¹‰à¸­à¸¢à¸ªà¸¸à¸” (MST)", "Prim", "Kruskal", "à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡", "cs2020", "cs2010", "à¸à¸£à¸²à¸Ÿ", "à¸™à¹‰à¸­à¸¢à¸ªà¸¸à¸”", "à¹à¸™à¸§à¸à¸§à¹‰à¸²à¸‡", "à¸•à¹‰à¸™à¹„à¸¡à¹‰");
    sssp = new Array("sssp", "à¸§à¸´à¸–à¸µà¸ªà¸±à¹‰à¸™à¸ªà¸¸à¸”à¸ˆà¸¸à¸”à¸à¸³à¹€à¸™à¸´à¸”à¹€à¸”à¸µà¸¢à¸§", "à¸§à¸´à¸–à¸µà¸ªà¸±à¹‰à¸™à¸ªà¸¸à¸”à¸ˆà¸¸à¸”à¸à¸³à¹€à¸™à¸´à¸”à¹€à¸”à¸µà¸¢à¸§", "à¸à¸²à¸£à¸„à¹‰à¸™à¸«à¸²à¹ƒà¸™à¹à¸™à¸§à¸à¸§à¹‰à¸²à¸‡", "Bellman Ford", "Dijkstra", "cs2010", "cs2020", "à¸à¸£à¸²à¸Ÿ", "à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡", "à¸§à¸´à¸–à¸µà¸ªà¸±à¹‰à¸™à¸ªà¸¸à¸”à¸ˆà¸¸à¸”à¸à¸³à¹€à¸™à¸´à¸”à¹€à¸”à¸µà¸¢à¸§");
    maxflow = new Array("maxflow", "à¸à¸²à¸£à¹„à¸«à¸¥à¸¡à¸²à¸à¸—à¸µà¹ˆà¸ªà¸¸à¸”", "à¸à¸²à¸£à¹„à¸«à¸¥à¸¡à¸²à¸à¸—à¸µà¹ˆà¸ªà¸¸à¸”", "à¸à¸²à¸£à¸•à¸±à¸”à¸•à¹ˆà¸³à¸ªà¸¸à¸”", "Edmonds Karp", "Dinic", "Ford Fulkerson", "à¸à¸£à¸²à¸Ÿ", "cs2020", "cs3233", "à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡", "à¸à¸²à¸£à¹„à¸«à¸¥à¸‚à¸­à¸‡à¹€à¸„à¸£à¸·à¸­à¸‚à¹ˆà¸²à¸¢ (network flow)");
    matching = new Array("matching", "à¸à¸²à¸£à¸ˆà¸±à¸šà¸„à¸¹à¹ˆ", "à¸§à¸´à¸–à¸µà¹à¸•à¹ˆà¸‡à¹€à¸•à¸´à¸¡ (augmenting path)", "Hopcroft Karp", "Edmonds", "cs3233", "à¸à¸£à¸²à¸Ÿ", "à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡", "à¸à¸²à¸£à¸ˆà¸±à¸šà¸„à¸¹à¹ˆ")

    suffixtree = new Array("suffixtree", "à¸‹à¸±à¸Ÿà¸Ÿà¸´à¸à¸‹à¹Œà¸—à¸£à¸µ", "à¸à¸²à¸£à¸ˆà¸±à¸šà¸„à¸¹à¹ˆ", "à¸‹à¹‰à¸³", "à¸£à¹ˆà¸§à¸¡à¸à¸±à¸™", "à¸ªà¸•à¸£à¸´à¸‡", "cs3233", "à¸•à¹‰à¸™à¹„à¸¡à¹‰", "à¸ªà¹ˆà¸§à¸™à¹€à¸ªà¸£à¸´à¸¡à¸—à¹‰à¸²à¸¢", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸‹à¸±à¸Ÿà¸Ÿà¸´à¸à¸‹à¹Œà¸—à¸£à¸µ");
    suffixarray = new Array("suffixarray", "à¸‹à¸±à¸Ÿà¸Ÿà¸´à¸à¸‹à¹Œà¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ ", "à¸à¸²à¸£à¸ˆà¸±à¸”à¹€à¸£à¸µà¸¢à¸‡", "à¸à¸²à¸£à¹€à¸Šà¸·à¹ˆà¸­à¸¡à¸•à¹ˆà¸­à¸£à¸°à¸«à¸§à¹ˆà¸²à¸‡à¸¥à¸³à¸”à¸±à¸šà¸¢à¹ˆà¸­à¸¢à¸£à¹ˆà¸§à¸¡à¸¢à¸²à¸§à¸ªà¸¸à¸” (LCP)", "à¸ªà¸•à¸£à¸´à¸‡", "à¸à¸²à¸£à¸ˆà¸±à¸”à¹€à¸£à¸µà¸¢à¸‡", "à¸à¸²à¸£à¸ˆà¸±à¸šà¸„à¸¹à¹ˆ", "à¸‹à¹‰à¸³", "à¸£à¹ˆà¸§à¸¡à¸à¸±à¸™", "cs3233", "à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥", "à¸ªà¹ˆà¸§à¸™à¹€à¸ªà¸£à¸´à¸¡à¸—à¹‰à¸²à¸¢", "à¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ", "à¸‹à¸±à¸Ÿà¸Ÿà¸´à¸à¸‹à¹Œà¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ");

    geometry = new Array("geometry", "à¹€à¸£à¸‚à¸²à¸„à¸“à¸´à¸•", "à¸£à¸¹à¸›à¸«à¸¥à¸²à¸¢à¸¡à¸¸à¸¡", "à¹€à¸ªà¹‰à¸™à¸œà¹ˆà¸²à¸¨à¸¹à¸™à¸¢à¹Œà¸à¸¥à¸²à¸‡", "à¹€à¸§à¹‰à¸² (convex)", "à¸•à¸±à¸§à¹€à¸¥à¸‚à¸§à¸µà¸™à¸”à¸´à¹‰à¸‡ (winding number)", "à¸£à¸¹à¸›à¸«à¸¥à¸²à¸¢à¹€à¸«à¸¥à¸µà¹ˆà¸¢à¸¡à¹ƒà¸™ (inPolygon)", "à¸£à¸¹à¸›à¸•à¸±à¸”à¸«à¸¥à¸²à¸¢à¹€à¸«à¸¥à¸µà¹ˆà¸¢à¸¡ (cut polygon)", "à¸™à¸¹à¸™ (concave)", "à¸„à¸­à¸™à¹€à¸§à¸à¸‹à¹Œà¸®à¸±à¸¥à¸¥à¹Œ (convex hull)", "à¹€à¸à¸£à¹à¸®à¸¡à¸ªà¹à¸à¸™ (Graham scan)", "cs3233", "algorithm", "Computational Geometry");

    $("#subtitle").html("à¸ˆà¸³à¸¥à¸­à¸‡à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹à¸¥à¸°à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸œà¹ˆà¸²à¸™à¸ à¸²à¸žà¹€à¸„à¸¥à¸·à¹ˆà¸­à¸™à¹„à¸«à¸§ (Thai)");
    $("#sortingtext").html("à¸à¸²à¸£à¸ˆà¸±à¸”à¹€à¸£à¸µà¸¢à¸‡ (Sorting)");
    $("#bitmasktext").html("à¸•à¸±à¸§à¸”à¸³à¹€à¸™à¸´à¸™à¸à¸²à¸£à¸£à¸°à¸”à¸±à¸šà¸šà¸´à¸• (Bitmask)");
    $("#linkedtext").html("à¸£à¸²à¸¢à¸à¸²à¸£à¹‚à¸¢à¸‡ (Linked List)"); //, à¸à¸­à¸‡à¸‹à¹‰à¸­à¸™ (Stack), à¹à¸–à¸§à¸„à¸­à¸¢ (Queue), à¹€à¸”à¸„ (Deque)");
    $("#bsttext").html("à¸•à¹‰à¸™à¹„à¸¡à¹‰à¸„à¹‰à¸™à¸«à¸²à¹à¸šà¸šà¸—à¸§à¸´à¸ à¸²à¸„ (BST)"); // inary Search Tree)");
    $("#heaptext").html("à¸®à¸µà¸žà¸—à¸§à¸´à¸™à¸²à¸¡ (Binary Heap)");
    $("#graphstext").html("à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¸à¸£à¸²à¸Ÿ");
    $("#uniontext").html("à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹€à¸‹à¸•à¹„à¸¡à¹ˆà¸¡à¸µà¸ªà¹ˆà¸§à¸™à¸£à¹ˆà¸§à¸¡ (UFDS)"); // Union-Find Disjoint Sets)");
    $("#segmenttreetext").html("à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹€à¸‹à¸à¹€à¸¡à¸™à¸•à¹Œ (Segment Tree)");
    $("#bittext").html("à¸•à¹‰à¸™à¹„à¸¡à¹‰à¸”à¸±à¸Šà¸™à¸µà¸—à¸§à¸´à¸ à¸²à¸„ (BIT)"); // inary Index Tree)");
    $("#recursiontext").html("à¸à¸£à¸²à¸Ÿà¸£à¸°à¸šà¸¸à¸—à¸´à¸¨à¸—à¸²à¸‡ (DAG)");

    $("#traversaltext").html("à¸à¸²à¸£à¸„à¹‰à¸™à¸à¸£à¸²à¸Ÿ(Graph Traversal)");
    $("#msttext").html("à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹à¸šà¸šà¸—à¸­à¸”à¸‚à¹‰à¸²à¸¡à¸™à¹‰à¸­à¸¢à¸ªà¸¸à¸” (MST)"); // inimum Spanning Tree)");
    $("#sssptext").html("à¸§à¸´à¸–à¸µà¸ªà¸±à¹‰à¸™à¸ªà¸¸à¸”à¸‚à¸­à¸‡à¹à¸«à¸¥à¹ˆà¸‡à¸•à¹‰à¸™à¸—à¸²à¸‡à¹€à¸”à¸µà¸¢à¸§ (SSSP)"); // ingle-Source Shortest Paths)");
    $("#maxflowtext").html("à¸à¸²à¸£à¹„à¸«à¸¥à¹ƒà¸™à¹€à¸„à¸£à¸·à¸­à¸‚à¹ˆà¸²à¸¢ (Network Flow)");
    $("#matchingtext").html("à¸à¸²à¸£à¸ˆà¸±à¸šà¸„à¸¹à¹ˆà¸‚à¸­à¸‡à¸à¸£à¸²à¸Ÿ (Graph Matching)");  
    $("#suffixtreetext").html("à¸‹à¸±à¸Ÿà¸Ÿà¸´à¸à¸‹à¹Œà¸—à¸£à¸µ (Suffix Tree)"); 
    $("#suffixarraytext").html("à¸‹à¸±à¸Ÿà¸Ÿà¸´à¸à¸‹à¹Œà¸­à¸²à¸£à¹Œà¹€à¸£à¸¢à¹Œ(Suffix Array)"); 
    $("#geometrytext").html("à¹€à¸£à¸‚à¸²à¸„à¸“à¸´à¸•à¹€à¸Šà¸´à¸‡à¸„à¸³à¸™à¸§à¸“ (C. Geometry)"); // Computational

    $("#abouttext").html("à¹€à¸à¸µà¹ˆà¸¢à¸§à¸à¸±à¸š VisuAlgo");

    $("#motivation").html("<h2>à¹à¸£à¸‡à¸ˆà¸¹à¸‡à¹ƒà¸ˆ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">à¸”à¸£. Steven Halim à¸„à¸´à¸”à¸„à¹‰à¸™ VisuAlgo à¹ƒà¸™à¸›à¸µ 2011 à¹€à¸žà¸·à¹ˆà¸­à¹€à¸›à¹‡à¸™à¹€à¸„à¸£à¸·à¹ˆà¸­à¸‡à¸¡à¸·à¸­à¸ˆà¸³à¸¥à¸­à¸‡à¸ à¸²à¸žà¹ƒà¸«à¹‰à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¹€à¸‚à¹‰à¸²à¹ƒà¸ˆà¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹à¸¥à¸°à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸¡à¸²à¸à¸‚à¸¶à¹‰à¸™" +
    "à¹‚à¸”à¸¢à¹ƒà¸«à¹‰à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¹€à¸£à¸µà¸¢à¸™à¸£à¸¹à¹‰à¸žà¸·à¹‰à¸™à¸à¸²à¸™à¸”à¹‰à¸§à¸¢à¸•à¸±à¸§à¹€à¸­à¸‡à¹ƒà¸™à¸„à¸§à¸²à¸¡à¹€à¸£à¹‡à¸§à¸—à¸µà¹ˆà¹€à¸«à¸¡à¸²à¸°à¸ªà¸¡ à¸à¸²à¸£à¹ƒà¸Šà¹‰ VisuAlgo à¹€à¸›à¸£à¸µà¸¢à¸šà¹€à¸ªà¸¡à¸·à¸­à¸™à¸à¸±à¸šà¸¡à¸µà¸”à¸£. Steven Halim à¸—à¸µà¹ˆà¸ªà¸²à¸¡à¸²à¸£à¸–à¸ªà¸­à¸™à¹„à¸”à¹‰à¸•à¸¥à¸­à¸” 24 à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡ " +
    "à¹€à¸„à¸£à¸·à¹ˆà¸­à¸‡à¸¡à¸·à¸­à¸™à¸µà¹‰à¹„à¸”à¹‰à¸£à¸±à¸šà¸à¸²à¸£à¸žà¸±à¸’à¸™à¸²à¸”à¹‰à¸§à¸¢à¸„à¸§à¸²à¸¡à¸Šà¹ˆà¸§à¸¢à¹€à¸«à¸¥à¸·à¸­à¸ˆà¸²à¸à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¸ˆà¸²à¸à¸¡à¸«à¸²à¸§à¸´à¸—à¸¢à¸²à¸¥à¸±à¸¢à¹à¸«à¹ˆà¸‡à¸Šà¸²à¸•à¸´à¸ªà¸´à¸‡à¸„à¹‚à¸›à¸£à¹Œ (à¸à¸£à¸¸à¸“à¸²à¸”à¸¹à¸—à¸µà¹ˆ 'à¸—à¸µà¸¡à¸‡à¸²à¸™') " +
    "VisuAlgo à¸¡à¸µà¸•à¸±à¹‰à¸‡à¹à¸•à¹ˆà¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¹ƒà¸™à¸à¸²à¸£à¸ˆà¸±à¸”à¹€à¸£à¸µà¸¢à¸‡à¸­à¸¢à¹ˆà¸²à¸‡à¸‡à¹ˆà¸²à¸¢à¹† à¸ˆà¸™à¸–à¸¶à¸‡à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸à¸£à¸²à¸Ÿà¸—à¸µà¹ˆà¸¢à¸²à¸à¹à¸¥à¸°à¸‹à¸±à¸šà¸‹à¹‰à¸­à¸™ à¸™à¸­à¸à¸ˆà¸²à¸à¸™à¸µà¹‰à¸¢à¸±à¸‡à¸¡à¸µà¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¹€à¸à¸µà¹ˆà¸¢à¸§à¸à¸±à¸šà¸ªà¸•à¸£à¸´à¸‡à¹à¸¥à¸°à¹€à¸£à¸‚à¸²à¸„à¸“à¸´à¸•à¸­à¸µà¸à¸”à¹‰à¸§à¸¢<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">VisuAlgo à¸¡à¸µ<b>à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸—à¸µà¹ˆà¸‹à¸±à¸šà¸‹à¹‰à¸­à¸¡à¸ˆà¸³à¸™à¸§à¸™à¸¡à¸²à¸</b>à¸‹à¸¶à¹ˆà¸‡à¸–à¸¹à¸à¸­à¹‰à¸²à¸‡à¸–à¸¶à¸‡à¹ƒà¸™à¸«à¸™à¸±à¸‡à¸ªà¸·à¸­à¸‚à¸­à¸‡ Steven Halim à¹à¸¥à¸°à¸«à¸™à¸±à¸‡à¸ªà¸·à¸­à¹€à¸¥à¹ˆà¸¡à¸­à¸·à¹ˆà¸™à¹†" +
    "(à¹€à¸‚à¸²à¹à¸¥à¸°à¸žà¸µà¹ˆà¸Šà¸²à¸¢à¹€à¸‚à¸² Felix Halim à¹„à¸”à¹‰à¹€à¸‚à¸µà¸¢à¸™à¸«à¸™à¸±à¸‡à¸ªà¸·à¸­à¹€à¸¥à¹ˆà¸™à¸™à¸µà¹‰ <a href=\"http://sites.google.com/site/stevenhalim/\">'Competitive Programming 3'</a>) " +
    "à¸‚à¸“à¸°à¸™à¸µà¹‰ à¹à¸šà¸šà¸ˆà¸³à¸¥à¸­à¸‡à¸«à¸¥à¸²à¸¢à¹†à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸ªà¸²à¸¡à¸²à¸£à¸–à¸„à¹‰à¸™à¸žà¸šà¹„à¸”à¹‰à¹€à¸žà¸µà¸¢à¸‡à¸—à¸µà¹ˆ VisuAlgo<b>à¹€à¸—à¹ˆà¸²à¸™à¸±à¹‰à¸™</b> " +
    "à¸¢à¸à¸•à¸±à¸§à¸­à¸¢à¹ˆà¸²à¸‡à¹€à¸Šà¹ˆà¸™ à¹ƒà¸™<a href=\"dfsbfs.html\">à¸‚à¸±à¹‰à¸™à¸•à¸­à¸™à¸§à¸´à¸˜à¸µà¹ƒà¸™à¸à¸²à¸£à¸—à¹ˆà¸­à¸‡à¸à¸£à¸²à¸Ÿ(Graph Traversal)</a> à¹€à¸£à¸²à¹„à¸¡à¹ˆà¹„à¸”à¹‰à¹€à¸žà¸µà¸¢à¸‡à¹à¸„à¹ˆà¹à¸ªà¸”à¸‡à¹à¸„à¹ˆà¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸—à¸µà¹ˆà¸‡à¹ˆà¸²à¸¢ à¸­à¸¢à¹ˆà¸²à¸‡à¹€à¸Šà¹ˆà¸™ à¸à¸²à¸£à¸„à¹‰à¸™à¸«à¸²à¹à¸™à¸§à¸à¸§à¹‰à¸²à¸‡(Breadth First Search) à¹à¸¥à¸°à¸à¸²à¸£à¸„à¹‰à¸™à¹ƒà¸™à¹à¸™à¸§à¸¥à¸¶à¸ (Depth First Search) à¹€à¸—à¹ˆà¸²à¸™à¸±à¹‰à¸™ à¸«à¸²à¸à¹à¸•à¹ˆà¹€à¸£à¸²à¸¢à¸±à¸‡à¹à¸ªà¸”à¸‡à¸à¸²à¸£à¸›à¸£à¸°à¸¢à¸¸à¸à¸•à¹Œà¹ƒà¸Šà¹‰à¸—à¸µà¹ˆà¸‹à¸±à¸šà¸‹à¹‰à¸­à¸™à¸­à¸µà¸à¸”à¹‰à¸§à¸¢ à¹€à¸Šà¹ˆà¸™ " +
    "à¸à¸²à¸£à¸„à¹‰à¸™à¸«à¸²à¸ˆà¸¸à¸”à¸•à¸±à¸” (Cut Vertex) à¹à¸¥à¸°  à¹€à¸ªà¹‰à¸™à¸•à¸±à¸”(Bridge) à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸‚à¸­à¸‡ Tarjan à¹à¸¥à¸° Kosaraju à¹ƒà¸™à¸à¸²à¸£à¸«à¸²à¸ªà¹ˆà¸§à¸™à¸›à¸£à¸°à¸à¸­à¸šà¸—à¸µà¹ˆà¹€à¸Šà¸·à¹ˆà¸­à¸¡à¸à¸±à¸™à¹à¸šà¸šà¹€à¸‚à¹‰à¸¡ (strongly connected component)à¸‚à¸­à¸‡à¸à¸£à¸²à¸Ÿà¸£à¸°à¸šà¸¸à¸—à¸´à¸¨à¸—à¸²à¸‡(directed graph) " +
    "à¸™à¸­à¸à¸ˆà¸²à¸à¸™à¸µà¹‰à¸žà¸§à¸à¹€à¸£à¸²à¸¢à¸±à¸‡à¹€à¸žà¸´à¹ˆà¸¡à¸„à¸§à¸²à¸¡à¸ªà¸²à¸¡à¸²à¸£à¸–à¹ƒà¸™à¸à¸²à¸£à¹ƒà¸Šà¹‰à¸à¸£à¸²à¸Ÿà¹à¸à¹‰à¸›à¸±à¸à¸«à¸² 2-SAT à¸”à¹‰à¸§à¸¢</p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\"> à¹€à¸§à¸›à¹„à¸‹à¸•à¹Œà¸™à¸µà¹‰à¸–à¸¹à¸à¸­à¸­à¸à¹à¸šà¸šà¸¡à¸²à¹€à¸žà¸·à¹ˆà¸­à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¸¡à¸«à¸²à¸§à¸´à¸—à¸¢à¸²à¸¥à¸±à¸¢à¹à¸«à¹ˆà¸‡à¸Šà¸²à¸•à¸´à¸ªà¸´à¸‡à¸„à¹‚à¸›à¸£à¹Œà¸—à¸µà¹ˆà¹€à¸£à¸µà¸¢à¸™à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹à¸¥à¸°à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡ (à¹€à¸Šà¹ˆà¸™à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¸‚à¸­à¸‡à¸„à¸­à¸£à¹Œà¸ª " +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, à¹à¸¥à¸° " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a>) à¹€à¸žà¸·à¹ˆà¸­à¸ªà¸™à¸±à¸šà¸ªà¸™à¸¸à¸™à¸à¸²à¸£à¹€à¸£à¸µà¸¢à¸™à¸£à¸¹à¹‰à¸­à¸­à¸™à¹„à¸¥à¸™à¹Œ à¸—à¸§à¹ˆà¸² à¸„à¸“à¸°à¸œà¸¹à¹‰à¸ˆà¸±à¸”à¸—à¸³à¸«à¸§à¸±à¸‡à¸§à¹ˆà¸² à¸œà¸¥à¸‡à¸²à¸™à¸™à¸µà¹‰à¸ˆà¸°à¹€à¸›à¹‡à¸™à¸›à¸£à¸°à¹‚à¸¢à¸Šà¸™à¹Œà¸•à¹ˆà¸­à¸™à¸±à¸à¸¨à¸¶à¸à¸©à¸²à¸¡à¸«à¸²à¸§à¸´à¸—à¸¢à¸²à¸¥à¸±à¸¢à¸­à¸·à¹ˆà¸™à¸—à¸±à¹ˆà¸§à¹‚à¸¥à¸à¸”à¹‰à¸§à¸¢à¹€à¸Šà¹ˆà¸™à¸à¸±à¸™<br><br></p>");

    $("#developments").html("<h2>à¸à¸²à¸£à¸žà¸±à¸’à¸™à¸²à¸—à¸µà¹ˆà¸”à¸³à¹€à¸™à¸´à¸™à¸­à¸¢à¸¹à¹ˆ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo à¹€à¸›à¹‡à¸™à¹‚à¸›à¸£à¹€à¸ˆà¸„à¸—à¸µà¹ˆà¸”à¸³à¹€à¸™à¸´à¸™à¸à¸²à¸£à¸­à¸¢à¸¹à¹ˆ à¹à¸šà¸šà¸ˆà¸³à¸¥à¸­à¸‡à¸•à¹ˆà¸²à¸‡à¹†à¸à¸³à¸¥à¸±à¸‡à¸­à¸¢à¸¹à¹ˆà¹ƒà¸™à¸Šà¹ˆà¸§à¸‡à¸žà¸±à¸’à¸™à¸² " + 
    "à¸—à¸µà¸¡à¸‚à¸­à¸‡à¹€à¸£à¸²à¸à¸³à¸¥à¸±à¸‡à¸žà¸±à¸’à¸™à¸²à¹à¸šà¸šà¸ˆà¸³à¸¥à¸­à¸‡à¸•à¹ˆà¸­à¹„à¸›à¸™à¸µà¹‰: à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¹à¸šà¸šà¹à¸®à¸Š (à¹‚à¸”à¸¢à¹ƒà¸Šà¹‰à¹€à¸—à¸„à¸™à¸´à¸„à¸à¸²à¸£à¹à¸®à¸Šà¸«à¸¥à¸²à¸¢à¸Šà¸™à¸´à¸”) à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸ˆà¸±à¸šà¸„à¸¹à¹ˆà¸‚à¸­à¸‡à¸à¸£à¸²à¸Ÿà¹‚à¸”à¸¢ Jack Edmond(Jack Edmonds' Graph Matching algorithm) à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡à¸‚à¸­à¸‡ Chu-Liu Edmonds à¹ƒà¸™à¸à¸²à¸£à¸«à¸²à¸•à¹‰à¸™à¹„à¸¡à¹‰à¹à¸œà¹ˆà¸‚à¸¢à¸²à¸¢à¸•à¹ˆà¸³à¸ªà¸¸à¸” (Minimum Spanning Tree) à¹à¸¥à¸°à¸­à¸·à¹ˆà¸™à¹†<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">à¸­à¸¢à¹ˆà¸²à¸‡à¹„à¸£à¸à¹‡à¸•à¸²à¸¡ à¸ªà¸´à¹ˆà¸‡à¸—à¸µà¹ˆà¸™à¹ˆà¸²à¸ªà¸™à¹ƒà¸ˆà¸—à¸µà¹ˆà¸ªà¸¸à¸”à¸—à¸µà¹ˆà¹„à¸”à¹‰à¸£à¸±à¸šà¸à¸²à¸£à¸žà¸±à¸’à¸™à¸²à¸­à¸¢à¸¹à¹ˆ à¸„à¸·à¸­ à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œ" +
    "à¸‹à¸¶à¹ˆà¸‡à¸­à¸™à¸¸à¸à¸²à¸•à¹ƒà¸«à¹‰à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¹„à¸”à¹‰à¸—à¸”à¸ªà¸­à¸šà¸„à¸§à¸²à¸¡à¸£à¸¹à¹‰à¸”à¹‰à¸²à¸™à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹à¸¥à¸°à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡ " +
    "à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œà¸™à¸µà¹‰à¸—à¸³à¸à¸²à¸£<b>à¸ªà¸¸à¹ˆà¸¡à¸„à¸³à¸–à¸²à¸¡</b> à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¸ˆà¸°à¹„à¸”à¹‰à¸£à¸±à¸šà¸à¸²à¸£<b>à¸•à¸£à¸§à¸ˆà¸„à¸³à¸•à¸­à¸šà¸­à¸±à¸•à¸´à¹‚à¸™à¸¡à¸±à¸•à¸´à¸—à¸±à¸™à¸—à¸µ</b>à¸—à¸µà¹ˆà¸ªà¹ˆà¸‡à¸„à¸³à¸•à¸­à¸šà¹€à¸‚à¹‰à¸²à¹„à¸›à¹ƒà¸™à¸£à¸°à¸šà¸šà¸‚à¸­à¸‡à¹€à¸£à¸² " +
    "à¹€à¸¡à¸·à¹ˆà¸­à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œà¸™à¸µà¹‰à¹€à¸ªà¸£à¹‡à¸ˆà¸ªà¸¡à¸šà¸¹à¸£à¸“à¹Œ à¸¡à¸«à¸²à¸§à¸´à¸—à¸¢à¸²à¸¥à¸±à¸¢à¸ªà¸²à¸¡à¸²à¸£à¸–à¹ƒà¸Šà¹‰à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œà¹ƒà¸™à¸à¸²à¸£à¸§à¸±à¸”à¸„à¸§à¸²à¸¡à¹€à¸‚à¹‰à¸²à¹ƒà¸ˆà¹ƒà¸™à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹à¸¥à¸°à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡ " +
    "à¸„à¸£à¸¹à¸œà¸¹à¹‰à¸ªà¸­à¸™à¸ªà¸²à¸¡à¸²à¸£à¸–à¸—à¸³à¹ƒà¸«à¹‰à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¹€à¸‚à¹‰à¸²à¹ƒà¸ˆà¸žà¸·à¹‰à¸™à¸à¸²à¸™à¸‚à¸­à¸‡à¹‚à¸„à¸£à¸‡à¸ªà¸£à¹‰à¸²à¸‡à¸‚à¹‰à¸­à¸¡à¸¹à¸¥à¹à¸¥à¸°à¸­à¸±à¸¥à¸à¸­à¸£à¸´à¸—à¸¶à¸¡ à¹‚à¸”à¸¢à¹ƒà¸«à¹‰à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¸—à¸³à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œà¸™à¸µà¹‰à¸«à¸¥à¸²à¸¢à¹†à¸„à¸£à¸±à¹‰à¸‡ à¹€à¸žà¸£à¸²à¸°à¹à¸•à¹ˆà¸¥à¸°à¸„à¸£à¸±à¹‰à¸‡ à¸£à¸°à¸šà¸šà¸ˆà¸°à¸ªà¸¸à¹ˆà¸¡à¸„à¸³à¸–à¸²à¸¡à¸—à¸µà¹ˆà¸•à¹ˆà¸²à¸‡à¸à¸±à¸™à¸­à¸­à¸à¹„à¸› " +
    "(à¸‚à¸“à¸°à¸™à¸µà¹‰à¸”à¸£. Steven Halim à¸à¸³à¸¥à¸±à¸‡à¸—à¸”à¸ªà¸­à¸šà¸„à¸§à¸²à¸¡à¸ªà¸²à¸¡à¸²à¸£à¸–à¸‚à¸­à¸‡à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œà¸™à¸µà¹‰à¹ƒà¸™à¸§à¸´à¸Šà¸²à¸‚à¸­à¸‡à¹€à¸‚à¸² à¹à¸¥à¸°à¹€à¸‚à¸²à¸„à¸´à¸”à¸§à¹ˆà¸² à¸£à¸°à¸šà¸šà¸™à¸µà¹‰à¸ªà¸²à¸¡à¸²à¸£à¸–à¸Šà¹ˆà¸§à¸¢à¸™à¸±à¸à¹€à¸£à¸µà¸¢à¸™à¹„à¸”à¹‰à¸¡à¸²à¸) " +
    "à¸«à¸²à¸à¸­à¸¢à¸²à¸à¸—à¸”à¸¥à¸­à¸‡à¹à¸šà¸šà¸—à¸”à¸ªà¸­à¸šà¸­à¸­à¸™à¹„à¸¥à¸™à¹Œà¸™à¸µà¹‰ à¸à¸£à¸¸à¸“à¸²à¸„à¸¥à¸´à¸ 'à¹€à¸£à¸´à¹ˆà¸¡à¸•à¹‰à¸™à¸à¸²à¸£à¸à¸¶à¸!' à¸”à¹‰à¸²à¸™à¸‚à¸§à¸²à¸šà¸™à¸‚à¸­à¸‡à¸«à¸™à¹‰à¸²à¸™à¸µà¹‰<br><br></p>");

    $("#bug").html("<h2>à¸£à¸²à¸¢à¸‡à¸²à¸™à¸šà¸±à¸„à¹à¸¥à¸°à¹€à¸žà¸´à¹ˆà¸¡à¸Ÿà¸µà¹€à¸ˆà¸­à¸£à¹Œà¹ƒà¸«à¸¡à¹ˆ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo à¸¢à¸±à¸‡à¸­à¸¢à¸¹à¹ˆà¹ƒà¸™à¸£à¸°à¸«à¸§à¹ˆà¸²à¸‡à¸à¸²à¸£à¸žà¸±à¸’à¸™à¸²à¹‚à¸”à¸¢ à¸”à¸£. Steven Halim à¹à¸¥à¸°à¸—à¸µà¸¡à¸‡à¸²à¸™ " +
    "à¸–à¹‰à¸²à¸„à¸¸à¸“à¸žà¸šà¸šà¸±à¸„ à¸«à¸£à¸·à¸­à¸„à¸¸à¸“à¸­à¸¢à¸²à¸à¹€à¸žà¸´à¹ˆà¸¡à¸Ÿà¸µà¹€à¸ˆà¸­à¸£à¹Œà¹ƒà¸«à¸¡à¹ˆ à¸à¸£à¸¸à¸“à¸²à¸•à¸´à¸”à¸•à¹ˆà¸” à¸”à¸£. Steven Halim " +
    "à¸„à¸¸à¸“à¸ªà¸²à¸¡à¸²à¸£à¸–à¸•à¸´à¸”à¸•à¹ˆà¸­à¹„à¸”à¹‰à¸—à¸²à¸‡à¸­à¸µà¹€à¸¡à¸¥ à¸„à¸¸à¸“à¸ªà¸²à¸¡à¸²à¸£à¸–à¸«à¸²à¸—à¸µà¹ˆà¸­à¸¢à¸¹à¹ˆà¸­à¸µà¹€à¸¡à¸¥à¹„à¸”à¹‰à¹‚à¸”à¸¢à¸™à¸³à¸Šà¸·à¹ˆà¸­à¸™à¸²à¸¡à¸ªà¸à¸¸à¸¥à¸‚à¸­à¸‡à¸”à¸£. Steven Halim à¸¡à¸²à¹€à¸£à¸µà¸¢à¸‡à¸•à¹ˆà¸­à¸à¸±à¸™à¹à¸¥à¸°à¸¥à¸‡à¸—à¹‰à¸²à¸¢à¸”à¹‰à¸§à¸¢ gmail à¸ˆà¸¸à¸” com<br></p><br>");

    $("#publications").html("<h2>à¸œà¸¥à¸‡à¸²à¸™à¸•à¸µà¸žà¸´à¸¡à¸žà¹Œ</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">à¸œà¸¥à¸‡à¸²à¸™à¸™à¸µà¹‰à¹„à¸”à¹‰à¸£à¸±à¸šà¸à¸²à¸£à¸™à¸³à¹€à¸ªà¸™à¸­à¸—à¸µà¹ˆ CLI Workshop à¸—à¸µà¹ˆ ACM ICPC World Finals 2012 (à¹‚à¸›à¹à¸¥à¸™à¸”à¹Œ, à¸§à¸­à¸£à¹Œà¸‹à¸­à¸£à¹Œ) " +
    "à¹à¸¥à¸°à¹ƒà¸™à¸à¸²à¸£à¸ªà¸±à¸¡à¸¡à¸™à¸²à¸—à¸µà¹ˆ IOI 2012 (à¸­à¸´à¸•à¸²à¸¥à¸µ)" +
    "à¸„à¸¸à¸“à¸ªà¸²à¸¡à¸²à¸£à¸–à¸„à¸¥à¸´à¸<a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">à¸—à¸µà¹ˆà¸™à¸µà¹ˆ</a> à¹€à¸žà¸·à¹ˆà¸­à¸­à¹ˆà¸²à¸™à¹€à¸à¸µà¹ˆà¸¢à¸§à¸à¸±à¸šà¸œà¸¥à¸‡à¸²à¸™à¸Šà¸´à¹‰à¸™à¸™à¸µà¹‰(à¹ƒà¸™à¸›à¸µ 2012 à¸œà¸¥à¸‡à¸²à¸™à¸™à¸µà¹‰à¸¢à¸±à¸‡à¹„à¸¡à¹ˆà¹„à¸”à¹‰à¹€à¸£à¸µà¸¢à¸à¸§à¹ˆà¸² VisuAlgo)<br><br></p>");
  }
  else if (language == 'nl') { // Dutch: nl, Contributors: Eljakim Schrijvers
    sorting = new Array("sorting", "bubble", "select", "insert", "merge", "quick", "randomized quick", "selection", "insertion", "counting", "radix", "sort", "cs2020", "cs1020", "cs1010", "cs3230", "array", "list", "datastructuur", "algoritme", "sorteren");
    bitmask = new Array("bitmask", "bit manipulation", "Boolean", "array", "kleine set", "cs3233", "cs2020", "cs2010", "lijst", "datastructuur", "bitmask");
    linked = new Array("linked", "stack", "queue", "single", "doubly", "deque", "cs2020", "cs1020", "array", "datastructuur", "linked", "list");
    bst = new Array("bst", "table", "set", "map", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "recursie", "recursieve", "datastructuur", "AVL", "binary search tree");
    heap = new Array("heap", "priority queue", "heap sort", "recursieve", "cs2020", "cs2010", "recursie", "datastructuur", "tree", "binary heap");
    graphs = new Array("graphs", "grafen", "tree", "complete", "bipartite", "DAG", "Adjacency Matrix", "Adjacency List", "Edge List", "cs2010", "cs2020", "datastructuur", "grafen");
    union = new Array("union", "UFDS", "tree", "compress", "rank", "path compression", "union by rank", "cs3233", "cs2020", "cs2010", "array", "set", "recursie", "recursieve", "datastructuur", "Union-Find Disjoint Sets");
    segment = new Array("segmenttree", "range", "Min/Max/Sum", "lazy update", "recursieve", "cs3233", "recursie", "datastructuur", "Segment Tree");
    bit = new Array("bit", "Fenwick", "range", "BIT", "Range/Point Query/Update", "cs3233", "recursie", "recursieve", "datastructuur", "Binary Indexed Tree");

    recursion = new Array("recursion", "Dynamic Programming", "tree", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "recursieve", "recursie");

    traversal = new Array("traversal", "DFS", "BFS", "toposort", "SCC", "2-SAT", "topologische sortering", "Strongly Connected Components", "bipartite check", "cs2010", "cs2020", "cs3230", "algoritme", "Tarjan", "Kosaraju", "Kahn", "grafen", "traversal");
    mst = new Array("mst", "MST", "Prim", "Kruskal", "algoritme", "cs2020", "cs2010", "grafen", "min", "spanning", "tree");
    sssp = new Array("sssp", "SSSP", "Bellman Ford", "Dijkstra", "BFS", "cs2010", "cs2020", "grafen", "algoritme", "Single-Source Shortest Paths");
    maxflow = new Array("maxflow", "max flow", "min cut", "Edmonds Karp", "Dinic", "Ford Fulkerson", "grafen", "cs2020", "cs3233", "algoritme", "network flow");
    matching = new Array("matching", "augmenting path", "Hopcroft Karp", "Edmonds", "cs3233", "grafen", "algoritme", "matching")

    suffixtree = new Array("suffixtree", "matching", "repeated", "common", "string", "cs3233", "tree", "suffix", "datastructuur", "suffix tree");
    suffixarray = new Array("suffixarray", "sorting", "common prefix", "string", "LCP", "matching", "sorting", "repeated", "common", "cs3233", "datastructuur", "suffix", "array", "suffix array");

    geometry = new Array("geometry", "polygoon", "winding number", "inPolygon", "cut polygon", "perimeter", "convex", "concave", "convex hull", "Graham scan", "cs3233", "algoritme", "Computational Geometry");
  }
  else { // default: English, Contributors: Steven Halim
    $("#training-link").html("Start training!");
    $("#test-link").html("Join ongoing test");
    $("#ans-link").html("Answers to last test");

    searchtext = "Search...";

    sorting = new Array("sorting", "bubble", "select", "insert", "merge", "quick", "randomized quick", "selection", "insertion", "counting", "radix", "sort", "cs2020", "cs1020", "cs1010", "cs3230", "array", "list", "data structure", "algorithm", "sorting");
    bitmask = new Array("bitmask", "bit manipulation", "Boolean", "array", "small set", "cs3233", "cs2020", "cs2010", "list", "data structure", "bitmask");
    linked = new Array("linked", "stack", "queue", "single", "doubly", "deque", "cs2020", "cs1020", "array", "data structure", "linked", "list");
    bst = new Array("bst", "table", "set", "map", "BST", "Adelson-Velskii Landis", "cs2020", "cs2010", "cs3230", "recursion", "recursive", "data structure", "AVL", "binary search tree"); 
    heap = new Array("heap", "priority queue", "heap sort", "recursive", "cs2020", "cs2010", "recursion", "data structure", "tree", "binary heap");
    graphs = new Array("graphs", "tree", "complete", "bipartite", "DAG", "Adjacency Matrix", "Adjacency List", "Edge List", "cs2010", "cs2020", "data structure", "graphs");
    union = new Array("union", "UFDS", "tree", "compress", "rank", "path compression", "union by rank", "cs3233", "cs2020", "cs2010", "array", "set", "recursion", "recursive", "data structure", "Union-Find Disjoint Sets");
    segment = new Array("segmenttree", "range", "Min/Max/Sum", "lazy update", "recursive", "cs3233", "recursion", "data structure", "Segment Tree");
    bit = new Array("bit", "Fenwick", "range", "BIT", "Range/Point Query/Update", "cs3233", "recursion", "recursive", "data structure", "Binary Indexed Tree");

    recursion = new Array("recursion", "Dynamic Programming", "tree", "DAG", "cs1010", "cs1020", "cs2010", "cs2020", "cs3230", "cs3233", "recursive", "recursion");

    traversal = new Array("traversal", "DFS", "BFS", "toposort", "SCC", "2-SAT", "topological sort", "Strongly Connected Components", "bipartite check", "cs2010", "cs2020", "cs3230", "algorithm", "Tarjan", "Kosaraju", "Kahn", "graphs", "traversal");
    mst = new Array("mst", "MST", "Prim", "Kruskal", "algorithm", "cs2020", "cs2010", "graphs", "min", "spanning", "tree");
    sssp = new Array("sssp", "SSSP", "Bellman Ford", "Dijkstra", "BFS", "cs2010", "cs2020", "graphs", "algorithm", "Single-Source Shortest Paths");
    maxflow = new Array("maxflow", "max flow", "min cut", "Edmonds Karp", "Dinic", "Ford Fulkerson", "graphs", "cs2020", "cs3233", "algorithm", "network flow");
    matching = new Array("matching", "augmenting path", "Hopcroft Karp", "Edmonds", "cs3233", "graphs", "algorithm", "matching")

    suffixtree = new Array("suffixtree", "matching", "repeated", "common", "string", "cs3233", "tree", "suffix", "data structure", "suffix tree");
    suffixarray = new Array("suffixarray", "sorting", "common prefix", "string", "LCP", "matching", "sorting", "repeated", "common", "cs3233", "data structure", "suffix", "array", "suffix array");

    geometry = new Array("geometry", "polygon", "winding number", "inPolygon", "cut polygon", "perimeter", "convex", "concave", "convex hull", "Graham scan", "cs3233", "algorithm", "Computational Geometry");

    hashtable = new Array("table", "collision");
    $("#subtitle").html("visualising data structures and algorithms through animation");
    $("#sortingtext").html("Sorting");
    $("#bitmasktext").html("Bitmask");
    $("#linkedtext").html("Linked List, Stack, Queue, Deque");
    $("#bsttext").html("Binary Search Tree, AVL Tree");
    $("#heaptext").html("Binary Heap");
    $("#graphstext").html("Graph Data Structures");
    $("#uniontext").html("Union-Find Disjoint Sets");
    $("#segmenttreetext").html("Segment Tree");
    $("#bittext").html("Binary Indexed Tree");
    $("#recursiontext").html("Generic Recursion Tree/DAG");

    $("#traversaltext").html("Graph Traversal");
    $("#msttext").html("Minimum Spanning Tree");
    $("#sssptext").html("Single-Source Shortest Paths");
    $("#maxflowtext").html("Network Flow");
    $("#matchingtext").html("Graph Matching");
    $("#suffixtreetext").html("Suffix Tree");
    $("#suffixarraytext").html("Suffix Array");
    $("#geometrytext").html("(Computational) Geometry");
    $("#hashtabletext").html("Hash Table");

    $("#abouttext").html("About VisuAlgo");

    $("#motivation").html("<h2>Motivation</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo was conceptualised in 2011 by Dr Steven Halim as a tool to help his students better understand data structures and algorithms, " +
    "by allowing them to learn the basics on their own and at their own pace. VisuAlgo is like a 24/7 copy of himself. " +
    "Together with some of his students from the National University of Singapore (see the 'Team'), a series of visualisations were developed and consolidated, " +
    "from simple sorting algorithms to complex graph data structures and algorithms, and also string+geometry algorithms.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">VisuAlgo contains <b>many advanced algorithms</b> that are discussed in Dr Steven Halim's book and beyond " +
    "(Note: This <a href=\"http://sites.google.com/site/stevenhalim/\">'Competitive Programming 3'</a> book is co-authored with his brother Dr Felix Halim). " +
    "At this point of time, some of these advanced algorithms visualization/animation can <b>only</b> be found in VisuAlgo. " +
    "For example, in <a href=\"dfsbfs.html\">Graph Traversal visualization</a>, we do not just discuss the standard Depth-First Search (DFS) and Breadth-First Search (BFS) algorithms, but also their variants, e.g. " +
    "the modifications of DFS for finding Articulation Points (Cut Vertex) and Bridges, Tarjan's and Kosaraju's DFS-like algorithms for finding Strongly Connected Components (SCCs) of a directed graph, " +
    "and we also have feature to visualize the implication graph of a small 2-SAT(isfiablity) instance and check if the instance is satisfiable.</p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em\" align=\"left\">Though specifically designed for NUS students taking various data structure and algorithm classes (e.g. " +
    "<a href=\"http://nusmods.com/modules/CS1010\" target=\"_blank\">CS1010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS1020\" target=\"_blank\">CS1020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2010\" target=\"_blank\">CS2010</a>, " +
    "<a href=\"http://nusmods.com/modules/CS2020\" target=\"_blank\">CS2020</a>, " +
    "<a href=\"http://nusmods.com/modules/CS3230\" target=\"_blank\">CS3230</a>, and " +
    "<a href=\"http://nusmods.com/modules/CS3233\" target=\"_blank\">CS3233</a>), as advocators of online learning, we hope that curious minds around the world will find these visualisations useful as well.<br><br></p>");

    $("#developments").html("<h2>Ongoing developments</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo is an ongoing project and more complex visualisations are still being developed. " + 
    "The following visualizations are next in line to be developed by our team: Hash Table (using several hashing techniques), Jack Edmonds' Graph Matching algorithm, Chu-Liu Edmonds' algorithm for Directed MST, etc.<br></p><br>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">However, the most exciting development is an automated question generator and verifier (the online quiz system) " +
    "that allows student to test their knowledge of basic data structures and algorithms. " +
    "The questions are <b>randomly generated</b> via some rules and students' answers are <b>instantly and automatically graded</b> upon submission to our grading server. " +
    "This online quiz system, when it matures, should technically eliminate <b>manual</b> basic data structure and algorithm questions from typical Computer Science examinations in many Universities. " +
    "By setting a small (but non-zero) weightage on passing the online quiz, a CS instructor can (significantly? -- to be proven after Dr Steven Halim finished this experiment with his algorithm class this semester) " +
    "increase his/her students mastery on these basic questions as the students have virtually infinite number of training questions that can be verified instantly before they take the online quiz. " +
    "To try this exciting online quiz feature, click the 'Start training!' button on the top right corner of this page.<br><br></p>");

    $("#bug").html("<h2>Bug Reports or Request for New Features</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">VisuAlgo is not a finished project. Dr Steven Halim and his team are still actively improving VisuAlgo. " +
    "If you spot a bug in any of our visualization page/online quiz tool or if you want to request for new features, please contact Dr Steven Halim. " +
    "His contact is the concatenation of his name and add gmail dot com.<br></p><br>");

    $("#publications").html("<h2>Publications</h2>" +
    "<p style=\"margin-left:5em; margin-right:5em;\" align=\"left\">This work has been presented briefly at the CLI Workshop at the ACM ICPC World Finals 2012 (Poland, Warsaw) " +
    "and at the IOI Conference at IOI 2012 (Sirmione-Montichiari, Italy). " +
    "You can click <a href=\"http://www.ioinformatics.org/oi/shtm/INFOL099.shtml\" target=\"_blank\">this link</a> to read our 2012 paper about this system (it was not yet called VisuAlgo back in 2012).<br><br></p>");
  }

  $("#search").val(searchtext);
  document.title = "VisuAlgo - " + $("#subtitle").html(); // dynamically change the title bar also
}